From d83c9c825f681e6d84ff85cadcdc6317ccf9b2e0 Mon Sep 17 00:00:00 2001
From: Shayne Chen <shayne.chen@mediatek.com>
Date: Mon, 19 Aug 2024 17:38:14 +0800
Subject: [PATCH 41/75] mtk: mt76: mt7996: rework set channel and scan

Cleanup unused export symbol.

Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
---
 mac80211.c      |  4 +--
 mt76.h          |  2 --
 mt7996/mac.c    | 11 ++++----
 mt7996/main.c   | 75 ++++++++++---------------------------------------
 mt7996/mmio.c   |  2 +-
 mt7996/mt7996.h |  3 +-
 6 files changed, 26 insertions(+), 71 deletions(-)

diff --git a/mac80211.c b/mac80211.c
index 06ac737c..efe90a26 100644
--- a/mac80211.c
+++ b/mac80211.c
@@ -908,7 +908,7 @@ bool mt76_has_tx_pending(struct mt76_phy *phy)
 }
 EXPORT_SYMBOL_GPL(mt76_has_tx_pending);
 
-struct mt76_channel_state *
+static struct mt76_channel_state *
 mt76_channel_state(struct mt76_phy *phy, struct ieee80211_channel *c)
 {
 	struct mt76_sband *msband;
@@ -924,7 +924,6 @@ mt76_channel_state(struct mt76_phy *phy, struct ieee80211_channel *c)
 	idx = c - &msband->sband.channels[0];
 	return &msband->chan[idx];
 }
-EXPORT_SYMBOL_GPL(mt76_channel_state);
 
 void mt76_update_survey_active_time(struct mt76_phy *phy, ktime_t time)
 {
@@ -999,6 +998,7 @@ int mt76_set_channel(struct mt76_phy *phy, struct cfg80211_chan_def *chandef,
 
 	return ret;
 }
+EXPORT_SYMBOL_GPL(mt76_set_channel);
 
 int mt76_update_channel(struct mt76_phy *phy)
 {
diff --git a/mt76.h b/mt76.h
index 541067c1..6162a9b6 100644
--- a/mt76.h
+++ b/mt76.h
@@ -1591,8 +1591,6 @@ void mt76_release_buffered_frames(struct ieee80211_hw *hw,
 				  bool more_data);
 bool mt76_has_tx_pending(struct mt76_phy *phy);
 int mt76_update_channel(struct mt76_phy *phy);
-struct mt76_channel_state *
-mt76_channel_state(struct mt76_phy *phy, struct ieee80211_channel *c);
 void mt76_update_survey(struct mt76_phy *phy);
 void mt76_update_survey_active_time(struct mt76_phy *phy, ktime_t time);
 int mt76_get_survey(struct ieee80211_hw *hw, int idx,
diff --git a/mt7996/mac.c b/mt7996/mac.c
index f47bb73c..8fc1c4bc 100644
--- a/mt7996/mac.c
+++ b/mt7996/mac.c
@@ -3332,6 +3332,7 @@ mt7996_scan_send_probe(struct mt7996_phy *phy, struct cfg80211_ssid *ssid,
 	}
 
 	info = IEEE80211_SKB_CB(skb);
+	info->control.flags |= IEEE80211_TX_CTRL_DONT_USE_RATE_MASK;
 	if (req->no_cck)
 		info->flags |= IEEE80211_TX_CTL_NO_CCK_RATE;
 
@@ -3380,9 +3381,9 @@ void mt7996_scan_work(struct work_struct *work)
 		mutex_unlock(&phy->dev->mt76.mutex);
 
 		if (phy->chanctx)
-			mt7996_set_channel(phy, &phy->chanctx->chandef);
+			mt7996_config_channel(phy, &phy->chanctx->chandef);
 		else
-			mt7996_set_channel(phy, &phy->mt76->chandef);
+			mt7996_config_channel(phy, &phy->mt76->chandef);
 
 		return;
 	}
@@ -3395,9 +3396,9 @@ void mt7996_scan_work(struct work_struct *work)
 		mutex_unlock(&phy->dev->mt76.mutex);
 
 		if (phy->chanctx)
-			mt7996_set_channel(phy, &phy->chanctx->chandef);
+			mt7996_config_channel(phy, &phy->chanctx->chandef);
 		else
-			mt7996_set_channel(phy, &phy->mt76->chandef);
+			mt7996_config_channel(phy, &phy->mt76->chandef);
 
 		ieee80211_queue_delayed_work(hw, &phy->scan_work, HZ / 10);
 
@@ -3418,7 +3419,7 @@ void mt7996_scan_work(struct work_struct *work)
 	cfg80211_chandef_create(&chandef, phy->scan_chan, NL80211_CHAN_HT20);
 	mutex_unlock(&phy->dev->mt76.mutex);
 
-	mt7996_set_channel(phy, &chandef);
+	mt7996_config_channel(phy, &chandef);
 
 	if (active_scan) {
 		int i;
diff --git a/mt7996/main.c b/mt7996/main.c
index f58f2131..6adbcf6b 100644
--- a/mt7996/main.c
+++ b/mt7996/main.c
@@ -627,46 +627,12 @@ out:
 	}
 }
 
-static void ___mt7996_set_channel(struct mt7996_phy *phy,
-				 struct cfg80211_chan_def *chandef)
+int mt7996_set_channel(struct mt76_phy *mphy)
 {
-	struct mt76_dev *mdev = phy->mt76->dev;
-	struct mt76_phy *mphy = phy->mt76;
-	bool offchannel = phy->scan_chan != NULL || phy->roc_chan != NULL;
-	int timeout = HZ / 5;
-	unsigned long was_scanning = ieee80211_get_scanning(mphy->hw);
-
-	wait_event_timeout(mdev->tx_wait, !mt76_has_tx_pending(mphy), timeout);
-	mt76_update_survey(mphy);
-
-	if (mphy->chandef.chan->center_freq != chandef->chan->center_freq ||
-	    mphy->chandef.width != chandef->width)
-		mphy->dfs_state = MT_DFS_STATE_UNKNOWN;
-
-	mphy->chandef = *chandef;
-	mphy->chan_state = mt76_channel_state(mphy, chandef->chan);
-
-	if (!offchannel)
-		mphy->main_chan = chandef->chan;
-
-	if (chandef->chan != mphy->main_chan || was_scanning)
-		memset(mphy->chan_state, 0, sizeof(*mphy->chan_state));
-}
-
-static int __mt7996_set_channel(struct mt7996_phy *phy,
-				struct cfg80211_chan_def *chandef)
-{
-	struct mt7996_dev *dev = phy->dev;
-	int ret;
-
-	cancel_delayed_work_sync(&phy->mt76->mac_work);
-
-	mutex_lock(&dev->mt76.mutex);
-	set_bit(MT76_RESET, &phy->mt76->state);
-
-	___mt7996_set_channel(phy, chandef);
+	struct mt7996_phy *phy = mphy->priv;
+	int ret = 0;
 
-	if (dev->cal) {
+	if (phy->dev->cal) {
 		ret = mt7996_mcu_apply_tx_dpd(phy);
 		if (ret)
 			goto out;
@@ -692,28 +658,17 @@ static int __mt7996_set_channel(struct mt7996_phy *phy,
 	phy->noise = 0;
 
 out:
-	clear_bit(MT76_RESET, &phy->mt76->state);
-	mutex_unlock(&dev->mt76.mutex);
-
-	mt76_txq_schedule_all(phy->mt76);
-
-	ieee80211_queue_delayed_work(phy->mt76->hw,
-				     &phy->mt76->mac_work,
+	ieee80211_queue_delayed_work(mphy->hw, &mphy->mac_work,
+				     MT7996_WATCHDOG_TIME);
 
 	return ret;
 }
 
-int mt7996_set_channel(struct mt7996_phy *phy, struct cfg80211_chan_def *chandef)
+int mt7996_config_channel(struct mt7996_phy *phy, struct cfg80211_chan_def *chandef)
 {
-	int ret;
-
-	ieee80211_stop_queues(phy->mt76->hw);
-	ret = __mt7996_set_channel(phy, chandef);
-	if (ret)
-		return ret;
-	ieee80211_wake_queues(phy->mt76->hw);
+	bool offchannel = phy->scan_chan != NULL || phy->roc_chan != NULL;;
 
-	return 0;
+	return mt76_set_channel(phy->mt76, chandef, offchannel);
 }
 
 static int mt7996_set_key(struct ieee80211_hw *hw, enum set_key_cmd cmd,
@@ -1183,7 +1138,7 @@ mt7996_post_channel_switch(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 	if (ret <= 0)
 		return ret;
 
-	return mt7996_set_channel(phy, chandef);
+	return mt7996_config_channel(phy, chandef);
 }
 
 static void mt7996_remove_link_sta(struct mt7996_dev *dev,
@@ -2820,7 +2775,7 @@ void mt7996_roc_complete_work(struct work_struct *work)
 	chandef = phy->chanctx ? &phy->chanctx->chandef : &phy->mt76->chandef;
 	wiphy_info(hw->wiphy, "finish roc work, go back to freq=%u\n",
 			chandef->chan->center_freq);
-	mt7996_set_channel(phy, chandef);
+	mt7996_config_channel(phy, chandef);
 	ieee80211_remain_on_channel_expired(hw);
 }
 
@@ -2908,7 +2863,7 @@ mt7996_remain_on_channel(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 	mutex_unlock(&phy->dev->mt76.mutex);
 
 	cfg80211_chandef_create(&chandef, chan, NL80211_CHAN_HT20);
-	mt7996_set_channel(phy, &chandef);
+	mt7996_config_channel(phy, &chandef);
 	ieee80211_ready_on_channel(hw);
 
 	ieee80211_queue_delayed_work(phy->mt76->hw, &phy->roc_complete_work,
@@ -2985,7 +2940,7 @@ mt7996_add_chanctx(struct ieee80211_hw *hw, struct ieee80211_chanctx_conf *conf)
 	if (ret)
 		return ret;
 
-	return mt7996_set_channel(phy, &ctx->chandef);
+	return mt7996_config_channel(phy, &ctx->chandef);
 }
 
 static void
@@ -3023,7 +2978,7 @@ mt7996_change_chanctx(struct ieee80211_hw *hw, struct ieee80211_chanctx_conf *co
 		ctx->chandef = conf->def;
 		phy->mt76->radar_enabled = conf->radar_enabled;
 
-		mt7996_set_channel(phy, &ctx->chandef);
+		mt7996_config_channel(phy, &ctx->chandef);
 
 		mt7996_dbg(dev, MT7996_DBG_CHAN, "%s: change to %u, 0x%x\n",
 			   __func__, conf->def.chan->hw_value, changed);
@@ -3166,7 +3121,7 @@ mt7996_switch_vif_chanctx(struct ieee80211_hw *hw,
 		if (ret)
 			goto out;
 
-		ret = mt7996_set_channel(phy, &new_ctx->chandef);
+		ret = mt7996_config_channel(phy, &new_ctx->chandef);
 		if (ret)
 			goto out;
 	}
diff --git a/mt7996/mmio.c b/mt7996/mmio.c
index 9badbf6b..6a7a6280 100644
--- a/mt7996/mmio.c
+++ b/mt7996/mmio.c
@@ -662,7 +662,7 @@ struct mt7996_dev *mt7996_mmio_probe(struct device *pdev,
 		.sta_event = mt7996_mac_sta_event,
 		.sta_remove = mt7996_mac_sta_remove,
 		.update_survey = mt7996_update_channel,
-		// .set_channel = mt7996_set_channel,
+		.set_channel = mt7996_set_channel,
 	};
 	struct mt7996_dev *dev;
 	struct mt76_dev *mdev;
diff --git a/mt7996/mt7996.h b/mt7996/mt7996.h
index 16e2eea6..ed2a23cd 100644
--- a/mt7996/mt7996.h
+++ b/mt7996/mt7996.h
@@ -1144,7 +1144,8 @@ int mt7996_mcu_add_rate_ctrl(struct mt7996_dev *dev,
 			     struct mt7996_link_sta *mlink, bool changed);
 int mt7996_mcu_add_mld_sta(struct mt7996_dev *dev, struct ieee80211_vif *vif,
 			   struct ieee80211_sta *sta, unsigned long add);
-int mt7996_set_channel(struct mt7996_phy *phy, struct cfg80211_chan_def *chandef);
+int mt7996_set_channel(struct mt76_phy *mphy);
+int mt7996_config_channel(struct mt7996_phy *phy, struct cfg80211_chan_def *chandef);
 int mt7996_mcu_set_chan_info(struct mt7996_phy *phy, u16 tag, bool sta);
 int mt7996_mcu_set_tx(struct mt7996_dev *dev, struct mt7996_bss_conf *mconf);
 int mt7996_mcu_set_fixed_rate_ctrl(struct mt7996_dev *dev,
-- 
2.45.2

