From 5c060592a285c25810ae7a225f586fa66434775b Mon Sep 17 00:00:00 2001
From: Allen Ye <allen.ye@mediatek.com>
Date: Wed, 9 Oct 2024 13:50:56 +0800
Subject: [PATCH 077/107] mtk: mac80211: Add vht operating mode notification
 vendor flag

Add exported functions for driver to get STA's bandwidth and spatial streaming capabilities to support OMN.

Fix incorrect timing to initialize STA's spatial streaming capability.
Specifically, STA's spatial streaming capability should be initialized before handling VHT OMN, because the handling requires the capability information.

Signed-off-by: Benjamin Lin <benjamin-jw.lin@mediatek.com>
Signed-off-by: Allen Ye <allen.ye@mediatek.com>
---
 include/net/mac80211.h | 15 +++++++++++++++
 net/mac80211/vht.c     | 32 ++++++++++++++++++++++++++++++++
 2 files changed, 47 insertions(+)

diff --git a/include/net/mac80211.h b/include/net/mac80211.h
index 8dfe6531..614331ed 100644
--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -3830,6 +3830,7 @@ enum ieee80211_rate_control_changed {
 	IEEE80211_RC_SUPP_RATES_CHANGED	= BIT(2),
 	IEEE80211_RC_NSS_CHANGED	= BIT(3),
 	/* Defined for mtk vendor command */
+	IEEE80211_RC_VHT_OMN_CHANGED	= BIT(6),
 	IEEE80211_RC_CODING_TYPE_CHANGED= BIT(7),
 };
 
@@ -7965,4 +7966,18 @@ void ieee80211_tsf_offset_notify(struct ieee80211_vif *vif, unsigned int link_id
  */
 void ieee80211_crit_update_notify(struct ieee80211_vif *vif, unsigned int link_id,
 				  enum nl80211_crit_update_event event, gfp_t gfp);
+
+/**
+ * ieee80211_link_sta_cap_bw - get link STA's bandwidth capability.
+ * @pub: STA's public link specific information
+ */
+enum ieee80211_sta_rx_bandwidth
+ieee80211_link_sta_cap_bw(struct ieee80211_link_sta *pub);
+
+/**
+ * ieee80211_link_sta_cap_nss - get link STA's spatial streaming capability.
+ * @pub: STA's public link specific information
+ */
+u8 ieee80211_link_sta_cap_nss(struct ieee80211_link_sta *pub);
+
 #endif /* MAC80211_H */
diff --git a/net/mac80211/vht.c b/net/mac80211/vht.c
index c5c5d16e..8eabfce4 100644
--- a/net/mac80211/vht.c
+++ b/net/mac80211/vht.c
@@ -445,6 +445,37 @@ _ieee80211_sta_cap_rx_bw(struct link_sta_info *link_sta,
 		   link_sta->rx_omi_bw_rx);
 }
 
+enum ieee80211_sta_rx_bandwidth
+ieee80211_link_sta_cap_bw(struct ieee80211_link_sta *pub)
+{
+	struct sta_info *sta = container_of(pub->sta, struct sta_info, sta);
+	enum ieee80211_sta_rx_bandwidth bw;
+	struct link_sta_info *link_sta;
+
+	rcu_read_lock();
+	link_sta = rcu_dereference(sta->link[pub->link_id]);
+	bw = ieee80211_sta_cap_rx_bw(link_sta);
+	rcu_read_unlock();
+
+	return bw;
+}
+EXPORT_SYMBOL(ieee80211_link_sta_cap_bw);
+
+u8 ieee80211_link_sta_cap_nss(struct ieee80211_link_sta *pub)
+{
+	struct sta_info *sta = container_of(pub->sta, struct sta_info, sta);
+	struct link_sta_info *link_sta;
+	u8 nss;
+
+	rcu_read_lock();
+	link_sta = rcu_dereference(sta->link[pub->link_id]);
+	nss = link_sta->capa_nss;
+	rcu_read_unlock();
+
+	return nss;
+}
+EXPORT_SYMBOL(ieee80211_link_sta_cap_nss);
+
 enum nl80211_chan_width
 ieee80211_sta_cap_chan_bw(struct link_sta_info *link_sta)
 {
@@ -768,6 +799,7 @@ void ieee80211_vht_handle_opmode(struct ieee80211_sub_if_data *sdata,
 						    opmode, band);
 
 	if (changed > 0) {
+		changed |= IEEE80211_RC_VHT_OMN_CHANGED;
 		ieee80211_recalc_min_chandef(sdata, link_sta->link_id);
 		rate_control_rate_update(local, sband, link_sta, changed);
 	}
-- 
2.45.2

