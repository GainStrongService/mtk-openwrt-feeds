From 9a8a97f07fe86757b72c1b53c30cdf3713ff3b6e Mon Sep 17 00:00:00 2001
From: Shayne Chen <shayne.chen@mediatek.com>
Date: Tue, 27 Feb 2024 18:07:11 +0800
Subject: [PATCH 088/146] mtk: mt76: mt7996: use BSS_CHANGED_TXPOWER for
 txpower setting

This is a preliminary patch to add MLO support for mt7996 chipsets.

mtk: mt76: mt7996: Fix get_txpower wrong result in single wiphy and legacy mode

Fix get_txpower wrong result in single wiphy and legacy mode.
ieee80211_hw is get from wiphy0, so we need to get correct phy from vif.

Temporarily use link 0 bss due to mac80211 didn't pass link id here.

mtk: mt76: mt7996: add per-link txpower config

Signed-off-by: Allen Ye <allen.ye@mediatek.com>
Signed-off-by: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
---
 mt7996/main.c     | 40 ++++++++++++++++++++++++++++++----------
 mt7996/mcu.c      |  5 +++--
 mt7996/mt7996.h   |  3 ++-
 mt7996/testmode.c |  2 +-
 4 files changed, 36 insertions(+), 14 deletions(-)

diff --git a/mt7996/main.c b/mt7996/main.c
index 2cb720b0..408192b5 100644
--- a/mt7996/main.c
+++ b/mt7996/main.c
@@ -671,14 +671,6 @@ static int mt7996_config(struct ieee80211_hw *hw, u32 changed)
 {
 	struct mt7996_dev *dev = mt7996_hw_dev(hw);
 	struct mt7996_phy *phy = mt7996_hw_phy(hw);
-	int ret;
-
-	if (changed & (IEEE80211_CONF_CHANGE_POWER |
-		       IEEE80211_CONF_CHANGE_CHANNEL)) {
-		ret = mt7996_mcu_set_txpower_sku(phy);
-		if (ret)
-			return ret;
-	}
 
 	mutex_lock(&dev->mt76.mutex);
 
@@ -959,8 +951,37 @@ static void mt7996_link_info_changed(struct ieee80211_hw *hw,
 	if (changed & BSS_CHANGED_MU_GROUPS)
 		mt7996_update_mu_group(hw, info, mconf);
 
+	if (changed & BSS_CHANGED_TXPOWER)
+		mt7996_mcu_set_txpower_sku(phy, info);
+
+out:
+	mutex_unlock(&dev->mt76.mutex);
+}
+
+int mt7996_get_txpower(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
+		       unsigned int link_id, int *dbm)
+{
+	struct mt7996_vif *mvif = (struct mt7996_vif *)vif->drv_priv;
+	struct mt7996_bss_conf *mconf;
+	struct mt7996_dev *dev = mt7996_hw_dev(hw);
+	struct mt76_phy *mphy;
+	int delta;
+
+	mutex_lock(&dev->mt76.mutex);
+	mconf = mconf_dereference_protected(mvif, link_id);
+	if (!mconf || !mconf->phy) {
+		*dbm = 0;
+		goto out;
+	}
+
+	mphy = mconf->phy->mt76;
+
+	delta = mt76_tx_power_path_delta(hweight16(mphy->chainmask));
+
+	*dbm = DIV_ROUND_UP(mphy->txpower_cur + delta, 2);
 out:
 	mutex_unlock(&dev->mt76.mutex);
+	return 0;
 }
 
 static void
@@ -1616,7 +1637,6 @@ mt7996_set_antenna(struct ieee80211_hw *hw, u32 tx_ant, u32 rx_ant)
 	mt76_set_stream_caps(phy->mt76, true);
 	mt7996_set_stream_vht_txbf_caps(phy);
 	mt7996_set_stream_he_eht_caps(phy);
-	mt7996_mcu_set_txpower_sku(phy);
 
 	mutex_unlock(&dev->mt76.mutex);
 
@@ -2617,7 +2637,7 @@ const struct ieee80211_ops mt7996_ops = {
 	.hw_scan = mt7996_hw_scan,
 	.cancel_hw_scan = mt7996_cancel_hw_scan,
 	.release_buffered_frames = mt76_release_buffered_frames,
-	.get_txpower = mt76_get_txpower,
+	.get_txpower = mt7996_get_txpower,
 	.channel_switch_beacon = mt7996_channel_switch_beacon,
 	.get_stats = mt7996_get_stats,
 	.get_et_sset_count = mt7996_get_et_sset_count,
diff --git a/mt7996/mcu.c b/mt7996/mcu.c
index 63355d02..2964e9a3 100644
--- a/mt7996/mcu.c
+++ b/mt7996/mcu.c
@@ -5533,7 +5533,8 @@ mt7996_update_max_txpower_cur(struct mt7996_phy *phy, int tx_power)
 		mphy->txpower_cur = e2p_power_limit;
 }
 
-int mt7996_mcu_set_txpower_sku(struct mt7996_phy *phy)
+int mt7996_mcu_set_txpower_sku(struct mt7996_phy *phy,
+			       struct ieee80211_bss_conf *conf)
 {
 #define TX_POWER_LIMIT_TABLE_RATE	0
 #define TX_POWER_LIMIT_TABLE_PATH	1
@@ -5562,7 +5563,7 @@ int mt7996_mcu_set_txpower_sku(struct mt7996_phy *phy)
 
 	if (hw->conf.power_level == INT_MIN)
 		hw->conf.power_level = 127;
-	txpower_limit = mt7996_get_power_bound(phy, hw->conf.power_level);
+	txpower_limit = mt7996_get_power_bound(phy, conf->txpower);
 
 	if (phy->sku_limit_en) {
 		txpower_limit = mt76_get_rate_power_limits(mphy, mphy->chandef.chan,
diff --git a/mt7996/mt7996.h b/mt7996/mt7996.h
index 1485b62a..1657f1fc 100644
--- a/mt7996/mt7996.h
+++ b/mt7996/mt7996.h
@@ -996,7 +996,8 @@ int mt7996_mcu_get_chan_mib_info(struct mt7996_phy *phy, bool chan_switch);
 int mt7996_mcu_get_temperature(struct mt7996_phy *phy);
 int mt7996_mcu_set_thermal_throttling(struct mt7996_phy *phy, u8 state);
 int mt7996_mcu_set_thermal_protect(struct mt7996_phy *phy, bool enable);
-int mt7996_mcu_set_txpower_sku(struct mt7996_phy *phy);
+int mt7996_mcu_set_txpower_sku(struct mt7996_phy *phy,
+			       struct ieee80211_bss_conf *conf);
 int mt7996_mcu_rdd_cmd(struct mt7996_dev *dev, int cmd, u8 index,
 		       u8 rx_sel, u8 val);
 int mt7996_mcu_rdd_background_disable_timer(struct mt7996_dev *dev,
diff --git a/mt7996/testmode.c b/mt7996/testmode.c
index 51b3ab46..b542651d 100644
--- a/mt7996/testmode.c
+++ b/mt7996/testmode.c
@@ -1834,7 +1834,7 @@ mt7996_tm_update_params(struct mt7996_phy *phy, u32 changed)
 		mt7996_tm_update_channel(phy);
 		mt7996_mcu_set_tx_power_ctrl(phy, POWER_CTRL(SKU_POWER_LIMIT), td->sku_en);
 		mt7996_mcu_set_tx_power_ctrl(phy, POWER_CTRL(BACKOFF_POWER_LIMIT), td->sku_en);
-		mt7996_mcu_set_txpower_sku(phy);
+		mt7996_mcu_set_txpower_sku(phy, &phy->monitor_vif->bss_conf);
 	}
 	if (changed & BIT(TM_CHANGED_TX_LENGTH)) {
 		mt7996_tm_set(dev, SET_ID(TX_LEN), td->tx_mpdu_len);
-- 
2.45.2

