From 94e6625126bc2ae204de47a5be33dbb159d54c78 Mon Sep 17 00:00:00 2001
From: Rex Lu <rex.lu@mediatek.com>
Date: Fri, 23 May 2025 14:34:02 +0800
Subject: [PATCH 91/95] mtk: mt76: mt7990: add mt7990 coredump support

1. add mt7990 wm memory region.
2. fixed mt7996/mt7992 wrong wa status

Signed-off-by: Rex Lu <rex.lu@mediatek.com>
---
 mt7996/coredump.c | 139 +++++++++++++++++++++++++++++++++++-----------
 mt7996/debugfs.c  |  14 +++--
 mt7996/regs.h     |   4 ++
 3 files changed, 119 insertions(+), 38 deletions(-)

diff --git a/mt7996/coredump.c b/mt7996/coredump.c
index a724f4fc..45b0b78f 100644
--- a/mt7996/coredump.c
+++ b/mt7996/coredump.c
@@ -105,6 +105,49 @@ static const struct mt7996_mem_region mt7992_wm_mem_regions[] = {
 	},
 };
 
+static const struct mt7996_mem_region mt7990_wm_mem_regions[] = {
+	{
+		.start = 0x00800000,
+		.len = 0x0004afff,
+		.name = "ULM0",
+	},
+	{
+		.start = 0x00900000,
+		.len = 0x0003ffff,
+		.name = "ULM1",
+	},
+	{
+		.start = 0x02200000,
+		.len = 0x00045fff,
+		.name = "ULM2",
+	},
+	{
+		.start = 0x00400000,
+		.len = 0x00027fff,
+		.name = "SRAM",
+	},
+	{
+		.start = 0xe0000000,
+		.len = 0x00dffff,
+		.name = "CRAM0",
+	},
+	{
+		.start = 0xe00e0000,
+		.len = 0x00dffff,
+		.name = "CRAM1",
+	},
+	{
+		.start = 0xe01c0000,
+		.len = 0x005ffff,
+		.name = "CRAM2",
+	},
+	{
+		.start = 0x7c050000,
+		.len = 0x00007fff,
+		.name = "CONN_INFRA",
+	},
+};
+
 const struct mt7996_mem_region*
 mt7996_coredump_get_mem_layout(struct mt7996_dev *dev, u8 type, u32 *num)
 {
@@ -127,7 +170,10 @@ mt7996_coredump_get_mem_layout(struct mt7996_dev *dev, u8 type, u32 *num)
 		*num = ARRAY_SIZE(mt7992_wm_mem_regions);
 		return &mt7992_wm_mem_regions[0];
 	case MT7990_DEVICE_ID:
-		/* Todo: add mt7990 support */
+		if (type == MT7996_RAM_TYPE_WA)
+			return NULL;
+		*num = ARRAY_SIZE(mt7990_wm_mem_regions);
+		return &mt7990_wm_mem_regions[0];
 	default:
 		return NULL;
 	}
@@ -176,12 +222,32 @@ static void
 mt7996_coredump_fw_state(struct mt7996_dev *dev, u8 type, struct mt7996_coredump *dump,
 			 bool *exception)
 {
-	u32 count, reg = MT_FW_WM_DUMP_STATE;
+	u32 count, coredump_reg;
 
-	if (type == MT7996_RAM_TYPE_WA)
-		reg = MT_FW_WA_DUMP_STATE;
+	switch (mt76_chip(&dev->mt76)) {
+	case MT7996_DEVICE_ID:
+	case MT7996_DEVICE_ID_2:
+		if (type == MT7996_RAM_TYPE_WA)
+			coredump_reg = mt76_rr(dev, 0x7c05b080) + 4;
+		else
+			coredump_reg = 0x02209e90;
+		break;
+	case MT7992_DEVICE_ID:
+		if (type == MT7996_RAM_TYPE_WA)
+			coredump_reg = mt76_rr(dev, 0x7c056480) + 4;
+		else
+			coredump_reg = mt76_rr(dev, 0x7c0564a8) + 4;
+		break;
+	case MT7990_DEVICE_ID:
+		coredump_reg = mt76_rr(dev, 0x7c0564a8) + 4;
+		break;
+	default:
+		dev_info(dev->mt76.dev, "%s coredump not supported\n",
+			 wiphy_name(dev->mt76.hw->wiphy));
+		return;
+	}
 
-	count = mt76_rr(dev, reg);
+	count = mt76_rr(dev, coredump_reg);
 
 	/* normal mode: driver can manually trigger assertÂ for detail info */
 	if (!count)
@@ -199,7 +265,8 @@ mt7996_coredump_fw_stack(struct mt7996_dev *dev, u8 type, struct mt7996_coredump
 	u32 reg, i, offset = 0, val = MT7996_RAM_TYPE_WM;
 
 	if (type == MT7996_RAM_TYPE_WA) {
-		offset = MT_MCU_WA_EXCP_BASE - MT_MCU_WM_EXCP_BASE;
+		offset = is_mt7996(&dev->mt76) ?
+			 (MT_MCU_WA_EXCP_BASE - MT_MCU_WM_EXCP_BASE) : 0;
 		val = MT7996_RAM_TYPE_WA;
 	}
 
@@ -212,34 +279,42 @@ mt7996_coredump_fw_stack(struct mt7996_dev *dev, u8 type, struct mt7996_coredump
 	for (i = 0; i < 10; i++)
 		dump->pc_cur[i] = mt76_rr(dev, MT_CONN_DBG_CTL_PC_LOG);
 
-	/* stop call stack record */
-	if (!exception) {
-		mt76_clear(dev, MT_MCU_WM_EXCP_PC_CTRL + offset, BIT(0));
-		mt76_clear(dev, MT_MCU_WM_EXCP_LR_CTRL + offset, BIT(0));
-	}
-
 	/* read PC log */
-	dump->pc_dbg_ctrl = mt76_rr(dev, MT_MCU_WM_EXCP_PC_CTRL + offset);
-	dump->pc_cur_idx = FIELD_GET(MT_MCU_WM_EXCP_PC_CTRL_IDX_STATUS,
-				     dump->pc_dbg_ctrl);
-	for (i = 0; i < 32; i++) {
-		reg = MT_MCU_WM_EXCP_PC_LOG + i * 4 + offset;
-		dump->pc_stack[i] = mt76_rr(dev, reg);
-	}
-
-	/* read LR log */
-	dump->lr_dbg_ctrl = mt76_rr(dev, MT_MCU_WM_EXCP_LR_CTRL + offset);
-	dump->lr_cur_idx = FIELD_GET(MT_MCU_WM_EXCP_LR_CTRL_IDX_STATUS,
-				     dump->lr_dbg_ctrl);
-	for (i = 0; i < 32; i++) {
-		reg = MT_MCU_WM_EXCP_LR_LOG + i * 4 + offset;
-		dump->lr_stack[i] = mt76_rr(dev, reg);
-	}
+	if (is_mt7996(&dev->mt76)) {
+		dump->pc_dbg_ctrl = mt76_rr(dev, MT_MCU_WM_EXCP_PC_CTRL + offset);
+		dump->pc_cur_idx = FIELD_GET(MT_MCU_WM_EXCP_PC_CTRL_IDX_STATUS,
+					     dump->pc_dbg_ctrl);
+		for (i = 0; i < 32; i++) {
+			reg = MT_MCU_WM_EXCP_PC_LOG + i * 4 + offset;
+			dump->pc_stack[i] = mt76_rr(dev, reg);
+		}
 
-	/* start call stack record */
-	if (!exception) {
-		mt76_set(dev, MT_MCU_WM_EXCP_PC_CTRL + offset, BIT(0));
-		mt76_set(dev, MT_MCU_WM_EXCP_LR_CTRL + offset, BIT(0));
+		/* read LR log */
+		dump->lr_dbg_ctrl = mt76_rr(dev, MT_MCU_WM_EXCP_LR_CTRL + offset);
+		dump->lr_cur_idx = FIELD_GET(MT_MCU_WM_EXCP_LR_CTRL_IDX_STATUS,
+					     dump->lr_dbg_ctrl);
+		for (i = 0; i < 32; i++) {
+			reg = MT_MCU_WM_EXCP_LR_LOG + i * 4 + offset;
+			dump->lr_stack[i] = mt76_rr(dev, reg);
+		}
+	} else {
+		mt76_wr(dev, MT_CONN_DBG_CTL_PC_LOG_SEL, 0x20);
+		dump->pc_dbg_ctrl = mt76_rr(dev, MT_CONN_DBG_CTL_PC_LOG);
+		dump->pc_cur_idx = FIELD_GET(MT_CONN_DBG_CTL_PC_LOG_IDX_STATUS,
+					     dump->pc_dbg_ctrl);
+		for (i = 0; i < 32; i++) {
+			mt76_wr(dev, MT_CONN_DBG_CTL_PC_LOG_SEL, i);
+			dump->pc_stack[i] = mt76_rr(dev, MT_CONN_DBG_CTL_PC_LOG);
+		}
+		/* read LR log */
+		mt76_wr(dev, MT_CONN_DBG_CTL_GPR_LOG_SEL, 0x20);
+		dump->lr_dbg_ctrl = mt76_rr(dev, MT_CONN_DBG_CTL_GPR_BUS_OUT_LOG);
+		dump->lr_cur_idx = FIELD_GET(MT_CONN_DBG_CTL_GPR_BUS_OUT_IDX_STATUS,
+					     dump->lr_dbg_ctrl);
+		for (i = 0; i < 32; i++) {
+			mt76_wr(dev, MT_CONN_DBG_CTL_GPR_LOG_SEL, i);
+			dump->lr_stack[i] = mt76_rr(dev, MT_CONN_DBG_CTL_GPR_BUS_OUT_LOG);
+		}
 	}
 }
 
diff --git a/mt7996/debugfs.c b/mt7996/debugfs.c
index c68704c1..2ac3bb05 100644
--- a/mt7996/debugfs.c
+++ b/mt7996/debugfs.c
@@ -115,15 +115,17 @@ mt7996_sys_recovery_set(struct file *file, const char __user *user_buf,
 	/* WARNING: trigger firmware crash */
 	case UNI_CMD_SER_SET_SYSTEM_ASSERT:
 		// trigger wm assert exception
-		ret = mt7996_mcu_trigger_assert(dev);
-		if (ret)
-			return ret;
+		mt76_wr(dev, 0x89018108, 0x20);
+		mt76_wr(dev, 0x89018118, 0x20);
 		// trigger wa assert exception
-		mt76_wr(dev, 0x89098108, 0x20);
-		mt76_wr(dev, 0x89098118, 0x20);
+		if (mt7996_has_wa(dev)) {
+			mt76_wr(dev, 0x89098108, 0x20);
+			mt76_wr(dev, 0x89098118, 0x20);
+		}
 		break;
 	case UNI_CMD_SER_FW_COREDUMP_WA:
-		mt7996_coredump(dev, MT7996_COREDUMP_MANUAL_WA);
+		if (mt7996_has_wa(dev))
+			mt7996_coredump(dev, MT7996_COREDUMP_MANUAL_WA);
 		break;
 	case UNI_CMD_SER_FW_COREDUMP_WM:
 		mt7996_coredump(dev, MT7996_COREDUMP_MANUAL_WM);
diff --git a/mt7996/regs.h b/mt7996/regs.h
index f512b93f..42e0f850 100644
--- a/mt7996/regs.h
+++ b/mt7996/regs.h
@@ -711,8 +711,12 @@ enum offs_rev {
 #define MT_CONN_DBG_CTL_BASE			0x18023000
 #define MT_CONN_DBG_CTL(ofs)			(MT_CONN_DBG_CTL_BASE + (ofs))
 #define MT_CONN_DBG_CTL_OUT_SEL			MT_CONN_DBG_CTL(0x604)
+#define MT_CONN_DBG_CTL_GPR_BUS_OUT_LOG		MT_CONN_DBG_CTL(0x608)
+#define MT_CONN_DBG_CTL_GPR_BUS_OUT_IDX_STATUS	GENMASK(21, 17)
 #define MT_CONN_DBG_CTL_PC_LOG_SEL		MT_CONN_DBG_CTL(0x60c)
 #define MT_CONN_DBG_CTL_PC_LOG			MT_CONN_DBG_CTL(0x610)
+#define MT_CONN_DBG_CTL_PC_LOG_IDX_STATUS	GENMASK(21, 17)
+#define MT_CONN_DBG_CTL_GPR_LOG_SEL		MT_CONN_DBG_CTL(0x614)
 
 #define MT_LED_GPIO_MUX2			0x70005058 /* GPIO 18 */
 #define MT_LED_GPIO_MUX3			0x7000505C /* GPIO 26 */
-- 
2.45.2

