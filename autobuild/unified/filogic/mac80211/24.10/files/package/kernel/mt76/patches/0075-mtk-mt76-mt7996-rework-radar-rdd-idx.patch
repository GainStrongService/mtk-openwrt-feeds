From 18f326771f8b2bbf4511345917dd6a1328d95d97 Mon Sep 17 00:00:00 2001
From: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
Date: Thu, 27 Feb 2025 13:58:35 +0800
Subject: [PATCH 075/123] mtk: mt76: mt7996: rework radar rdd idx

The definition of MT_RX_SEL (for rdd_rx_sel) is mixed with the definition of HWRDD idx.
For example, MT_RX_SEL2 is for background HWRDD idx, not an option of rdd_rx_sel.
Additionally, HWRDD idx does not exactly map to band idx for Connac 3
chips. So, add mt7996_get_rdd_idx as a helper function.

Finally, remove some part of code inherited from the legacy chips.
For instance,
1. rdd_state is used for single-band-dual-HWRDD chips (for 80+80),
especially the 76xx series.
2. rdd_rx_sel is also used for single-band-dual-HWRDD chips
rx_sel = 0 => RDD0 for WF0, RDD1 for WF2
rx_sel = 1 => RDD0 for WF1, RDD1 for WF3

SKU                        | 5G HWRDD Index | Background HWRDD Index
---------------------------|----------------|------------------------
MT7996 (except 205/255)    | 1              | 2
MT7992                     | 1              | 2
MT7990                     | 1              | 2
MT7996 205                 | 0              | 2
MT7996 255 Band 1 5GL      | 1              | 2
MT7996 255 Band 2 5GH      | 0              | 2

Signed-off-by: StanleyYP Wang <StanleyYP.Wang@mediatek.com>

mtk: mt76: mt7996: add missing rdd_idx check when enable background radar

Add missing rdd idx check (< 0) in mt7996_mcu_rdd_background_enable

CR-Id: WCNCR00274293
Signed-off-by: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
Change-Id: I3797ab8e6a85baa7be252cd0af357ee4cf308505
---
 mt7996/debugfs.c | 8 ++++----
 mt7996/mcu.c     | 7 +++++--
 2 files changed, 9 insertions(+), 6 deletions(-)

diff --git a/mt7996/debugfs.c b/mt7996/debugfs.c
index 931b2734..e6cc39d7 100644
--- a/mt7996/debugfs.c
+++ b/mt7996/debugfs.c
@@ -258,11 +258,11 @@ mt7996_radar_trigger(void *data, u64 val)
 {
 #define RADAR_MAIN_CHAIN	1
 #define RADAR_BACKGROUND	2
-	struct mt7996_dev *dev = data;
-	struct mt7996_phy *phy = mt7996_band_phy(dev, NL80211_BAND_5GHZ);
+	struct mt7996_phy *phy = data;
+	struct mt7996_dev *dev = phy->dev;
 	int rdd_idx;
 
-	if (!phy || !val || val > RADAR_BACKGROUND)
+	if (!val || val > RADAR_BACKGROUND)
 		return -EINVAL;
 
 	if (val == RADAR_BACKGROUND && !dev->rdd2_phy) {
@@ -1243,7 +1243,7 @@ int mt7996_init_band_debugfs(struct mt7996_phy *phy)
 	if (phy->mt76->cap.has_5ghz) {
 		debugfs_create_u32("dfs_hw_pattern", 0400, dir,
 				   &dev->hw_pattern);
-		debugfs_create_file("radar_trigger", 0200, dir, dev,
+		debugfs_create_file("radar_trigger", 0200, dir, phy,
 				    &fops_radar_trigger);
 		debugfs_create_devm_seqfile(dev->mt76.dev, "rdd_monitor", dir,
 					    mt7996_rdd_monitor);
diff --git a/mt7996/mcu.c b/mt7996/mcu.c
index 601da2ae..b0d2be11 100644
--- a/mt7996/mcu.c
+++ b/mt7996/mcu.c
@@ -455,7 +455,7 @@ mt7996_mcu_rx_radar_detected(struct mt7996_dev *dev, struct sk_buff *skb)
 	if (!mphy)
 		return;
 
-	if (r->rdd_idx == MT_RDD_IDX_BACKGROUND)
+	if (r->rdd_idx == MT_RDD_IDX_BACKGROUND) {
 		dev->bg_nxt_freq = 0;
 		cfg80211_background_radar_event(mphy->hw->wiphy,
 						&dev->rdd2_chandef,
@@ -5549,6 +5549,9 @@ int mt7996_mcu_rdd_background_enable(struct mt7996_phy *phy,
 	struct mt7996_dev *dev = phy->dev;
 	int err, region, rdd_idx = mt7996_get_rdd_idx(phy, true);
 
+	if (rdd_idx < 0)
+		return 0;
+
 	if (!chandef) { /* disable offchain */
 		err = mt7996_mcu_rdd_cmd(dev, RDD_STOP, rdd_idx, 0);
 		if (err)
@@ -6901,7 +6904,7 @@ int mt7996_mcu_rdd_background_disable_timer(struct mt7996_dev *dev, bool disable
 		.tag = cpu_to_le16(UNI_RDD_CTRL_PARM),
 		.len = cpu_to_le16(sizeof(req) - 4),
 		.ctrl = RDD_DISABLE_ZW_TIMER,
-		.rdd_idx = MT_RX_SEL2,
+		.rdd_idx = MT_RDD_IDX_BACKGROUND,
 		.disable_timer = disable_timer,
 	};
 
-- 
2.45.2

