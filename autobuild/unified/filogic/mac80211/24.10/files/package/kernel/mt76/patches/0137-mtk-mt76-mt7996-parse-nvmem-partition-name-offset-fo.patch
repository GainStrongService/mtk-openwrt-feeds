From a55c8582b2394010d9d27258d265a01866fc0fb9 Mon Sep 17 00:00:00 2001
From: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
Date: Wed, 20 Nov 2024 15:41:18 +0800
Subject: [PATCH 137/146] mtk: mt76: mt7996: parse nvmem partition name &
 offset for flash write back

If eeprom data is read from nvmem, parse and send the partition name & offset
to atenl for flash write back.

Signed-off-by: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
---
 eeprom.c   | 48 ++++++++++++++++++++++++++++++++++++++++++++++++
 mt76.h     |  1 +
 testmode.h |  2 +-
 3 files changed, 50 insertions(+), 1 deletion(-)

diff --git a/eeprom.c b/eeprom.c
index 17b1fabd..6ff22319 100644
--- a/eeprom.c
+++ b/eeprom.c
@@ -109,6 +109,52 @@ out_put_node:
 }
 EXPORT_SYMBOL_GPL(mt76_get_of_data_from_mtd);
 
+static void mt76_get_nvmem_part(struct mt76_dev *dev)
+{
+#ifdef CONFIG_NL80211_TESTMODE
+	struct device_node *np = dev->dev->of_node;
+	const __be32 *list;
+	const char *part;
+	phandle phandle;
+	int offset, size;
+	u32 reg[2];
+
+	list = of_get_property(np, "nvmem-cells", NULL);
+	if (!list)
+		return;
+
+	phandle = be32_to_cpup(list++);
+	if (!phandle)
+		return;
+
+	np = of_find_node_by_phandle(phandle);
+	if (!np)
+		return;
+
+	if (of_property_read_u32_array(np, "reg", reg, 2))
+		return;
+
+	offset = reg[0];
+	size = reg[1];
+
+	np = of_get_parent(of_get_parent(np));
+	if (!np)
+		return;
+
+	part = of_get_property(np, "partname", NULL);
+	if (!part)
+		part = of_get_property(np, "volname", NULL);
+	if (!part)
+		return;
+
+	if (size != dev->eeprom.size)
+		return;
+
+	dev->test_mtd.name = devm_kstrdup(dev->dev, part, GFP_KERNEL);
+	dev->test_mtd.offset = offset;
+#endif
+}
+
 int mt76_get_of_data_from_nvmem(struct mt76_dev *dev, void *eep,
 				const char *cell_name, int len)
 {
@@ -122,6 +168,8 @@ int mt76_get_of_data_from_nvmem(struct mt76_dev *dev, void *eep,
 	if (IS_ERR(cell))
 		return PTR_ERR(cell);
 
+	mt76_get_nvmem_part(dev);
+
 	data = nvmem_cell_read(cell, &retlen);
 	nvmem_cell_put(cell);
 
diff --git a/mt76.h b/mt76.h
index b6a466b3..55e88435 100644
--- a/mt76.h
+++ b/mt76.h
@@ -1124,6 +1124,7 @@ struct mt76_dev {
 
 #ifdef CONFIG_NL80211_TESTMODE
 	const struct mt76_testmode_ops *test_ops;
+	/* test_mtd can be used for mtd or emmc */
 	struct {
 		const char *name;
 		u32 offset;
diff --git a/testmode.h b/testmode.h
index f4c0cb5f..3f2f97dd 100644
--- a/testmode.h
+++ b/testmode.h
@@ -16,7 +16,7 @@
  * @MT76_TM_ATTR_RESET: reset parameters to default (flag)
  * @MT76_TM_ATTR_STATE: test state (u32), see &enum mt76_testmode_state
  *
- * @MT76_TM_ATTR_MTD_PART: mtd partition or binfile used for eeprom data (string)
+ * @MT76_TM_ATTR_MTD_PART: mtd/emmc partition or binfile used for eeprom data (string)
  * @MT76_TM_ATTR_MTD_OFFSET: offset of eeprom data within the partition (u32)
  * @MT76_TM_ATTR_BAND_IDX: band idx of the chip (u8)
  *
-- 
2.45.2

