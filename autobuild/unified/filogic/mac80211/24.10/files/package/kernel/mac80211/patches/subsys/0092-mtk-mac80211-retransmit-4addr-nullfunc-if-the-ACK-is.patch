From 26278a98c6ace1ddfa97262d31d79cb0e4388dfc Mon Sep 17 00:00:00 2001
From: Peter Chiu <chui-hao.chiu@mediatek.com>
Date: Fri, 14 Feb 2025 09:41:07 +0800
Subject: [PATCH 092/101] mtk: mac80211: retransmit 4addr nullfunc if the ACK
 is not received

When using 4 address mode, station need to send a 4 address null func to
AP. However, the 4 address null func may be missing due to channel
condition or other unexpected behavior. So check the ACK sent by AP to
make sure the 4 address mode is established.

Signed-off-by: Peter Chiu <chui-hao.chiu@mediatek.com>
---
 net/mac80211/ieee80211_i.h |  3 +++
 net/mac80211/main.c        |  2 ++
 net/mac80211/mlme.c        | 25 ++++++++++++++++++++++++-
 net/mac80211/status.c      | 20 ++++++++++++++++++++
 4 files changed, 49 insertions(+), 1 deletion(-)

diff --git a/net/mac80211/ieee80211_i.h b/net/mac80211/ieee80211_i.h
index 583c6c7..7c0fb0b 100644
--- a/net/mac80211/ieee80211_i.h
+++ b/net/mac80211/ieee80211_i.h
@@ -91,6 +91,7 @@ enum ieee80211_status_data {
 	IEEE80211_STATUS_TYPE_INVALID	= 0,
 	IEEE80211_STATUS_TYPE_SMPS	= 1,
 	IEEE80211_STATUS_TYPE_NEG_TTLM	= 2,
+	IEEE80211_STATUS_4ADDR_NULLFUNC	= 3,
 	IEEE80211_STATUS_SUBDATA_MASK	= 0x1ff0,
 };
 
@@ -554,6 +555,7 @@ struct ieee80211_if_managed {
 	unsigned int uapsd_max_sp_len;
 
 	u8 use_4addr;
+	struct wiphy_delayed_work send_4addr_nullfunc_work;
 
 	/*
 	 * State variables for keeping track of RSSI of the AP currently
@@ -2426,6 +2428,7 @@ void ieee80211_dynamic_ps_timer(struct timer_list *t);
 void ieee80211_send_nullfunc(struct ieee80211_local *local,
 			     struct ieee80211_sub_if_data *sdata,
 			     bool powersave);
+void __ieee80211_send_4addr_nullfunc(struct wiphy *wiphy, struct wiphy_work *work);
 void ieee80211_send_4addr_nullfunc(struct ieee80211_local *local,
 				   struct ieee80211_sub_if_data *sdata);
 void ieee80211_sta_tx_notify(struct ieee80211_sub_if_data *sdata,
diff --git a/net/mac80211/main.c b/net/mac80211/main.c
index 2411edb..1131737 100644
--- a/net/mac80211/main.c
+++ b/net/mac80211/main.c
@@ -501,6 +501,8 @@ static void ieee80211_restart_work(struct work_struct *work)
 				ieee80211_sta_connection_lost(sdata,
 							      WLAN_REASON_UNSPECIFIED,
 							      false);
+			wiphy_delayed_work_cancel(local->hw.wiphy,
+				&sdata->u.mgd.send_4addr_nullfunc_work);
 		}
 		wiphy_delayed_work_flush(local->hw.wiphy,
 					 &sdata->dec_tailroom_needed_wk);
diff --git a/net/mac80211/mlme.c b/net/mac80211/mlme.c
index 7c33720..d880bfa 100644
--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@ -2171,10 +2171,23 @@ void ieee80211_send_nullfunc(struct ieee80211_local *local,
 void ieee80211_send_4addr_nullfunc(struct ieee80211_local *local,
 				   struct ieee80211_sub_if_data *sdata)
 {
-	struct sk_buff *skb;
+	wiphy_delayed_work_queue(local->hw.wiphy,
+				 &sdata->u.mgd.send_4addr_nullfunc_work, 0);
+}
+
+void __ieee80211_send_4addr_nullfunc(struct wiphy *wiphy,
+				     struct wiphy_work *work)
+{
+	struct ieee80211_sub_if_data *sdata;
 	struct ieee80211_hdr *nullfunc;
+	struct ieee80211_local *local;
+	struct sk_buff *skb;
 	__le16 fc;
 
+	sdata = container_of(work, struct ieee80211_sub_if_data,
+			     u.mgd.send_4addr_nullfunc_work.work);
+	local = sdata->local;
+
 	if (WARN_ON(sdata->vif.type != NL80211_IFTYPE_STATION))
 		return;
 
@@ -2199,9 +2212,15 @@ void ieee80211_send_4addr_nullfunc(struct ieee80211_local *local,
 		memcpy(nullfunc->addr3, sdata->deflink.u.mgd.bssid, ETH_ALEN);
 	}
 
+	IEEE80211_SKB_CB(skb)->flags |= IEEE80211_TX_CTL_REQ_TX_STATUS;
 	IEEE80211_SKB_CB(skb)->flags |= IEEE80211_TX_INTFL_DONT_ENCRYPT;
 	IEEE80211_SKB_CB(skb)->flags |= IEEE80211_TX_CTL_USE_MINRATE;
+	IEEE80211_SKB_CB(skb)->status_data |= IEEE80211_STATUS_4ADDR_NULLFUNC;
+	sta_dbg(sdata, "Send 4addr nullfunc\n");
 	ieee80211_tx_skb(sdata, skb);
+
+	wiphy_delayed_work_queue(local->hw.wiphy,
+				 &sdata->u.mgd.send_4addr_nullfunc_work, HZ);
 }
 
 /* spectrum management related things */
@@ -8468,6 +8487,8 @@ void ieee80211_sta_setup_sdata(struct ieee80211_sub_if_data *sdata)
 				ieee80211_neg_ttlm_timeout_work);
 	wiphy_work_init(&ifmgd->teardown_ttlm_work,
 			ieee80211_teardown_ttlm_work);
+	wiphy_delayed_work_init(&ifmgd->send_4addr_nullfunc_work,
+				__ieee80211_send_4addr_nullfunc);
 
 	ifmgd->flags = 0;
 	ifmgd->powersave = sdata->wdev.ps;
@@ -9691,6 +9712,8 @@ void ieee80211_mgd_stop(struct ieee80211_sub_if_data *sdata)
 			  &ifmgd->beacon_connection_loss_work);
 	wiphy_work_cancel(sdata->local->hw.wiphy,
 			  &ifmgd->csa_connection_drop_work);
+	wiphy_delayed_work_cancel(sdata->local->hw.wiphy,
+				  &ifmgd->send_4addr_nullfunc_work);
 	wiphy_delayed_work_cancel(sdata->local->hw.wiphy,
 				  &ifmgd->tdls_peer_del_work);
 
diff --git a/net/mac80211/status.c b/net/mac80211/status.c
index 795a365..6fcc15c 100644
--- a/net/mac80211/status.c
+++ b/net/mac80211/status.c
@@ -713,6 +713,23 @@ ieee80211_handle_teardown_ttlm_status(struct ieee80211_sub_if_data *sdata,
 			 &sdata->u.mgd.teardown_ttlm_work);
 }
 
+static void
+ieee80211_handle_4addr_nullfunc_status(struct ieee80211_sub_if_data *sdata,
+				       bool acked)
+{
+	if (!sdata || !ieee80211_sdata_running(sdata))
+		return;
+
+	if (!acked)
+		return;
+
+	if (sdata->vif.type != NL80211_IFTYPE_STATION)
+		return;
+
+	wiphy_delayed_work_cancel(sdata->local->hw.wiphy,
+				  &sdata->u.mgd.send_4addr_nullfunc_work);
+}
+
 static void ieee80211_report_used_skb(struct ieee80211_local *local,
 				      struct sk_buff *skb, bool dropped,
 				      ktime_t ack_hwtstamp)
@@ -793,6 +810,9 @@ static void ieee80211_report_used_skb(struct ieee80211_local *local,
 		case IEEE80211_STATUS_TYPE_NEG_TTLM:
 			ieee80211_handle_teardown_ttlm_status(sdata, acked);
 			break;
+		case IEEE80211_STATUS_4ADDR_NULLFUNC:
+			ieee80211_handle_4addr_nullfunc_status(sdata, acked);
+			break;
 		}
 		rcu_read_unlock();
 	}
-- 
2.45.2

