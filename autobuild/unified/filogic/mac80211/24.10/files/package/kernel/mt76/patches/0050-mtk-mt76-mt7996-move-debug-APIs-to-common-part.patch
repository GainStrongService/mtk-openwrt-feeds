From 9848e000ad951bf5087550e0b9add830e5da6491 Mon Sep 17 00:00:00 2001
From: Shayne Chen <shayne.chen@mediatek.com>
Date: Mon, 30 Dec 2024 12:15:09 +0800
Subject: [PATCH 50/95] mtk: mt76: mt7996: move debug APIs to common part

Some APIs, such as chanctx/scan/roc are going to be moved to common
part, so also move debug APIs to common part to make them more general.

Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
---
 Makefile        |  2 +-
 debug.c         | 67 +++++++++++++++++++++++++++++++++++++++++++++++++
 debug.h         | 41 ++++++++++++++++++++++++++++++
 mt76.h          |  3 +++
 mt7996/mac.c    |  1 -
 mt7996/main.c   | 29 +++++++++++++++++----
 mt7996/mcu.c    | 34 ++++++++++++++++++++-----
 mt7996/mmio.c   |  5 ++++
 mt7996/mt7996.h |  1 +
 9 files changed, 170 insertions(+), 13 deletions(-)
 create mode 100644 debug.c
 create mode 100644 debug.h

diff --git a/Makefile b/Makefile
index 4af8fcb8..e681298d 100644
--- a/Makefile
+++ b/Makefile
@@ -12,7 +12,7 @@ obj-$(CONFIG_MT792x_USB) += mt792x-usb.o
 
 mt76-y := \
 	mmio.o util.o trace.o dma.o mac80211.o debugfs.o eeprom.o \
-	tx.o agg-rx.o mcu.o wed.o scan.o channel.o
+	tx.o agg-rx.o mcu.o wed.o scan.o channel.o debug.o
 
 mt76-$(CONFIG_PCI) += pci.o
 mt76-$(CONFIG_NL80211_TESTMODE) += testmode.o
diff --git a/debug.c b/debug.c
new file mode 100644
index 00000000..fb28c329
--- /dev/null
+++ b/debug.c
@@ -0,0 +1,67 @@
+// SPDX-License-Identifier: ISC
+/*
+ * Copyright (C) 2024 MediaTek Inc.
+ */
+
+#include <linux/vmalloc.h>
+#include "mt76.h"
+
+void mt76_info(struct mt76_dev *dev, const char *fmt, ...)
+{
+	struct va_format vaf = {
+		.fmt = fmt,
+	};
+	va_list args;
+
+	va_start(args, fmt);
+	vaf.va = &args;
+	dev_info(dev->dev, "%pV", &vaf);
+
+	va_end(args);
+}
+EXPORT_SYMBOL_GPL(mt76_info);
+
+void mt76_err(struct mt76_dev *dev, const char *fmt, ...)
+{
+	struct va_format vaf = {
+		.fmt = fmt,
+	};
+	va_list args;
+
+	va_start(args, fmt);
+	vaf.va = &args;
+	dev_err(dev->dev, "%pV", &vaf);
+
+	va_end(args);
+}
+EXPORT_SYMBOL_GPL(mt76_err);
+
+void mt76_warn(struct mt76_dev *dev, const char *fmt, ...)
+{
+	struct va_format vaf = {
+		.fmt = fmt,
+	};
+	va_list args;
+
+	va_start(args, fmt);
+	vaf.va = &args;
+	dev_warn_ratelimited(dev->dev, "%pV", &vaf);
+
+	va_end(args);
+}
+EXPORT_SYMBOL_GPL(mt76_warn);
+
+void __mt76_dbg(struct mt76_dev *dev, const char *fmt, ...)
+{
+	struct va_format vaf = {
+		.fmt = fmt,
+	};
+	va_list args;
+
+	va_start(args, fmt);
+	vaf.va = &args;
+	dev_printk(KERN_DEBUG, dev->dev, "%pV", &vaf);
+
+	va_end(args);
+}
+EXPORT_SYMBOL_GPL(__mt76_dbg);
diff --git a/debug.h b/debug.h
new file mode 100644
index 00000000..c85d9def
--- /dev/null
+++ b/debug.h
@@ -0,0 +1,41 @@
+/* SPDX-License-Identifier: ISC */
+/*
+ * Copyright (C) 2024 MediaTek Inc.
+ */
+#ifndef __MT76_DEBUG_H_
+#define __MT76_DEBUG_H_
+
+struct mt76_dev;
+
+enum mt76_debug_mask {
+	MT76_DBG_DEV = BIT(0),
+	MT76_DBG_BSS = BIT(1),
+	MT76_DBG_STA = BIT(2),
+	MT76_DBG_CHAN = BIT(3),
+	MT76_DBG_MLD = BIT(4),
+	MT76_DBG_TXRX = BIT(5),
+	MT76_DBG_SCAN = BIT(6),
+
+	MT76_DBG_ALL = 0xffffffff,
+};
+
+__printf(2, 3) void mt76_info(struct mt76_dev *dev, const char *fmt, ...);
+__printf(2, 3) void mt76_err(struct mt76_dev *dev, const char *fmt, ...);
+__printf(2, 3) void mt76_warn(struct mt76_dev *dev, const char *fmt, ...);
+
+__printf(2, 3) void __mt76_dbg(struct mt76_dev *dev,
+			       const char *fmt, ...);
+void mt76_dbg_dump(struct mt76_dev *dev,
+		   enum mt76_debug_mask mask,
+		   const char *msg, const char *prefix,
+		   const void *buf, size_t len);
+
+#define mt76_dbg(dev, dbg_mask, fmt, ...)			\
+do {								\
+	typeof(dbg_mask) mask = (dbg_mask);			\
+	typeof(dev) _dev = (dev);				\
+	if ((_dev->debug_mask) & mask)				\
+		__mt76_dbg(_dev, fmt, ##__VA_ARGS__);	\
+} while (0)
+
+#endif /* __MT76_DEBUG_H_ */
diff --git a/mt76.h b/mt76.h
index 716870de..0cbaff1f 100644
--- a/mt76.h
+++ b/mt76.h
@@ -23,6 +23,7 @@
 #endif
 #include "util.h"
 #include "testmode.h"
+#include "debug.h"
 
 #define CHAN2G(_idx, _freq) {			\
 	.band = NL80211_BAND_2GHZ,		\
@@ -1199,6 +1200,8 @@ struct mt76_dev {
 		struct mt76_sdio sdio;
 	};
 
+	unsigned int debug_mask;
+
 	const char *bin_file_name;
 	struct mt76_tx_debug tx_dbg_stats;
 };
diff --git a/mt7996/mac.c b/mt7996/mac.c
index d008827c..75af9381 100644
--- a/mt7996/mac.c
+++ b/mt7996/mac.c
@@ -13,7 +13,6 @@
 #include "mcu.h"
 #include "vendor.h"
 #include "mt7996_trace.h"
-#include "debug.h"
 
 static const struct mt7996_dfs_radar_spec etsi_radar_specs = {
 	.pulse_th = { 110, -10, -80, 40, 5200, 128, 5200 },
diff --git a/mt7996/main.c b/mt7996/main.c
index 695beac5..2ef9b694 100644
--- a/mt7996/main.c
+++ b/mt7996/main.c
@@ -10,10 +10,6 @@
 #include "mtk_mcu.h"
 #endif
 
-unsigned int mt7996_debug_mask = 0x1f;
-module_param(mt7996_debug_mask, uint, 0644);
-MODULE_PARM_DESC(mt7996_debug_mask, "Debugging mask");
-
 static void mt7996_testmode_disable_all(struct mt7996_dev *dev)
 {
 	struct mt7996_phy *phy;
@@ -381,6 +377,11 @@ int mt7996_vif_link_add(struct mt76_phy *mphy, struct ieee80211_vif *vif,
 		link->mbssid_idx = link_conf->bssid_index;
 	}
 
+	mt76_dbg(&dev->mt76, MT76_DBG_BSS,
+		 "%s: band=%u, bss_idx=%u, link_id=%u, wcid=%u\n",
+		 __func__, phy->mt76->band_idx, mlink->idx,
+		 link_id, msta_link->wcid.idx);
+
 	return 0;
 error:
 	mt7996_vif_link_remove(mphy, vif, link_conf, mlink);
@@ -691,7 +692,15 @@ static int mt7996_set_key(struct ieee80211_hw *hw, enum set_key_cmd cmd,
 		else
 			add = vif->valid_links ?: BIT(0);
 	}
-	// print_hex_dump(KERN_INFO , "", DUMP_PREFIX_OFFSET, 16, 1, key->key, key->keylen, false);
+
+	if (sta)
+		mt76_dbg(&dev->mt76, MT76_DBG_STA,
+			 "%s: keyidx=%d, link_bitmap=0x%lx (STA %pM)\n",
+			 __func__, key->keyidx, add, sta->addr);
+	else
+		mt76_dbg(&dev->mt76, MT76_DBG_BSS,
+			 "%s: keyidx=%d, link_bitmap=0x%lx\n",
+			 __func__, key->keyidx, add);
 
 	mutex_lock(&dev->mt76.mutex);
 
@@ -1650,10 +1659,16 @@ static void mt7996_tx(struct ieee80211_hw *hw,
 					rcu_dereference(sta->link[link_id]);
 
 				if (!link_sta) {
+					mt76_dbg(&dev->mt76, MT76_DBG_TXRX,
+						 "%s, request TX on invalid link_id=%u, use primary link (id=%u) instead.\n",
+						 __func__, link_id, msta->deflink_id);
 					link_id = msta->deflink_id;
 					link_sta = rcu_dereference(sta->link[link_id]);
 
 					if (!link_sta) {
+						mt76_dbg(&dev->mt76, MT76_DBG_TXRX,
+							 "%s, primary link became invalid, give up the TX\n",
+							 __func__);
 						goto unlock;
 					}
 				}
@@ -2731,6 +2746,10 @@ mt7996_change_vif_links(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 	unsigned long add = new_links & ~old_links;
 	int link_id, ret = 0;
 
+	mt76_dbg(&dev->mt76, MT76_DBG_MLD,
+		 "%s: old=0x%x, new=0x%x, dormant=0x%x\n",
+		 __func__, old_links, new_links, vif->dormant_links);
+
 	if (old_links == new_links)
 		return 0;
 
diff --git a/mt7996/mcu.c b/mt7996/mcu.c
index d796b9f3..65979b6b 100644
--- a/mt7996/mcu.c
+++ b/mt7996/mcu.c
@@ -1982,6 +1982,11 @@ mt7996_mcu_bss_basic_tlv(struct sk_buff *skb,
 
 	memcpy(bss->bssid, link_conf->bssid, ETH_ALEN);
 
+	mt76_dbg(phy->dev, MT76_DBG_BSS,
+		 "%s: band=%d, omac=%d, wmm_idx=%d, bssid=%pM, link=%d, en=%d\n",
+		 __func__, bss->band_idx, bss->omac_idx,
+		 bss->wmm_idx, bss->bssid, link_conf->link_id, enable);
+
 	bss->bcn_interval = cpu_to_le16(link_conf->beacon_int);
 	bss->dtim_period = link_conf->dtim_period;
 	bss->phymode = mt76_connac_get_phy_mode(phy, vif,
@@ -3391,6 +3396,11 @@ mt7996_mcu_sta_mld_setup_tlv(struct mt7996_dev *dev, struct sk_buff *skb,
 
 	vif = container_of((void *)msta->vif, struct ieee80211_vif, drv_priv);
 	mld_setup_link = (struct mld_setup_link *)mld_setup->link_info;
+	mt76_dbg(&dev->mt76, MT76_DBG_STA,
+		 "%s: STA %pM pri_link=%u, pri_wcid=%u, sec_link=%u, sec_wcid=%u\n",
+		 __func__, sta->addr, msta->deflink_id,
+		 le16_to_cpu(mld_setup->primary_id),
+		 msta->sec_link, le16_to_cpu(mld_setup->seconed_id));
 	for_each_set_bit(link_id, &links, IEEE80211_MLD_MAX_NUM_LINKS) {
 		struct mt7996_vif_link *link;
 
@@ -3405,6 +3415,11 @@ mt7996_mcu_sta_mld_setup_tlv(struct mt7996_dev *dev, struct sk_buff *skb,
 		mld_setup_link->wcid = cpu_to_le16(msta_link->wcid.idx);
 		mld_setup_link->bss_idx = link->mt76.idx;
 
+		mt76_dbg(&dev->mt76, MT76_DBG_STA,
+			 "%s: link_id(%d) wcid(%d) bss_idx(%d)\n",
+			 __func__, link_id, mld_setup_link->wcid,
+			 mld_setup_link->bss_idx);
+
 		mld_setup_link++;
 	}
 }
@@ -3446,6 +3461,9 @@ int mt7996_mcu_add_sta(struct mt7996_dev *dev, struct ieee80211_vif *vif,
 	/* starec basic */
 	mt76_connac_mcu_sta_basic_tlv(&dev->mt76, skb, vif, link_conf, link_sta,
 				      conn_state, newly);
+	mt76_dbg(&dev->mt76, MT76_DBG_DEV,
+		 "%s: link=%u, wcid=%u, newly=%d, conn_state=%d\n",
+		   __func__, wcid->link_id, wcid->idx, newly, conn_state);
 
 	if (conn_state == CONN_STATE_DISCONNECT)
 		goto out;
@@ -3678,9 +3696,13 @@ int mt7996_mcu_add_dev_info(struct mt7996_phy *phy, struct ieee80211_vif *vif,
 	if (mlink->omac_idx >= REPEATER_BSSID_START)
 		return mt7996_mcu_muar_config(dev, mlink, link_conf->addr, false, enable);
 
-	if (link_conf)
+	if (link_conf) {
 		memcpy(data.tlv.omac_addr, link_conf->addr, ETH_ALEN);
-
+		mt76_dbg(&dev->mt76, MT76_DBG_DEV,
+			 "%s: band=%u, omac=%u, addr=%pM, en=%d\n",
+			 __func__, data.hdr.band_idx, data.hdr.omac_idx,
+			 data.tlv.omac_addr, enable);
+	}
 	return mt76_mcu_send_msg(&dev->mt76, MCU_WMWA_UNI_CMD(DEV_INFO_UPDATE),
 				 &data, sizeof(data), true);
 }
@@ -8231,10 +8253,10 @@ int mt7996_mcu_set_eml_omn(struct ieee80211_vif *vif,
 		}
 	}
 
-	mlo_dbg(mconf->phy, "link:%u, wcid:%d, control:%x, mode:%d, bmp:%x\n",
-		msta_link->wcid.link_id, msta_link->wcid.idx, eml_omn->control,
-		!!(eml_omn->control & EML_OMN_CONTROL_EMLSR_MODE),
-		eml_op->bitmap);
+	mt76_dbg(&dev->mt76, MT76_DBG_MLD,
+		 "%s: link:%u, wcid:%d, control:%x, mode:%d, bmp:%x\n",
+		 __func__, msta_link->wcid.link_id, msta_link->wcid.idx, eml_omn->control,
+		 !!(eml_omn->control & EML_OMN_CONTROL_EMLSR_MODE), eml_op->bitmap);
 
 	return mt76_mcu_skb_send_msg(&dev->mt76, skb,
 			MCU_WMWA_UNI_CMD(STA_REC_UPDATE), true);
diff --git a/mt7996/mmio.c b/mt7996/mmio.c
index c7ee9bec..14d58ab2 100644
--- a/mt7996/mmio.c
+++ b/mt7996/mmio.c
@@ -17,6 +17,10 @@
 static bool wed_enable = true;
 module_param(wed_enable, bool, 0644);
 
+unsigned int mt76_debug_mask = 0x1f;
+module_param(mt76_debug_mask, uint, 0644);
+MODULE_PARM_DESC(mt76_debug_mask, "Debugging mask");
+
 static const struct __base mt7996_reg_base[] = {
 	[WF_AGG_BASE]		= { { 0x820e2000, 0x820f2000, 0x830e2000 } },
 	[WF_ARB_BASE]		= { { 0x820e3000, 0x820f3000, 0x830e3000 } },
@@ -714,6 +718,7 @@ static int mt7996_mmio_init(struct mt76_dev *mdev,
 	dev->mt76.bus = bus_ops;
 
 	mdev->rev = (device_id << 16) | (mt76_rr(dev, MT_HW_REV) & 0xff);
+	mdev->debug_mask = mt76_debug_mask;
 
 	dev_dbg(mdev->dev, "ASIC revision: %04x\n", mdev->rev);
 
diff --git a/mt7996/mt7996.h b/mt7996/mt7996.h
index 6dbba80d..453d7a6b 100644
--- a/mt7996/mt7996.h
+++ b/mt7996/mt7996.h
@@ -10,6 +10,7 @@
 #include <linux/ktime.h>
 #include <linux/pci.h>
 #include "../mt76_connac.h"
+#include "../debug.h"
 #include "regs.h"
 
 #define MT7996_MAX_RADIOS		3
-- 
2.45.2

