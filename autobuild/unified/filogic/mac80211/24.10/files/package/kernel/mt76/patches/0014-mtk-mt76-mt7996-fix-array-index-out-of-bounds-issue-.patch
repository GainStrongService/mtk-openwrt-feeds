From 0c133872c4296d7071b5d3dd9d26ff3c54265485 Mon Sep 17 00:00:00 2001
From: Howard Hsu <howard-yh.hsu@mediatek.com>
Date: Wed, 23 Oct 2024 16:05:22 +0800
Subject: [PATCH 014/146] mtk: mt76: mt7996: fix array-index-out-of-bounds
 issue when allocating starec bfer

Due to the lack check of matrix size, if chip tx path number is bigger
than 4, it will cause illegal memory access.

For mt7992 5T5R case, we don't need to set bf->mem_20m.

Signed-off-by: Howard Hsu <howard-yh.hsu@mediatek.com>

---
 mt7996/mcu.c | 15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

diff --git a/mt7996/mcu.c b/mt7996/mcu.c
index aa1eb0da..b1f07165 100644
--- a/mt7996/mcu.c
+++ b/mt7996/mcu.c
@@ -1665,12 +1665,13 @@ mt7996_mcu_sta_bfer_tlv(struct mt7996_dev *dev, struct sk_buff *skb,
 {
 #define EBF_MODE	BIT(0)
 #define IBF_MODE	BIT(1)
+#define BF_MAT_ORDER	4
 	struct mt7996_vif *mvif = (struct mt7996_vif *)vif->drv_priv;
 	struct mt7996_phy *phy = mvif->phy;
 	int tx_ant = hweight16(phy->mt76->chainmask) - 1;
 	struct sta_rec_bf *bf;
 	struct tlv *tlv;
-	static const u8 matrix[4][4] = {
+	static const u8 matrix[BF_MAT_ORDER][BF_MAT_ORDER] = {
 		{0, 0, 0, 0},
 		{1, 1, 0, 0},	/* 2x1, 2x2, 2x3, 2x4 */
 		{2, 4, 4, 0},	/* 3x1, 3x2, 3x3, 3x4 */
@@ -1716,10 +1717,14 @@ mt7996_mcu_sta_bfer_tlv(struct mt7996_dev *dev, struct sk_buff *skb,
 	else
 		bf->ibf_timeout = 0x18;
 
-	if (ebf && bf->nrow != tx_ant)
-		bf->mem_20m = matrix[tx_ant][bf->ncol];
-	else
-		bf->mem_20m = matrix[bf->nrow][bf->ncol];
+	if (bf->ncol < BF_MAT_ORDER) {
+		if (ebf)
+			bf->mem_20m = tx_ant < BF_MAT_ORDER ?
+				      matrix[tx_ant][bf->ncol] : 0;
+		else
+			bf->mem_20m = bf->nrow < BF_MAT_ORDER ?
+				      matrix[bf->nrow][bf->ncol] : 0;
+	}
 
 	switch (sta->deflink.bandwidth) {
 	case IEEE80211_STA_RX_BW_160:
-- 
2.45.2

