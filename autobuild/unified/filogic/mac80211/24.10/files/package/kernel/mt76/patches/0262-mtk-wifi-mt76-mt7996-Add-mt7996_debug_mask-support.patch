From 5a80bd3160cf02d1f0bb28f737a0858651399a54 Mon Sep 17 00:00:00 2001
From: MeiChia Chiu <MeiChia.Chiu@mediatek.com>
Date: Thu, 14 Nov 2024 15:52:20 +0800
Subject: [PATCH 262/277] mtk: wifi: mt76: mt7996: Add mt7996_debug_mask
 support

Add mt7996_debug_mask support
Remove the following functions and change them to __mt7996_dbg()
mt76_vif_dbg()
mt76_dbg()
mt76_trace()

Usage -
The default value of debug mask is 0x1f,
which means enabling all logs except TXRX.

To check the value of debug mask:
cat /sys/module/mt7996e/parameters/mt7996_debug_mask

There are two methods to modify the value:
1. vi /etc/modules.d/mt7996e
mt7996e mt7996_debug_mask=<new value>
reboot

2. reload mt7996e module with the debug mask value
modprobe mt7996e mt7996_debug_mash=<new value>

Signed-off-by: MeiChia Chiu <MeiChia.Chiu@mediatek.com>
---
 mt7996/Makefile |   3 +-
 mt7996/debug.c  |  65 ++++++++++++++++++++++++++++++
 mt7996/debug.h  |  41 +++++++++++++++++++
 mt7996/main.c   | 104 ++++++++++++++++++++++++++++++++----------------
 mt7996/mcu.c    |  54 ++++++++++++++++---------
 mt7996/mt7996.h |  10 -----
 6 files changed, 213 insertions(+), 64 deletions(-)
 create mode 100644 mt7996/debug.c
 create mode 100644 mt7996/debug.h

diff --git a/mt7996/Makefile b/mt7996/Makefile
index 936edc61..dd652734 100644
--- a/mt7996/Makefile
+++ b/mt7996/Makefile
@@ -12,4 +12,5 @@ mt7996e-y := pci.o init.o dma.o eeprom.o main.o mcu.o mac.o \
 mt7996e-$(CONFIG_DEV_COREDUMP) += coredump.o
 mt7996e-$(CONFIG_NL80211_TESTMODE) += testmode.o
 
-mt7996e-y += mtk_debugfs.o mtk_mcu.o mtk_debugfs_i.o trace.o
+mt7996e-y += mtk_debugfs.o mtk_mcu.o mtk_debugfs_i.o trace.o \
+	     debug.o
diff --git a/mt7996/debug.c b/mt7996/debug.c
new file mode 100644
index 00000000..2bcb3669
--- /dev/null
+++ b/mt7996/debug.c
@@ -0,0 +1,65 @@
+// SPDX-License-Identifier: ISC
+/*
+ * Copyright (C) 2024 MediaTek Inc.
+ */
+
+#include <linux/vmalloc.h>
+#include "debug.h"
+#include "mt7996.h"
+
+void mt7996_info(struct mt7996_dev *dev, const char *fmt, ...)
+{
+	struct va_format vaf = {
+		.fmt = fmt,
+	};
+	va_list args;
+
+	va_start(args, fmt);
+	vaf.va = &args;
+	dev_info(dev->mt76.dev, "%pV", &vaf);
+
+	va_end(args);
+}
+
+void mt7996_err(struct mt7996_dev *dev, const char *fmt, ...)
+{
+	struct va_format vaf = {
+		.fmt = fmt,
+	};
+	va_list args;
+
+	va_start(args, fmt);
+	vaf.va = &args;
+	dev_err(dev->mt76.dev, "%pV", &vaf);
+
+	va_end(args);
+}
+
+void mt7996_warn(struct mt7996_dev *dev, const char *fmt, ...)
+{
+	struct va_format vaf = {
+		.fmt = fmt,
+	};
+	va_list args;
+
+	va_start(args, fmt);
+	vaf.va = &args;
+	dev_warn_ratelimited(dev->mt76.dev, "%pV", &vaf);
+
+	va_end(args);
+}
+
+void __mt7996_dbg(struct mt7996_dev *dev, const char *fmt, ...)
+{
+	struct va_format vaf = {
+		.fmt = fmt,
+	};
+	va_list args;
+
+	va_start(args, fmt);
+	vaf.va = &args;
+	dev_printk(KERN_DEBUG, dev->mt76.dev, "%pV", &vaf);
+
+	va_end(args);
+}
+
diff --git a/mt7996/debug.h b/mt7996/debug.h
new file mode 100644
index 00000000..c9454567
--- /dev/null
+++ b/mt7996/debug.h
@@ -0,0 +1,41 @@
+/* SPDX-License-Identifier: ISC */
+/*
+ * Copyright (C) 2024 MediaTek Inc.
+ */
+#ifndef __MT7996_DEBUG_H_
+#define __MT7996_DEBUG_H_
+
+#include "mt7996.h"
+
+enum mt7996_debug_mask {
+	MT7996_DBG_DEV = BIT(0),
+	MT7996_DBG_BSS = BIT(1),
+	MT7996_DBG_STA = BIT(2),
+	MT7996_DBG_CHAN = BIT(3),
+	MT7996_DBG_MLD = BIT(4),
+	MT7996_DBG_TXRX = BIT(5),
+
+	MT7996_DBG_ALL = 0xffffffff,
+};
+
+__printf(2, 3) void mt7996_info(struct mt7996_dev *dev, const char *fmt, ...);
+__printf(2, 3) void mt7996_err(struct mt7996_dev *dev, const char *fmt, ...);
+__printf(2, 3) void mt7996_warn(struct mt7996_dev *dev, const char *fmt, ...);
+
+extern unsigned int mt7996_debug_mask;
+
+__printf(2, 3) void __mt7996_dbg(struct mt7996_dev *dev,
+				 const char *fmt, ...);
+void mt7996_dbg_dump(struct mt7996_dev *dev,
+		     enum mt7996_debug_mask mask,
+		     const char *msg, const char *prefix,
+		     const void *buf, size_t len);
+
+#define mt7996_dbg(dev, dbg_mask, fmt, ...)			\
+do {								\
+	typeof(dbg_mask) mask = (dbg_mask);			\
+	if (mt7996_debug_mask & mask)				\
+		__mt7996_dbg(dev, fmt, ##__VA_ARGS__);	\
+} while (0)
+
+#endif /* __MT7996_DEBUG_H_ */
diff --git a/mt7996/main.c b/mt7996/main.c
index 7493ec7e..4e4d4525 100644
--- a/mt7996/main.c
+++ b/mt7996/main.c
@@ -3,13 +3,19 @@
  * Copyright (C) 2022 MediaTek Inc.
  */
 
+#include <linux/module.h>
 #include "mt7996.h"
 #include "mcu.h"
 #include "mac.h"
+#include "debug.h"
 #ifdef CONFIG_MTK_DEBUG
 #include "mtk_mcu.h"
 #endif
 
+unsigned int mt7996_debug_mask = 0x1f;
+module_param(mt7996_debug_mask, uint, 0644);
+MODULE_PARM_DESC(mt7996_debug_mask, "Debugging mask");
+
 static bool mt7996_dev_running(struct mt7996_dev *dev)
 {
 	struct mt7996_phy *phy;
@@ -306,11 +312,14 @@ static void mt7996_remove_bss_conf(struct ieee80211_vif *vif,
 	if (!mlink || !mconf)
 		return;
 
-	mt76_vif_dbg(vif, "band=%u, bss_idx=%u, link_id=%u, wcid=%u\n",
-		     mconf->phy->mt76->band_idx, mconf->mt76.idx, mconf->link_id, mlink->wcid.idx);
-
 	phy = mconf->phy;
 	dev = phy->dev;
+
+	mt7996_dbg(dev, MT7996_DBG_BSS,
+		   "%s: band=%u, bss_idx=%u, link_id=%u, wcid=%u\n",
+		   __func__, mconf->phy->mt76->band_idx, mconf->mt76.idx,
+		   mconf->link_id, mlink->wcid.idx);
+
 	mt7996_mcu_add_sta(dev, vif, NULL, mconf, NULL, mlink, CONN_STATE_DISCONNECT,
 			   false);
 	mt7996_mcu_add_bss_info(phy, vif, NULL, mconf, mlink, false);
@@ -466,8 +475,10 @@ static int mt7996_add_bss_conf(struct mt7996_phy *phy,
 	rcu_assign_pointer(mvif->link[link_id], mconf);
 	rcu_assign_pointer(mvif->sta.link[link_id], mlink);
 
-	mt76_vif_dbg(vif, "band=%u, bss_idx=%u, link_id=%u, wcid=%u\n",
-		     phy->mt76->band_idx, mconf->mt76.idx, mconf->link_id, mlink->wcid.idx);
+	mt7996_dbg(dev, MT7996_DBG_BSS,
+		   "%s: band=%u, bss_idx=%u, link_id=%u, wcid=%u\n",
+		   __func__, phy->mt76->band_idx, mconf->mt76.idx,
+		   mconf->link_id, mlink->wcid.idx);
 
 	return 0;
 error:
@@ -616,10 +627,13 @@ static int mt7996_set_key(struct ieee80211_hw *hw, enum set_key_cmd cmd,
 	}
 
 	if (sta)
-		mt76_trace(vif, "keyidx=%d, link_bitmap=0x%lx (STA %pM)\n",
-			   key->keyidx, add, sta->addr);
+		mt7996_dbg(dev, MT7996_DBG_STA,
+			   "%s: keyidx=%d, link_bitmap=0x%lx (STA %pM)\n",
+			   __func__, key->keyidx, add, sta->addr);
 	else
-		mt76_trace(vif, "keyidx=%d, link_bitmap=0x%lx\n", key->keyidx, add);
+		mt7996_dbg(dev, MT7996_DBG_BSS,
+			   "%s: keyidx=%d, link_bitmap=0x%lx\n",
+			   __func__, key->keyidx, add);
 
 	mutex_lock(&dev->mt76.mutex);
 
@@ -1228,8 +1242,10 @@ static int mt7996_add_link_sta(struct mt7996_dev *dev,
 		rcu_assign_pointer(dev->mt76.wcid[idx], &mlink->wcid);
 		mt76_wcid_init(&mlink->wcid);
 
-		mt76_vif_dbg(conf->vif, "STA %pM, wcid=%u, link_id=%u (%pM), pri_link=%u, sec_link=%u\n",
-		     sta->addr, mlink->wcid.idx, link_id, link_sta->addr, msta->pri_link, msta->sec_link);
+		mt7996_dbg(dev, MT7996_DBG_STA,
+			   "%s: STA %pM, wcid=%u, link_id=%u (%pM), pri_link=%u, sec_link=%u\n",
+			   __func__, sta->addr, mlink->wcid.idx, link_id,
+			   link_sta->addr, msta->pri_link, msta->sec_link);
 	}
 
 	if (!assoc)
@@ -1278,7 +1294,7 @@ mt7996_mac_sta_remove_links(struct mt7996_dev *dev, struct ieee80211_vif *vif,
 	if (!ieee80211_vif_is_mld(vif) || rem == sta->valid_links)
 		cancel_delayed_work(&mvif->beacon_mon_work);
 
-	mt76_vif_dbg(vif, "removed_links=0x%lx\n", rem);
+	mt7996_dbg(dev, MT7996_DBG_STA, "%s: removed_links=0x%lx\n", __func__, rem);
 	for_each_set_bit(link_id, &rem, IEEE80211_MLD_MAX_NUM_LINKS) {
 		struct mt7996_bss_conf *mconf =
 			mconf_dereference_protected(mvif, link_id);
@@ -1308,7 +1324,8 @@ mt7996_mac_sta_add_links(struct mt7996_dev *dev, struct ieee80211_vif *vif,
 	unsigned int link_id;
 	int i, ret;
 
-	mt76_vif_dbg(vif, "added_links=0x%lx, assoc=%d\n", add, assoc);
+	mt7996_dbg(dev, MT7996_DBG_STA,
+		   "%s: added_links=0x%lx, assoc=%d\n", __func__, add, assoc);
 	for_each_set_bit(link_id, &add, IEEE80211_MLD_MAX_NUM_LINKS) {
 		struct mt7996_bss_conf *mconf =
 			mconf_dereference_protected(mvif, link_id);
@@ -1538,13 +1555,16 @@ static void mt7996_tx(struct ieee80211_hw *hw,
 					rcu_dereference(sta->link[link_id]);
 
 				if (!link_sta) {
-					mt76_vif_dbg(vif, "request TX on invalid link_id=%u, use primary link (id=%u) instead.\n",
-						     link_id, msta->pri_link);
+					mt7996_dbg(dev, MT7996_DBG_TXRX,
+						   "%s, request TX on invalid link_id=%u, use primary link (id=%u) instead.\n",
+						   __func__, link_id, msta->pri_link);
 					link_id = msta->pri_link;
 					link_sta = rcu_dereference(sta->link[link_id]);
 
 					if (!link_sta) {
-						mt76_vif_dbg(vif, "primary link became invalid, give up the TX\n");
+						mt7996_dbg(dev, MT7996_DBG_TXRX,
+							   "%s, primary link became invalid, give up the TX\n",
+							   __func__);
 						goto unlock;
 					}
 				}
@@ -2595,11 +2615,13 @@ mt7996_hw_scan(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 {
 	struct cfg80211_scan_request *req = &hw_req->req;
 	struct mt7996_phy *phy = mt7996_band_phy(hw, req->channels[0]->band);
+	struct mt7996_dev *dev = mt7996_hw_dev(hw);
 	struct mt7996_vif *mvif = (struct mt7996_vif *)vif->drv_priv;
 	struct mt7996_bss_conf *mconf;
 	int ret;
 
-	mt76_vif_dbg(vif, "trigger scan on mt76 band %u\n", phy->mt76->band_idx);
+	mt7996_dbg(dev, MT7996_DBG_CHAN, "%s: trigger scan on mt76 band %u\n",
+		   __func__, phy->mt76->band_idx);
 	mutex_lock(&phy->dev->mt76.mutex);
 	if (WARN_ON(phy->scan_req || phy->scan_chan ||
 		    test_bit(MT76_STATE_ROC, &phy->mt76->state))) {
@@ -2891,9 +2913,11 @@ mt7996_add_chanctx(struct ieee80211_hw *hw, struct ieee80211_chanctx_conf *conf)
 {
 	struct mt7996_phy *phy = mt7996_band_phy(hw, conf->def.chan->band);
 	struct mt7996_chanctx *ctx = mt7996_chanctx_get(conf);
+	struct mt7996_dev *dev = mt7996_hw_dev(hw);
 	int ret;
 
-	mt76_dbg(hw, "add %u on mt76 band %d\n", conf->def.chan->hw_value, phy->mt76->band_idx);
+	mt7996_dbg(dev, MT7996_DBG_CHAN, "%s: add %u on mt76 band %d\n",
+		   __func__, conf->def.chan->hw_value, phy->mt76->band_idx);
 	mutex_lock(&phy->dev->mt76.mutex);
 
 	if (ctx->assigned) {
@@ -2931,8 +2955,10 @@ mt7996_remove_chanctx(struct ieee80211_hw *hw, struct ieee80211_chanctx_conf *co
 {
 	struct mt7996_chanctx *ctx = mt7996_chanctx_get(conf);
 	struct mt7996_phy *phy = ctx->phy;
+	struct mt7996_dev *dev = mt7996_hw_dev(hw);
 
-	mt76_dbg(hw, "remove %u\n", conf->def.chan->hw_value);
+	mt7996_dbg(dev, MT7996_DBG_CHAN, "%s: remove %u\n",
+		   __func__, conf->def.chan->hw_value);
 	cancel_delayed_work_sync(&phy->scan_work);
 	cancel_delayed_work_sync(&phy->roc_complete_work);
 	cancel_delayed_work_sync(&phy->mt76->mac_work);
@@ -2951,6 +2977,7 @@ mt7996_change_chanctx(struct ieee80211_hw *hw, struct ieee80211_chanctx_conf *co
 		      u32 changed)
 {
 	struct mt7996_chanctx *ctx = mt7996_chanctx_get(conf);
+	struct mt7996_dev *dev = mt7996_hw_dev(hw);
 	struct mt7996_phy *phy = ctx->phy;
 
 	if (changed & IEEE80211_CHANCTX_CHANGE_WIDTH ||
@@ -2960,7 +2987,8 @@ mt7996_change_chanctx(struct ieee80211_hw *hw, struct ieee80211_chanctx_conf *co
 
 		mt7996_config_channel(phy, &ctx->chandef);
 
-		mt76_dbg(hw, "change to %u, 0x%x\n", conf->def.chan->hw_value, changed);
+		mt7996_dbg(dev, MT7996_DBG_CHAN, "%s: change to %u, 0x%x\n",
+			   __func__, conf->def.chan->hw_value, changed);
 	}
 }
 
@@ -2970,14 +2998,15 @@ mt7996_assign_vif_chanctx(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 			  struct ieee80211_chanctx_conf *conf)
 {
 	struct mt7996_chanctx *ctx = mt7996_chanctx_get(conf);
+	struct mt7996_dev *dev = mt7996_hw_dev(hw);
 	struct mt7996_phy *phy = ctx->phy;
 	struct mt7996_vif *mvif = (struct mt7996_vif *)vif->drv_priv;
 	struct mt7996_bss_conf *mconf;
 	u8 link_id = link_conf->link_id;
 	int ret;
 
-	mt76_vif_dbg(vif, "assign link_id %u to %d MHz\n", link_conf->link_id,
-		     conf->def.chan->center_freq);
+	mt7996_dbg(dev, MT7996_DBG_CHAN, "%s: assign link_id %u to %d MHz\n",
+		   __func__, link_conf->link_id, conf->def.chan->center_freq);
 
 	mutex_lock(&phy->dev->mt76.mutex);
 
@@ -3016,9 +3045,10 @@ mt7996_unassign_vif_chanctx(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 {
 	struct mt7996_chanctx *ctx = mt7996_chanctx_get(conf);
 	struct mt7996_phy *phy = ctx->phy;
+	struct mt7996_dev *dev = mt7996_hw_dev(hw);
 
-	mt76_vif_dbg(vif, "remove link %u from %d MHz\n",
-		     link_conf->link_id, conf->def.chan->center_freq);
+	mt7996_dbg(dev, MT7996_DBG_CHAN, "%s, remove link %u from %d MHz\n",
+		   __func__, link_conf->link_id, conf->def.chan->center_freq);
 	cancel_delayed_work_sync(&phy->scan_work);
 	cancel_delayed_work_sync(&phy->roc_complete_work);
 
@@ -3049,15 +3079,16 @@ mt7996_switch_vif_chanctx(struct ieee80211_hw *hw,
 		if (vifs[i].old_ctx == vifs[i].new_ctx)
 			continue;
 
-		mt76_vif_dbg(vifs[i].vif,
-			     "chan=%d->%d, width=%d->%d, punct_bitmap=0x%04x->0x%04x, link=%u\n",
-			     vifs[i].old_ctx->def.chan->hw_value,
-			     vifs[i].new_ctx->def.chan->hw_value,
-			     vifs[i].old_ctx->def.width,
-			     vifs[i].new_ctx->def.width,
-			     vifs[i].old_ctx->def.punctured,
-			     vifs[i].new_ctx->def.punctured,
-			     vifs[i].link_conf->link_id);
+		mt7996_dbg(dev, MT7996_DBG_CHAN,
+			   "%s: chan=%d->%d, width=%d->%d, punct_bitmap=0x%04x->0x%04x, link=%u\n",
+			   __func__,
+			   vifs[i].old_ctx->def.chan->hw_value,
+			   vifs[i].new_ctx->def.chan->hw_value,
+			   vifs[i].old_ctx->def.width,
+			   vifs[i].new_ctx->def.width,
+			   vifs[i].old_ctx->def.punctured,
+			   vifs[i].new_ctx->def.punctured,
+			   vifs[i].link_conf->link_id);
 
 		mutex_lock(&dev->mt76.mutex);
 
@@ -3119,8 +3150,10 @@ mt7996_change_vif_links(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 	unsigned long add = new_links & ~old_links;
 	int link_id, ret = 0;
 
-	mt76_vif_dbg(vif, "old=0x%x, new=0x%x, dormant=0x%x\n",
-		     old_links, new_links, vif->dormant_links);
+	mt7996_dbg(dev, MT7996_DBG_MLD,
+		   "%s: old=0x%x, new=0x%x, dormant=0x%x\n",
+		   __func__, old_links, new_links, vif->dormant_links);
+
 	if (old_links == new_links)
 		return 0;
 
@@ -3205,7 +3238,8 @@ mt7996_change_sta_links(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 	int ret = 0, link_id;
 	bool assoc;
 
-	mt76_vif_dbg(vif, "STA %pM old=0x%x, new=0x%x\n", sta->addr, old_links, new_links);
+	mt7996_dbg(dev, MT7996_DBG_STA, "%s: STA %pM old=0x%x, new=0x%x\n",
+		   __func__, sta->addr, old_links, new_links);
 	mutex_lock(&dev->mt76.mutex);
 
 	for_each_set_bit(link_id, &rem, IEEE80211_MLD_MAX_NUM_LINKS) {
diff --git a/mt7996/mcu.c b/mt7996/mcu.c
index ba468088..8e243d2a 100644
--- a/mt7996/mcu.c
+++ b/mt7996/mcu.c
@@ -10,6 +10,7 @@
 #include "mac.h"
 #include "eeprom.h"
 #include "mt7996_trace.h"
+#include "debug.h"
 
 #define fw_name(_dev, name, ...)	({			\
 	char *_fw;						\
@@ -1770,6 +1771,7 @@ mt7996_mcu_bss_mld_tlv(struct sk_buff *skb, struct ieee80211_vif *vif,
 		       struct ieee80211_bss_conf *conf, struct mt7996_bss_conf *mconf)
 {
 	struct mt7996_vif *mvif = (struct mt7996_vif *)vif->drv_priv;
+	struct mt7996_dev *dev = mconf->phy->dev;
 	struct bss_mld_tlv *mld;
 	struct tlv *tlv;
 
@@ -1787,8 +1789,10 @@ mt7996_mcu_bss_mld_tlv(struct sk_buff *skb, struct ieee80211_vif *vif,
 
 	mld->own_mld_id = mconf->own_mld_id;
 	mld->link_id = conf->link_id;
-	mt76_trace(vif, "group_mld_id=%d, own_mld_id=%d, remap_idx=%d, mld->addr[%pM]\n",
-		   mld->group_mld_id,  mld->own_mld_id, mld->remap_idx, mld->mac_addr);
+	mt7996_dbg(dev, MT7996_DBG_BSS,
+		   "%s: group_mld_id=%d, own_mld_id=%d, remap_idx=%d, mld->addr[%pM]\n",
+		   __func__, mld->group_mld_id,  mld->own_mld_id,
+		   mld->remap_idx, mld->mac_addr);
 }
 
 static void
@@ -1875,6 +1879,7 @@ mt7996_mcu_bss_basic_tlv(struct sk_buff *skb, struct ieee80211_vif *vif,
 			 u16 wlan_idx, bool enable)
 {
 	struct mt76_phy *phy = mconf->phy->mt76;
+	struct mt7996_dev *dev = mconf->phy->dev;
 	struct cfg80211_chan_def *chandef = &phy->chandef;
 	struct mt76_connac_bss_basic_tlv *bss;
 	u32 type = CONNECTION_INFRA_AP;
@@ -1944,8 +1949,10 @@ mt7996_mcu_bss_basic_tlv(struct sk_buff *skb, struct ieee80211_vif *vif,
 
 	memcpy(bss->bssid, conf->bssid, ETH_ALEN);
 
-	mt76_trace(vif, "band=%d, omac=%d, wmm_idx=%d, bssid=%pM, link=%d, en=%d\n",
-		   bss->band_idx, bss->omac_idx, bss->wmm_idx, bss->bssid, conf->link_id, enable);
+	mt7996_dbg(dev, MT7996_DBG_BSS,
+		   "%s: band=%d, omac=%d, wmm_idx=%d, bssid=%pM, link=%d, en=%d\n",
+		   __func__, bss->band_idx, bss->omac_idx,
+		   bss->wmm_idx, bss->bssid, conf->link_id, enable);
 
 	bss->bcn_interval = cpu_to_le16(conf->beacon_int);
 	bss->dtim_period = conf->dtim_period;
@@ -3314,8 +3321,6 @@ mt7996_mcu_sta_mld_setup_tlv(struct mt7996_dev *dev, struct sk_buff *skb,
 	struct mt7996_bss_conf *mconf;
 	struct tlv *tlv;
 	unsigned int link_id;
-	struct ieee80211_vif *vif = container_of((void *)msta->vif, struct ieee80211_vif,
-						 drv_priv);
 
 	mlink = mlink_dereference_protected(msta, msta->pri_link);
 	if (!mlink)
@@ -3339,9 +3344,13 @@ mt7996_mcu_sta_mld_setup_tlv(struct mt7996_dev *dev, struct sk_buff *skb,
 	mld_setup->link_num = hweight16(valid_links);
 
 	mld_setup_link = (struct mld_setup_link *)mld_setup->link_info;
-	mt76_trace(vif, "STA %pM pri_link=%u, pri_wcid=%u, sec_link=%u, sec_wcid=%u\n",
-		   sta->addr, msta->pri_link, le16_to_cpu(mld_setup->primary_id),
+
+	mt7996_dbg(dev, MT7996_DBG_STA,
+		   "%s: STA %pM pri_link=%u, pri_wcid=%u, sec_link=%u, sec_wcid=%u\n",
+		   __func__, sta->addr, msta->pri_link,
+		   le16_to_cpu(mld_setup->primary_id),
 		   msta->sec_link, le16_to_cpu(mld_setup->seconed_id));
+
 	for_each_set_bit(link_id, &valid_links, IEEE80211_MLD_MAX_NUM_LINKS) {
 		mlink = mlink_dereference_protected(msta, link_id);
 		mconf = mconf_dereference_protected(msta->vif, link_id);
@@ -3351,8 +3360,12 @@ mt7996_mcu_sta_mld_setup_tlv(struct mt7996_dev *dev, struct sk_buff *skb,
 
 		mld_setup_link->wcid = cpu_to_le16(mlink->wcid.idx);
 		mld_setup_link->bss_idx = mconf->mt76.idx;
-		mt76_trace(vif, "link_id(%d) wcid(%d) bss_idx(%d)\n",
-		link_id, mld_setup_link->wcid, mld_setup_link->bss_idx);
+
+		mt7996_dbg(dev, MT7996_DBG_STA,
+			   "%s: link_id(%d) wcid(%d) bss_idx(%d)\n",
+			   __func__, link_id, mld_setup_link->wcid,
+			   mld_setup_link->bss_idx);
+
 		mld_setup_link++;
 	}
 }
@@ -3431,8 +3444,10 @@ int mt7996_mcu_add_sta(struct mt7996_dev *dev, struct ieee80211_vif *vif,
 	/* starec basic */
 	mt76_connac_mcu_sta_basic_tlv(&dev->mt76, skb, vif, conf, link_sta,
 				      conn_state, newly);
-	mt76_trace(vif, "link=%u, wcid=%u, newly=%d, conn_state=%d\n",
-		   mlink->wcid.link_id, mlink->wcid.idx, newly, conn_state);
+	mt7996_dbg(dev, MT7996_DBG_DEV,
+		   "%s: link=%u, wcid=%u, newly=%d, conn_state=%d\n",
+		   __func__, mlink->wcid.link_id, mlink->wcid.idx,
+		   newly, conn_state);
 
 	if (conn_state == CONN_STATE_DISCONNECT)
 		goto out;
@@ -3735,8 +3750,10 @@ int mt7996_mcu_add_dev_info(struct mt7996_phy *phy,
 
 	if (conf) {
 		memcpy(data.tlv.omac_addr, conf->addr, ETH_ALEN);
-		mt76_trace(conf->vif, "band=%u, omac=%u, addr=%pM, en=%d\n",
-			   data.hdr.band_idx, data.hdr.omac_idx, data.tlv.omac_addr, enable);
+		mt7996_dbg(dev, MT7996_DBG_DEV,
+			   "%s: band=%u, omac=%u, addr=%pM, en=%d\n",
+			   __func__, data.hdr.band_idx, data.hdr.omac_idx,
+			   data.tlv.omac_addr, enable);
 	}
 	return mt76_mcu_send_msg(&dev->mt76, MCU_WMWA_UNI_CMD(DEV_INFO_UPDATE),
 				 &data, sizeof(data), true);
@@ -8129,10 +8146,11 @@ int mt7996_mcu_set_eml_omn(struct ieee80211_hw *hw,
 		}
 	}
 
-	mt76_vif_dbg(vif, "link:%u, wcid:%d, control:%x, mode:%d, bmp:%x\n",
-		     mlink->wcid.link_id, mlink->wcid.idx, eml_omn->control,
-		     !!(eml_omn->control & EML_OMN_CONTROL_EMLSR_MODE),
-		     eml_op->bitmap);
+	mt7996_dbg(dev, MT7996_DBG_MLD,
+		   "%s: link:%u, wcid:%d, control:%x, mode:%d, bmp:%x\n",
+		   __func__, mlink->wcid.link_id, mlink->wcid.idx, eml_omn->control,
+		   !!(eml_omn->control & EML_OMN_CONTROL_EMLSR_MODE),
+		   eml_op->bitmap);
 
 	return mt76_mcu_skb_send_msg(&dev->mt76, skb,
 			MCU_WMWA_UNI_CMD(STA_REC_UPDATE), true);
diff --git a/mt7996/mt7996.h b/mt7996/mt7996.h
index 969a0f32..7244dd32 100644
--- a/mt7996/mt7996.h
+++ b/mt7996/mt7996.h
@@ -1179,16 +1179,6 @@ mt7996_get_active_link_wcid(struct mt7996_dev *dev, struct mt76_wcid *old_wcid)
 	return old_wcid;
 }
 
-#define mt76_dbg(hw, fmt, ...) wiphy_info(hw->wiphy, "%s: " fmt, __func__, ##__VA_ARGS__)
-#define mt76_vif_dbg(vif, fmt, ...)				\
-	pr_info("%s: %s: " fmt,					\
-		ieee80211_vif_to_wdev(vif)->netdev->name,	\
-		__func__, ##__VA_ARGS__)
-#define mt76_trace(vif, fmt, ...)				\
-	trace_printk("(%s) " fmt,				\
-		     ieee80211_vif_to_wdev(vif)->netdev->name,	\
-		     ##__VA_ARGS__)
-
 extern const struct ieee80211_ops mt7996_ops;
 extern struct pci_driver mt7996_pci_driver;
 extern struct pci_driver mt7996_hif_driver;
-- 
2.45.2

