From 73d6b1ed0b8e3a9f593c9178e3a597d7a0c320b4 Mon Sep 17 00:00:00 2001
From: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
Date: Thu, 19 Dec 2024 16:46:21 +0800
Subject: [PATCH 62/75] mtk: mt76: mt7996: replace band idx with radio idx in
 vendor command

Replace band idx with radio idx in vendor command in order to remove
band idx from hostapd config.
Same as hostapd's patch, whether radio idx or link idx is better can
be further discussed.

Signed-off-by: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
---
 mt7996/mt7996.h |  9 ++++++
 mt7996/vendor.c | 77 +++++++++++++++++++------------------------------
 mt7996/vendor.h |  4 +--
 3 files changed, 41 insertions(+), 49 deletions(-)

diff --git a/mt7996/mt7996.h b/mt7996/mt7996.h
index 7281af12..1d18a46d 100644
--- a/mt7996/mt7996.h
+++ b/mt7996/mt7996.h
@@ -1048,6 +1048,15 @@ mt7996_band_valid(struct mt7996_dev *dev, u8 band)
 	return band <= MT_BAND2;
 }
 
+static inline bool
+mt7996_radio_valid(struct mt7996_dev *dev, u8 radio)
+{
+	if (radio >= dev->mt76.hw->wiphy->n_radio ||
+	    !dev->radio_phy[radio])
+		return false;
+	return true;
+}
+
 static inline bool
 mt7996_has_background_radar(struct mt7996_dev *dev)
 {
diff --git a/mt7996/vendor.c b/mt7996/vendor.c
index ece8fabf..cb92a7d4 100644
--- a/mt7996/vendor.c
+++ b/mt7996/vendor.c
@@ -16,7 +16,7 @@ mu_ctrl_policy[NUM_MTK_VENDOR_ATTRS_MU_CTRL] = {
 	[MTK_VENDOR_ATTR_MU_CTRL_ONOFF] = {.type = NLA_U8 },
 	[MTK_VENDOR_ATTR_MU_CTRL_DUMP] = {.type = NLA_U8 },
 	[MTK_VENDOR_ATTR_MU_CTRL_STRUCT] = {.type = NLA_BINARY },
-	[MTK_VENDOR_ATTR_MU_CTRL_BAND_IDX] = {.type = NLA_U8 },
+	[MTK_VENDOR_ATTR_MU_CTRL_RADIO_IDX] = {.type = NLA_U8 },
 };
 
 static const struct nla_policy
@@ -145,7 +145,7 @@ scs_ctrl_policy[NUM_MTK_VENDOR_ATTRS_SCS_CTRL] = {
 
 static const struct nla_policy
 csi_ctrl_policy[NUM_MTK_VENDOR_ATTRS_CSI_CTRL] = {
-	[MTK_VENDOR_ATTR_CSI_CTRL_BAND_IDX] = { .type = NLA_U8 },
+	[MTK_VENDOR_ATTR_CSI_CTRL_RADIO_IDX] = { .type = NLA_U8 },
 	[MTK_VENDOR_ATTR_CSI_CTRL_CFG] = {.type = NLA_NESTED },
 	[MTK_VENDOR_ATTR_CSI_CTRL_CFG_MODE] = { .type = NLA_U8 },
 	[MTK_VENDOR_ATTR_CSI_CTRL_CFG_TYPE] = { .type = NLA_U8 },
@@ -180,10 +180,11 @@ static int mt7996_vendor_mu_ctrl(struct wiphy *wiphy,
 {
 	struct ieee80211_hw *hw = wiphy_to_ieee80211_hw(wiphy);
 	struct nlattr *tb[NUM_MTK_VENDOR_ATTRS_MU_CTRL];
-	struct mt7996_phy *phy = mt7996_hw_phy(hw);
+	struct mt7996_dev *dev = mt7996_hw_dev(hw);
+	struct mt7996_phy *phy;
 	struct mt7996_muru *muru;
 	int err;
-	u8 val8, band_idx;
+	u8 val8, radio_idx;
 	u32 val32 = 0;
 
 	err = nla_parse(tb, MTK_VENDOR_ATTR_MU_CTRL_MAX, data, data_len,
@@ -192,12 +193,16 @@ static int mt7996_vendor_mu_ctrl(struct wiphy *wiphy,
 		return err;
 
 	if (tb[MTK_VENDOR_ATTR_MU_CTRL_ONOFF] &&
-	    tb[MTK_VENDOR_ATTR_MU_CTRL_BAND_IDX]) {
+	    tb[MTK_VENDOR_ATTR_MU_CTRL_RADIO_IDX]) {
 		val8 = nla_get_u8(tb[MTK_VENDOR_ATTR_MU_CTRL_ONOFF]);
-		band_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_MU_CTRL_BAND_IDX]);
+		radio_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_MU_CTRL_RADIO_IDX]);
+		if (!mt7996_radio_valid(dev, radio_idx))
+			return -EINVAL;
+		phy = dev->radio_phy[radio_idx];
+
 		val32 |= FIELD_PREP(RATE_CFG_MODE, RATE_PARAM_AUTO_MU) |
 			 FIELD_PREP(RATE_CFG_VAL, val8) |
-			 FIELD_PREP(RATE_CFG_BAND_IDX, band_idx);
+			 FIELD_PREP(RATE_CFG_BAND_IDX, phy->mt76->band_idx);
 		ieee80211_iterate_active_interfaces_atomic(hw, IEEE80211_IFACE_ITER_RESUME_ALL,
 							   mt7996_set_wireless_vif, &val32);
 	} else if (tb[MTK_VENDOR_ATTR_MU_CTRL_STRUCT]) {
@@ -206,7 +211,7 @@ static int mt7996_vendor_mu_ctrl(struct wiphy *wiphy,
 		nla_memcpy(muru, tb[MTK_VENDOR_ATTR_MU_CTRL_STRUCT],
 			   sizeof(struct mt7996_muru));
 
-		err = mt7996_mcu_set_muru_cfg(phy->dev, muru);
+		err = mt7996_mcu_set_muru_cfg(dev, muru);
 		kfree(muru);
 	}
 
@@ -221,10 +226,9 @@ mt7996_vendor_mu_ctrl_dump(struct wiphy *wiphy, struct wireless_dev *wdev,
 	struct ieee80211_hw *hw = wiphy_to_ieee80211_hw(wiphy);
 	struct mt7996_dev *dev = mt7996_hw_dev(hw);
 	struct mt7996_phy *phy;
-	struct mt76_phy *mphy;
 	struct nlattr *tb[NUM_MTK_VENDOR_ATTRS_MU_CTRL];
 	int len = 0, err;
-	u8 band_idx;
+	u8 radio_idx;
 
 	if (*storage == 1)
 		return -ENOENT;
@@ -235,18 +239,13 @@ mt7996_vendor_mu_ctrl_dump(struct wiphy *wiphy, struct wireless_dev *wdev,
 	if (err)
 		return err;
 
-	if (!tb[MTK_VENDOR_ATTR_MU_CTRL_BAND_IDX])
+	if (!tb[MTK_VENDOR_ATTR_MU_CTRL_RADIO_IDX])
 		return -EINVAL;
 
-	band_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_MU_CTRL_BAND_IDX]);
-	if (!mt7996_band_valid(dev, band_idx))
-		goto error;
-
-	mphy = dev->mt76.phys[band_idx];
-	if (!mphy)
+	radio_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_MU_CTRL_RADIO_IDX]);
+	if (!mt7996_radio_valid(dev, radio_idx))
 		goto error;
-
-	phy = (struct mt7996_phy *)mphy->priv;
+	phy = dev->radio_phy[radio_idx];
 
 	if (nla_put_u8(skb, MTK_VENDOR_ATTR_MU_CTRL_DUMP, phy->muru_onoff))
 		return -ENOMEM;
@@ -255,7 +254,7 @@ mt7996_vendor_mu_ctrl_dump(struct wiphy *wiphy, struct wireless_dev *wdev,
 	return len;
 
 error:
-	dev_err(dev->mt76.dev, "Invalid band idx to dump\n");
+	dev_err(dev->mt76.dev, "Invalid radio idx to dump\n");
 	return -EINVAL;
 }
 
@@ -1256,9 +1255,8 @@ static int mt7996_vendor_csi_ctrl(struct wiphy *wiphy,
 	struct ieee80211_hw *hw = wiphy_to_ieee80211_hw(wiphy);
 	struct mt7996_dev *dev = mt7996_hw_dev(hw);
 	struct mt7996_phy *phy;
-	struct mt76_phy *mphy;
 	struct nlattr *tb[NUM_MTK_VENDOR_ATTRS_CSI_CTRL];
-	u8 band_idx = 0;
+	u8 radio_idx = 0;
 	int err;
 
 	err = nla_parse(tb, MTK_VENDOR_ATTR_CSI_CTRL_MAX, data, data_len,
@@ -1266,19 +1264,12 @@ static int mt7996_vendor_csi_ctrl(struct wiphy *wiphy,
 	if (err)
 		return err;
 
-	if (tb[MTK_VENDOR_ATTR_CSI_CTRL_BAND_IDX])
-		band_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_CSI_CTRL_BAND_IDX]);
+	if (tb[MTK_VENDOR_ATTR_CSI_CTRL_RADIO_IDX])
+		radio_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_CSI_CTRL_RADIO_IDX]);
 
-	if (!mt7996_band_valid(dev, band_idx))
-		goto error;
-
-	mphy = dev->mt76.phys[band_idx];
-	if (!mphy)
-		goto error;
-
-	phy = (struct mt7996_phy *)mphy->priv;
-	if (!phy)
+	if (!mt7996_radio_valid(dev, radio_idx))
 		goto error;
+	phy = dev->radio_phy[radio_idx];
 
 	if (tb[MTK_VENDOR_ATTR_CSI_CTRL_CFG]) {
 		u8 mode = 0, type = 0, v1 = 0;
@@ -1345,7 +1336,7 @@ static int mt7996_vendor_csi_ctrl(struct wiphy *wiphy,
 	return 0;
 
 error:
-	dev_err(dev->mt76.dev, "Invalid band idx: %d\n", band_idx);
+	dev_err(dev->mt76.dev, "Invalid radio idx: %d\n", radio_idx);
 	return -EINVAL;
 }
 
@@ -1358,9 +1349,8 @@ mt7996_vendor_csi_ctrl_dump(struct wiphy *wiphy, struct wireless_dev *wdev,
 	struct ieee80211_hw *hw = wiphy_to_ieee80211_hw(wiphy);
 	struct mt7996_dev *dev = mt7996_hw_dev(hw);
 	struct mt7996_phy *phy;
-	struct mt76_phy *mphy;
 	struct nlattr *tb[NUM_MTK_VENDOR_ATTRS_CSI_CTRL] = {0};
-	u8 band_idx = 0;
+	u8 radio_idx = 0;
 	int err = 0;
 
 	if (*storage & RESERVED_SET) {
@@ -1376,19 +1366,12 @@ mt7996_vendor_csi_ctrl_dump(struct wiphy *wiphy, struct wireless_dev *wdev,
 			return err;
 	}
 
-	if (tb[MTK_VENDOR_ATTR_CSI_CTRL_BAND_IDX])
-		band_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_CSI_CTRL_BAND_IDX]);
-
-	if (!mt7996_band_valid(dev, band_idx))
-		return -EINVAL;
-
-	mphy = dev->mt76.phys[band_idx];
-	if (!mphy)
-		return -EINVAL;
+	if (tb[MTK_VENDOR_ATTR_CSI_CTRL_RADIO_IDX])
+		radio_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_CSI_CTRL_RADIO_IDX]);
 
-	phy = (struct mt7996_phy *)mphy->priv;
-	if (!phy)
+	if (!mt7996_radio_valid(dev, radio_idx))
 		return -EINVAL;
+	phy = dev->radio_phy[radio_idx];
 
 	if (!(*storage & RESERVED_SET) && tb[MTK_VENDOR_ATTR_CSI_CTRL_DUMP_NUM]) {
 		*storage = nla_get_u16(tb[MTK_VENDOR_ATTR_CSI_CTRL_DUMP_NUM]);
diff --git a/mt7996/vendor.h b/mt7996/vendor.h
index cd84a492..ae3e9e20 100644
--- a/mt7996/vendor.h
+++ b/mt7996/vendor.h
@@ -76,7 +76,7 @@ enum mtk_vendor_attr_mu_ctrl {
 	MTK_VENDOR_ATTR_MU_CTRL_ONOFF,
 	MTK_VENDOR_ATTR_MU_CTRL_DUMP,
 	MTK_VENDOR_ATTR_MU_CTRL_STRUCT,
-	MTK_VENDOR_ATTR_MU_CTRL_BAND_IDX,
+	MTK_VENDOR_ATTR_MU_CTRL_RADIO_IDX,
 
 	/* keep last */
 	NUM_MTK_VENDOR_ATTRS_MU_CTRL,
@@ -293,7 +293,7 @@ enum mtk_vendor_attr_csi_ctrl {
 
 	MTK_VENDOR_ATTR_CSI_CTRL_DATA,
 
-	MTK_VENDOR_ATTR_CSI_CTRL_BAND_IDX,
+	MTK_VENDOR_ATTR_CSI_CTRL_RADIO_IDX,
 
 	/* keep last */
 	NUM_MTK_VENDOR_ATTRS_CSI_CTRL,
-- 
2.45.2

