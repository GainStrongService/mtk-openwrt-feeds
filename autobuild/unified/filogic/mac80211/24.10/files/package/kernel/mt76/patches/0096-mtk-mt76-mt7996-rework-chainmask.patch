From 2c1d49b799f1bd3000aad1f41a80a2fd3944ba79 Mon Sep 17 00:00:00 2001
From: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
Date: Fri, 6 Jun 2025 10:40:55 +0800
Subject: [PATCH 096/123] mtk: mt76: mt7996: rework chainmask

It is more convenient for the driver to leave the chainmask unshifted, as
the shifted chainmask is only used for radio->antenna_mask and
wiphy->available_antennas_t(r)x.

Signed-off-by: StanleyYP Wang <StanleyYP.Wang@mediatek.com>

tx_ant & rx_ant are the accumulated antenna masks for each radio.
Therefore, after refactoring, since phy->mt76->chainmask is unshifted,
we should use radio->antenna_mask (the shifted version of chainmask) to
parse the mask for each radio.
For example,
tx_ant = 0x173 => radio 0: 0x3, radio 1: 0x7, radio 2: 0x1
phy->chainmask = 0xf for each band
radio->antenna_mask: radio 0: 0xf, radio 1: 0xf0, radio 2: 0xf00
The modified chainmask for radio 1 should be (0x173 & 0xf0) >> 4 = 0x7

Signed-off-by: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
---
 mt7996/eeprom.c   |  3 +--
 mt7996/init.c     |  6 +++---
 mt7996/main.c     | 20 ++++++++++++--------
 mt7996/mcu.c      |  2 +-
 mt7996/mt7996.h   |  1 -
 mt7996/testmode.c | 10 ++++------
 6 files changed, 21 insertions(+), 21 deletions(-)

diff --git a/mt7996/eeprom.c b/mt7996/eeprom.c
index 5a743d15..7a5821ff 100644
--- a/mt7996/eeprom.c
+++ b/mt7996/eeprom.c
@@ -480,9 +480,8 @@ int mt7996_eeprom_parse_hw_cap(struct mt7996_dev *dev, struct mt7996_phy *phy)
 
 	mphy->antenna_mask = BIT(nss) - 1;
 	phy->orig_antenna_mask = mphy->antenna_mask;
-	mphy->chainmask = (BIT(path) - 1) << dev->chainshift[band_idx];
+	mphy->chainmask = BIT(path) - 1;
 	phy->orig_chainmask = mphy->chainmask;
-	dev->chainmask |= mphy->chainmask;
 	if (band_idx < MT_BAND2)
 		dev->chainshift[band_idx + 1] = dev->chainshift[band_idx] +
 						hweight16(mphy->chainmask);
diff --git a/mt7996/init.c b/mt7996/init.c
index a99e9015..2d486799 100644
--- a/mt7996/init.c
+++ b/mt7996/init.c
@@ -511,11 +511,11 @@ mt7996_init_wiphy_band(struct ieee80211_hw *hw, struct mt7996_phy *phy)
 	radio->n_freq_range = 1;
 	radio->iface_combinations = is_mt7996(&dev->mt76) ? &if_comb : &if_comb_7992;
 	radio->n_iface_combinations = 1;
-	radio->antenna_mask = phy->mt76->chainmask;
+	radio->antenna_mask = phy->mt76->chainmask << dev->chainshift[phy->mt76->band_idx];
 	hw->wiphy->n_radio++;
 
-	wiphy->available_antennas_rx |= phy->mt76->chainmask;
-	wiphy->available_antennas_tx |= phy->mt76->chainmask;
+	wiphy->available_antennas_rx |= radio->antenna_mask;
+	wiphy->available_antennas_tx |= radio->antenna_mask;
 
 	mt76_set_stream_caps(phy->mt76, true);
 	mt7996_set_stream_vht_txbf_caps(phy);
diff --git a/mt7996/main.c b/mt7996/main.c
index b33cb772..ffcf3616 100644
--- a/mt7996/main.c
+++ b/mt7996/main.c
@@ -1969,28 +1969,32 @@ static int
 mt7996_set_antenna(struct ieee80211_hw *hw, int radio_idx, u32 tx_ant, u32 rx_ant)
 {
 	struct mt7996_dev *dev = mt7996_hw_dev(hw);
+	struct mt7996_phy *phy;
+	struct wiphy_radio *radio;
 	int i;
 
 	if (tx_ant != rx_ant)
 		return -EINVAL;
 
 	for (i = 0; i < hw->wiphy->n_radio; i++) {
-		struct mt7996_phy *phy = dev->radio_phy[i];
+		phy = dev->radio_phy[i];
+		radio = &dev->radios[i];
 
-		if (!(tx_ant & phy->orig_chainmask))
+		if (!(tx_ant & radio->antenna_mask))
 			return -EINVAL;
 	}
 
 	mutex_lock(&dev->mt76.mutex);
 
 	for (i = 0; i < hw->wiphy->n_radio; i++) {
-		struct mt7996_phy *phy = dev->radio_phy[i];
-		u8 band_idx = phy->mt76->band_idx;
-		u8 shift = dev->chainshift[band_idx];
+		int shift;
+
+		phy = dev->radio_phy[i];
+		radio = &dev->radios[i];
+		shift = dev->chainshift[phy->mt76->band_idx];
 
-		phy->mt76->chainmask = tx_ant & phy->orig_chainmask;
-		phy->mt76->antenna_mask = (phy->mt76->chainmask >> shift) &
-					  phy->orig_antenna_mask;
+		phy->mt76->chainmask = (tx_ant & radio->antenna_mask) >> shift;
+		phy->mt76->antenna_mask = phy->mt76->chainmask & phy->orig_antenna_mask;
 
 		mt76_set_stream_caps(phy->mt76, true);
 		mt7996_set_stream_vht_txbf_caps(phy);
diff --git a/mt7996/mcu.c b/mt7996/mcu.c
index f64ea3c3..b8366733 100644
--- a/mt7996/mcu.c
+++ b/mt7996/mcu.c
@@ -5649,7 +5649,7 @@ int mt7996_mcu_set_chan_info(struct mt7996_phy *phy, u16 tag, bool sta)
 		.center_ch = ieee80211_frequency_to_channel(freq1),
 		.bw = mt76_connac_chan_bw(chandef),
 		.tx_path_num = hweight16(phy->mt76->chainmask),
-		.rx_path = mt7996_rx_chainmask(phy) >> dev->chainshift[band_idx],
+		.rx_path = mt7996_rx_chainmask(phy),
 		.band_idx = band_idx,
 		.channel_band = ch_band[chandef->chan->band],
 	};
diff --git a/mt7996/mt7996.h b/mt7996/mt7996.h
index c24fb9c6..6e9abece 100644
--- a/mt7996/mt7996.h
+++ b/mt7996/mt7996.h
@@ -826,7 +826,6 @@ struct mt7996_dev {
 	struct cfg80211_chan_def rdd2_chandef;
 	struct mt7996_phy *rdd2_phy;
 
-	u16 chainmask;
 	u8 chainshift[__MT_MAX_BAND];
 	u32 hif_idx;
 
diff --git a/mt7996/testmode.c b/mt7996/testmode.c
index ee64b4bc..6da2217d 100644
--- a/mt7996/testmode.c
+++ b/mt7996/testmode.c
@@ -122,11 +122,9 @@ mt7996_tm_check_antenna(struct mt7996_phy *phy)
 {
 	struct mt76_testmode_data *td = &phy->mt76->test;
 	struct mt7996_dev *dev = phy->dev;
-	u8 band_idx = phy->mt76->band_idx;
 	u32 chainmask = phy->mt76->chainmask;
 	u32 aux_rx_mask;
 
-	chainmask = chainmask >> dev->chainshift[band_idx];
 	aux_rx_mask = BIT(fls(chainmask)) * phy->has_aux_rx;
 	if (td->tx_antenna_mask & ~(chainmask | aux_rx_mask)) {
 		mt76_err(&dev->mt76,
@@ -1375,7 +1373,7 @@ mt7996_tm_txbf_init(struct mt7996_phy *phy, u16 *val)
 
 			td->tx_ipg = 999;
 			td->tx_mpdu_len = 1024;
-			td->tx_antenna_mask = phy->mt76->chainmask >> dev->chainshift[band_idx];
+			td->tx_antenna_mask = phy->mt76->chainmask;
 			nss = hweight8(td->tx_antenna_mask);
 			if (nss > 1 && nss <= 4)
 				td->tx_rate_idx = 15 + 8 * (nss - 2);
@@ -1403,8 +1401,8 @@ mt7996_tm_txbf_init(struct mt7996_phy *phy, u16 *val)
 		if (td->is_txbf_dut) {
 			/* Enable ETxBF Capability */
 			mt7996_mcu_set_txbf(dev, BF_HW_EN_UPDATE);
-			td->tx_antenna_mask = phy->mt76->chainmask >> dev->chainshift[band_idx];
-			td->tx_spe_idx = 24 + phy->mt76->band_idx;
+			td->tx_antenna_mask = phy->mt76->chainmask;
+			td->tx_spe_idx = 24 + band_idx;
 			if (td->tx_rate_mode == MT76_TM_TX_MODE_VHT ||
 			    td->tx_rate_mode == MT76_TM_TX_MODE_HE_SU)
 				mt7996_tm_set(dev, SET_ID(NSS), td->tx_rate_nss);
@@ -2257,7 +2255,7 @@ mt7996_tm_dump_stats(struct mt76_phy *mphy, struct sk_buff *msg)
 	int band_idx = mphy->band_idx;
 
 	if (!td->last_rx.path) {
-		td->last_rx.path = hweight32(mphy->chainmask >> dev->chainshift[band_idx]);
+		td->last_rx.path = hweight16(mphy->chainmask);
 		if (phy->has_aux_rx)
 			td->last_rx.path++;
 		td->last_rx.rcpi = devm_kzalloc(dev->mt76.dev, td->last_rx.path, GFP_KERNEL);
-- 
2.45.2

