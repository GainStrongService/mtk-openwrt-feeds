From 4ba49bd77d0bc7fb635c5566e0d7a7fa4aad24d2 Mon Sep 17 00:00:00 2001
From: Michael-CY Lee <michael-cy.lee@mediatek.com>
Date: Thu, 12 Jun 2025 09:44:46 +0800
Subject: [PATCH 103/123] mtk: mt76: check the scan state of mt76 instead of
 mac80211 when setting the channel

When mt76 finishes the scan and notifies mac80211, the scan state
clearing in mac80211 is done by calling a delayed work in
ieee80211_scan_completed(). Later, when mt76 returns to the original
channel, there might be a race condition between mac80211 clearing
the scan state and mt76 checking mac80211's scan state.

If mac80211 clears the scan state after mt76 checks it, the state of
the original channel might be unexpectedly reset.

A better approach is to check the scan state of mt76, which is set
directly in mt76_scan_complete().

Signed-off-by: Michael-CY Lee <michael-cy.lee@mediatek.com>
---
 mac80211.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/mac80211.c b/mac80211.c
index 079e6a3c..5c251e38 100644
--- a/mac80211.c
+++ b/mac80211.c
@@ -1025,7 +1025,6 @@ int __mt76_set_channel(struct mt76_phy *phy, struct cfg80211_chan_def *chandef,
 	struct mt76_dev *dev = phy->dev;
 	int timeout = HZ / 5;
 	int ret;
-	unsigned long was_scanning = ieee80211_get_scanning(phy->hw);
 
 	set_bit(MT76_RESET, &phy->state);
 
@@ -1044,7 +1043,8 @@ int __mt76_set_channel(struct mt76_phy *phy, struct cfg80211_chan_def *chandef,
 	if (!offchannel)
 		phy->main_chandef = *chandef;
 
-	if (chandef->chan != phy->main_chandef.chan || was_scanning)
+	if (chandef->chan != phy->main_chandef.chan ||
+	    test_bit(MT76_SCANNING, &phy->state))
 		memset(phy->chan_state, 0, sizeof(*phy->chan_state));
 
 	ret = dev->drv->set_channel(phy);
-- 
2.45.2

