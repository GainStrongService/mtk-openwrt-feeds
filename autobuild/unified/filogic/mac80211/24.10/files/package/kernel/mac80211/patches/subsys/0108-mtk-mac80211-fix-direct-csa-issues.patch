From e7fde1d132ed39375f769aa1532266b4c13ad85f Mon Sep 17 00:00:00 2001
From: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
Date: Fri, 4 Jul 2025 15:36:36 +0800
Subject: [PATCH 108/115] mtk: mac80211: fix direct csa issues

When csa count is set to 0, then AP will trigger the channel switch
directly, which might cause some issues.
1. For mbss case, the csa finalize process should wait until all the
interface are ready to use reserved chanctx. Otherwise, the channel
switch will fail.
2. For mld, the partner links of the affiliated mld of the channel
swicth link should also perform csa finalize in order to update the
RNR IE in their beacons.

Signed-off-by: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
---
 net/mac80211/cfg.c | 34 ++++++++++++++++++++++++++++++++--
 1 file changed, 32 insertions(+), 2 deletions(-)

diff --git a/net/mac80211/cfg.c b/net/mac80211/cfg.c
index cb4a5bf1..02dd2638 100644
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@ -4392,8 +4392,38 @@ __ieee80211_channel_switch(struct wiphy *wiphy, struct net_device *dev,
 		ieee80211_link_info_change_notify(sdata, link_data, changed);
 		drv_channel_switch_beacon(sdata, &link_data->csa.chanreq.oper);
 	} else {
-		/* if the beacon didn't change, we can finalize immediately */
-		ieee80211_csa_finalize(link_data);
+		struct ieee80211_link_data *iter, *iter_tmp;
+		int n_assigned = 0, n_reserved = 0;
+		unsigned int link;
+
+		/* if the beacon didn't change, we can finalize after
+		 * all assigned links are ready.
+		 */
+		list_for_each_entry(iter, &chanctx->assigned_links,
+				    assigned_chanctx_list) {
+			n_assigned++;
+			if (iter->reserved_chanctx)
+				n_reserved++;
+		}
+
+		/* Wait for all interfaces to be ready */
+		if (n_assigned != n_reserved) {
+			link_data->reserved_ready = true;
+			err = 0;
+			goto out;
+		}
+
+		list_for_each_entry(iter, &chanctx->assigned_links,
+				    assigned_chanctx_list) {
+			for_each_valid_link(&iter->sdata->wdev, link) {
+				iter_tmp = sdata_dereference(iter->sdata->link[link],
+							     iter->sdata);
+				if (!iter_tmp)
+					continue;
+				wiphy_work_queue(iter->sdata->local->hw.wiphy,
+						 &iter_tmp->csa.finalize_work);
+			}
+		}
 	}
 
 out:
-- 
2.45.2

