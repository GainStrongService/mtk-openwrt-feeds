From fd546eaf99cea2bb6185c8df8c919077f13dadc7 Mon Sep 17 00:00:00 2001
From: "fancy.liu" <fancy.liu@mediatek.com>
Date: Wed, 29 Nov 2023 13:51:13 +0800
Subject: [PATCH 33/87] mtk: mac80211: ACS channel time is reset by ch_restore

Issue:
There's a chance that the channel time for duty channel is zero in ACS
scan.

Root cause:
The chan_stat may be reset when restore to duty channel.
Mac80211 will notify to hostapd when scan done and then restore to duty
channel.
And mt76 will clear scan flag after restore done.
If hostapd get the chan_stat before channel_restore, will get the
correct channel time;
If hostapd get the chan_stat after channel_restore, will get zero
channel time;

Solution:
When channel switch, will check the mac80211 scan state but not the mt76 scan flag.
Mac80211 scan state will be set in scanning, and will be reset after
scan done and before restore to duty channel.

Signed-off-by: fancy.liu <fancy.liu@mediatek.com>
---
 include/net/mac80211.h | 7 +++++++
 net/mac80211/util.c    | 8 ++++++++
 2 files changed, 15 insertions(+)

diff --git a/include/net/mac80211.h b/include/net/mac80211.h
index 1ce6425f..2c438914 100644
--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -7790,4 +7790,11 @@ int ieee80211_emulate_switch_vif_chanctx(struct ieee80211_hw *hw,
 					 int n_vifs,
 					 enum ieee80211_chanctx_switch_mode mode);
 
+/**
+ * ieee80211_get_scanning - get scanning bitmask
+ *
+ * @hw: pointer as obtained from ieee80211_alloc_hw()
+ */
+unsigned long ieee80211_get_scanning(struct ieee80211_hw *hw);
+
 #endif /* MAC80211_H */
diff --git a/net/mac80211/util.c b/net/mac80211/util.c
index f8491777..a7153e72 100644
--- a/net/mac80211/util.c
+++ b/net/mac80211/util.c
@@ -4478,3 +4478,11 @@ void ieee80211_clear_tpe(struct ieee80211_parsed_tpe *tpe)
 		       sizeof(tpe->psd_reg_client[i].power));
 	}
 }
+
+unsigned long ieee80211_get_scanning(struct ieee80211_hw *hw)
+{
+	struct ieee80211_local *local = hw_to_local(hw);
+
+	return local->scanning;
+}
+EXPORT_SYMBOL(ieee80211_get_scanning);
-- 
2.45.2

