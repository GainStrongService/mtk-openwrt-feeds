From da81dd5a36be4108d27b187a70c5ff406981ad03 Mon Sep 17 00:00:00 2001
From: Shayne Chen <shayne.chen@mediatek.com>
Date: Thu, 7 Nov 2024 14:39:27 +0800
Subject: [PATCH 269/277] handle per-radio antenna_mask

Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
---
 mac80211.c    | 14 ++++++++----
 mt7996/init.c |  1 +
 mt7996/main.c | 59 ---------------------------------------------------
 3 files changed, 11 insertions(+), 63 deletions(-)

diff --git a/mac80211.c b/mac80211.c
index af761ed8..3f1754fb 100644
--- a/mac80211.c
+++ b/mac80211.c
@@ -439,8 +439,10 @@ mt76_phy_init(struct mt76_phy *phy, struct ieee80211_hw *hw)
 	wiphy_ext_feature_set(wiphy, NL80211_EXT_FEATURE_AIRTIME_FAIRNESS);
 	wiphy_ext_feature_set(wiphy, NL80211_EXT_FEATURE_AQL);
 
-	wiphy->available_antennas_tx = phy->antenna_mask;
-	wiphy->available_antennas_rx = phy->antenna_mask;
+	if (!wiphy->available_antennas_tx)
+		wiphy->available_antennas_tx = phy->antenna_mask;
+	if (!wiphy->available_antennas_rx)
+		wiphy->available_antennas_rx = phy->antenna_mask;
 
 	wiphy->sar_capa = &mt76_sar_capa;
 	phy->frp = devm_kcalloc(dev->dev, wiphy->sar_capa->num_freq_ranges,
@@ -1844,10 +1846,14 @@ int mt76_get_antenna(struct ieee80211_hw *hw, u32 *tx_ant, u32 *rx_ant)
 {
 	struct mt76_phy *phy = hw->priv;
 	struct mt76_dev *dev = phy->dev;
+	int i;
 
 	mutex_lock(&dev->mutex);
-	*tx_ant = phy->antenna_mask;
-	*rx_ant = phy->antenna_mask;
+	*tx_ant = 0;
+	for (i = 0; i < ARRAY_SIZE(dev->phys); i++)
+		if (dev->phys[i] && dev->phys[i]->hw == hw)
+			*tx_ant |= dev->phys[i]->chainmask;
+	*rx_ant = *tx_ant;
 	mutex_unlock(&dev->mutex);
 
 	return 0;
diff --git a/mt7996/init.c b/mt7996/init.c
index b9cd15cb..3f8905c2 100644
--- a/mt7996/init.c
+++ b/mt7996/init.c
@@ -487,6 +487,7 @@ mt7996_init_wiphy_band(struct ieee80211_hw *hw, struct mt7996_phy *phy)
 	radio->n_freq_range = 1;
 	radio->iface_combinations = is_mt7996(&dev->mt76) ? &if_comb : &if_comb_7992;
 	radio->n_iface_combinations = 1;
+	radio->antenna_mask = phy->mt76->chainmask;
 	hw->wiphy->n_radio++;
 
 	wiphy->available_antennas_rx |= phy->mt76->chainmask;
diff --git a/mt7996/main.c b/mt7996/main.c
index 971ab09d..e12667da 100644
--- a/mt7996/main.c
+++ b/mt7996/main.c
@@ -1830,64 +1830,6 @@ mt7996_set_coverage_class(struct ieee80211_hw *hw, s16 coverage_class)
 	mutex_unlock(&dev->mt76.mutex);
 }
 
-#if 0
-static int
-mt7996_set_antenna(struct ieee80211_hw *hw, u32 tx_ant, u32 rx_ant)
-{
-	struct mt7996_dev *dev = mt7996_hw_dev(hw);
-	int band, max_nss = hweight8(hw->wiphy->available_antennas_tx);
-
-	/* TODO: set antenna based on capability of each band. */
-	dev_warn(dev->mt76.dev, "%s: temporarily not supported.\n", __func__);
-	return 0;
-
-	/* only allow settings from hw0 */
-	if (hw != dev->phy.mt76->hw)
-		return 0;
-
-	if (!tx_ant || tx_ant != rx_ant || ffs(tx_ant) > max_nss)
-		return -EINVAL;
-
-	if ((BIT(hweight8(tx_ant)) - 1) != tx_ant)
-		tx_ant = BIT(ffs(tx_ant) - 1) - 1;
-
-	mutex_lock(&dev->mt76.mutex);
-
-	for (band = 0; band < NUM_NL80211_BANDS; band++) {
-		struct mt7996_phy *phy;
-		u8 band_idx, shift;
-
-		if (!hw->wiphy->bands[band])
-			continue;
-
-		phy = mt7996_band_phy(dev, bandid);
-		if (!phy)
-			continue;
-
-		phy->mt76->antenna_mask = tx_ant;
-		band_idx = phy->mt76->band_idx;
-		shift = dev->chainshift[band_idx];
-
-		/* restore to the origin chainmask which might have auxiliary path */
-		if (hweight8(tx_ant) == max_nss && band_idx < MT_BAND2)
-			phy->mt76->chainmask = ((dev->chainmask >> shift) &
-						(BIT(dev->chainshift[band_idx + 1] - shift) - 1)) << shift;
-		else if (hweight8(tx_ant) == max_nss)
-			phy->mt76->chainmask = (dev->chainmask >> shift) << shift;
-		else
-			phy->mt76->chainmask = tx_ant << shift;
-
-		mt76_set_stream_caps(phy->mt76, true);
-		mt7996_set_stream_vht_txbf_caps(phy);
-		mt7996_set_stream_he_eht_caps(phy);
-	}
-
-	mutex_unlock(&dev->mt76.mutex);
-
-	return 0;
-}
-#endif
-
 static int
 mt7996_set_antenna(struct ieee80211_hw *hw, u32 tx_ant, u32 rx_ant)
 {
@@ -1917,7 +1859,6 @@ mt7996_set_antenna(struct ieee80211_hw *hw, u32 tx_ant, u32 rx_ant)
 		mt76_set_stream_caps(phy->mt76, true);
 		mt7996_set_stream_vht_txbf_caps(phy);
 		mt7996_set_stream_he_eht_caps(phy);
-		// mt7996_mcu_set_txpower_sku(phy);
 	}
 
 	mutex_unlock(&dev->mt76.mutex);
-- 
2.45.2

