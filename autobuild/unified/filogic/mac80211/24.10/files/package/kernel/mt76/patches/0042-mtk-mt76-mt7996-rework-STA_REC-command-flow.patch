From 0c6965f6f2422e825d1f281a1901b9afbf5d8a97 Mon Sep 17 00:00:00 2001
From: Shayne Chen <shayne.chen@mediatek.com>
Date: Wed, 28 Aug 2024 19:08:39 +0800
Subject: [PATCH 42/75] mtk: mt76: mt7996: rework STA_REC command flow

Align the STA_REC command flow to Logan.
Old: CONN_STATE_DISCONNECT -> CONN_STATE_PORT_SECURE
New: CONN_STATE_DISCONNECT -> CONN_STATE_CONNECT -> CONN_STATE_PORT_SECURE

mtk: mt76: mt7996: fix the timing to send sta_rec_bf

Send sta_rec_bfer and sta_rec_bfee tlv only when the connection state
changes to CONN_STATE_CONNECT.

Signed-off-by: Howard Hsu <howard-yh.hsu@mediatek.com>
Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
---
 mt7996/main.c     | 50 +++++++++++++++++++++++++++++++++++++++--------
 mt7996/mcu.c      | 16 +++++++--------
 mt7996/mt7996.h   |  2 +-
 mt7996/testmode.c |  4 +++-
 4 files changed, 54 insertions(+), 18 deletions(-)

diff --git a/mt7996/main.c b/mt7996/main.c
index 6adbcf6b..28edd789 100644
--- a/mt7996/main.c
+++ b/mt7996/main.c
@@ -282,7 +282,8 @@ static void mt7996_remove_bss_conf(struct ieee80211_vif *vif,
 		   __func__, mconf->phy->mt76->band_idx, mconf->mt76.idx,
 		   mconf->link_id, mlink->wcid.idx);
 
-	mt7996_mcu_add_sta(dev, conf, mconf, NULL, mlink, false, false);
+	mt7996_mcu_add_sta(dev, conf, mconf, NULL, mlink, CONN_STATE_DISCONNECT,
+			   false);
 	mt7996_mcu_add_bss_info(phy, conf, mconf, mlink, false);
 	mt7996_mcu_add_dev_info(phy, conf, mconf, false);
 
@@ -441,7 +442,8 @@ static int mt7996_add_bss_conf(struct mt7996_phy *phy,
 	 * interface, since firmware only records BSSID when the entry is new
 	 */
 	if (vif->type != NL80211_IFTYPE_STATION)
-		mt7996_mcu_add_sta(dev, conf, mconf, NULL, mlink, true, true);
+		mt7996_mcu_add_sta(dev, conf, mconf, NULL, mlink,
+				   CONN_STATE_PORT_SECURE, true);
 	rcu_assign_pointer(dev->mt76.wcid[idx], &mlink->wcid);
 	rcu_assign_pointer(mvif->link[link_id], mconf);
 	rcu_assign_pointer(mvif->sta.link[link_id], mlink);
@@ -954,7 +956,8 @@ static void mt7996_vif_cfg_changed(struct ieee80211_hw *hw,
 				mlink_dereference_protected(&mvif->sta, link_id);
 
 			mt7996_mcu_add_bss_info(mconf->phy, conf, mconf, mlink, true);
-			mt7996_mcu_add_sta(dev, conf, mconf, NULL, mlink, true, false);
+			mt7996_mcu_add_sta(dev, conf, mconf, NULL, mlink,
+					   CONN_STATE_PORT_SECURE, false);
 		}
 	}
 
@@ -990,7 +993,8 @@ static void mt7996_link_info_changed(struct ieee80211_hw *hw,
 	if ((changed & BSS_CHANGED_BSSID && !is_zero_ether_addr(info->bssid)) ||
 	    (changed & BSS_CHANGED_BEACON_ENABLED && info->enable_beacon)) {
 		mt7996_mcu_add_bss_info(phy, info, mconf, mlink, true);
-		mt7996_mcu_add_sta(dev, info, mconf, NULL, mlink, true,
+		mt7996_mcu_add_sta(dev, info, mconf, NULL, mlink,
+				   CONN_STATE_PORT_SECURE,
 				   !!(changed & BSS_CHANGED_BSSID));
 	}
 
@@ -1163,7 +1167,8 @@ static void mt7996_remove_link_sta(struct mt7996_dev *dev,
 	if (sta->mlo && last_link)
 		mt7996_mcu_teardown_mld_sta(dev, mconf, mlink);
 	else
-		mt7996_mcu_add_sta(dev, conf, mconf, link_sta, mlink, false, false);
+		mt7996_mcu_add_sta(dev, conf, mconf, link_sta, mlink,
+				   CONN_STATE_DISCONNECT, false);
 
 	mt7996_mac_wtbl_update(dev, mlink->wcid.idx,
 			       MT_WTBL_UPDATE_ADM_COUNT_CLEAR);
@@ -1290,7 +1295,8 @@ static int mt7996_add_link_sta(struct mt7996_dev *dev,
 	mt7996_mac_wtbl_update(dev, mlink->wcid.idx,
 			       MT_WTBL_UPDATE_ADM_COUNT_CLEAR);
 
-	ret = mt7996_mcu_add_sta(dev, conf, mconf, link_sta, mlink, true, true);
+	ret = mt7996_mcu_add_sta(dev, conf, mconf, link_sta, mlink,
+				 CONN_STATE_CONNECT, true);
 	if (ret)
 		goto error;
 
@@ -1440,14 +1446,42 @@ int mt7996_mac_sta_event(struct mt76_dev *mdev, struct ieee80211_vif *vif,
 			 struct ieee80211_sta *sta, enum mt76_sta_event ev)
 {
 	struct mt7996_dev *dev = container_of(mdev, struct mt7996_dev, mt76);
+	struct mt7996_vif *mvif = (struct mt7996_vif *)vif->drv_priv;
+	struct mt7996_sta *msta = (struct mt7996_sta *)sta->drv_priv;
 	unsigned long add = sta->valid_links ?: BIT(0);
-	int ret = 0;
+	int ret = 0, link_id;
 
 	mutex_lock(&dev->mt76.mutex);
 
-	if (ev == MT76_STA_EVENT_ASSOC)
+	switch (ev) {
+	case MT76_STA_EVENT_ASSOC:
 		ret = mt7996_mac_sta_add_links(dev, vif, sta, add, true);
+		break;
+	case MT76_STA_EVENT_AUTHORIZE:
+		for_each_set_bit(link_id, &add, IEEE80211_MLD_MAX_NUM_LINKS) {
+			struct mt7996_bss_conf *mconf =
+				mconf_dereference_protected(mvif, link_id);
+			struct mt7996_link_sta *mlink =
+				mlink_dereference_protected(msta, link_id);
+			struct ieee80211_bss_conf *conf =
+				link_conf_dereference_protected(vif, link_id);
+			struct ieee80211_link_sta *link_sta =
+				link_sta_dereference_protected(sta, link_id);
 
+			if (!mconf || !mlink || !conf || !link_sta)
+				continue;
+
+			ret = mt7996_mcu_add_sta(dev, conf, mconf, link_sta, mlink,
+						 CONN_STATE_PORT_SECURE, false);
+			if (ret)
+				goto out;
+		}
+		break;
+	default:
+		break;
+	}
+
+out:
 	mutex_unlock(&dev->mt76.mutex);
 
 	return ret;
diff --git a/mt7996/mcu.c b/mt7996/mcu.c
index cd8dadb4..11d08723 100644
--- a/mt7996/mcu.c
+++ b/mt7996/mcu.c
@@ -3245,11 +3245,10 @@ mt7996_mcu_sta_init_vow(struct mt7996_bss_conf *mconf,
 int mt7996_mcu_add_sta(struct mt7996_dev *dev, struct ieee80211_bss_conf *conf,
 		       struct mt7996_bss_conf *mconf,
 		       struct ieee80211_link_sta *link_sta,
-		       struct mt7996_link_sta *mlink, bool enable, bool newly)
+		       struct mt7996_link_sta *mlink, int conn_state, bool newly)
 {
 	struct ieee80211_vif *vif = conf->vif;
 	struct sk_buff *skb;
-	int conn_state;
 	// int ret;
 
 	skb = __mt76_connac_mcu_alloc_sta_req(&dev->mt76, &mconf->mt76,
@@ -3259,7 +3258,6 @@ int mt7996_mcu_add_sta(struct mt7996_dev *dev, struct ieee80211_bss_conf *conf,
 		return PTR_ERR(skb);
 
 	/* starec basic */
-	conn_state = enable ? CONN_STATE_PORT_SECURE : CONN_STATE_DISCONNECT;
 	mt76_connac_mcu_sta_basic_tlv(&dev->mt76, skb, conf, link_sta,
 				      conn_state, newly);
 	mt7996_dbg(dev, MT7996_DBG_DEV,
@@ -3267,7 +3265,7 @@ int mt7996_mcu_add_sta(struct mt7996_dev *dev, struct ieee80211_bss_conf *conf,
 		   __func__, mlink->wcid.link_id, mlink->wcid.idx,
 		   newly, conn_state);
 
-	if (!enable)
+	if (conn_state == CONN_STATE_DISCONNECT)
 		goto out;
 
 	/* starec hdr trans */
@@ -3281,8 +3279,12 @@ int mt7996_mcu_add_sta(struct mt7996_dev *dev, struct ieee80211_bss_conf *conf,
 
 		/* starec hdrt mode */
 		mt7996_mcu_sta_hdrt_tlv(dev, skb);
-		/* starec bfer */
-		mt7996_mcu_sta_bfer_tlv(dev, skb, conf, mconf, link_sta);
+		if (conn_state == CONN_STATE_CONNECT) {
+			/* starec bfer */
+			mt7996_mcu_sta_bfer_tlv(dev, skb, conf, mconf, link_sta);
+			/* starec bfee */
+			mt7996_mcu_sta_bfee_tlv(dev, skb, conf, mconf, link_sta);
+		}
 		/* starec ht */
 		mt7996_mcu_sta_ht_tlv(skb, link_sta);
 		/* starec vht */
@@ -3299,8 +3301,6 @@ int mt7996_mcu_add_sta(struct mt7996_dev *dev, struct ieee80211_bss_conf *conf,
 		mt7996_mcu_sta_eht_tlv(skb, link_sta);
 		/* starec muru */
 		mt7996_mcu_sta_muru_tlv(dev, skb, conf, mconf, link_sta);
-		/* starec bfee */
-		mt7996_mcu_sta_bfee_tlv(dev, skb, conf, mconf, link_sta);
 
 		if (sta->mlo) {
 			/* starec mld setup */
diff --git a/mt7996/mt7996.h b/mt7996/mt7996.h
index ed2a23cd..b4f5e9e7 100644
--- a/mt7996/mt7996.h
+++ b/mt7996/mt7996.h
@@ -1115,7 +1115,7 @@ int mt7996_mcu_add_bss_info(struct mt7996_phy *phy,
 int mt7996_mcu_add_sta(struct mt7996_dev *dev, struct ieee80211_bss_conf *conf,
 		       struct mt7996_bss_conf *mconf,
 		       struct ieee80211_link_sta *link_sta,
-		       struct mt7996_link_sta *mlink, bool enable, bool newly);
+		       struct mt7996_link_sta *mlink, int conn_state, bool newly);
 int mt7996_mcu_teardown_mld_sta(struct mt7996_dev *dev,
 				struct mt7996_bss_conf *mconf,
 				struct mt7996_link_sta *mlink);
diff --git a/mt7996/testmode.c b/mt7996/testmode.c
index 9721970c..0f531f18 100644
--- a/mt7996/testmode.c
+++ b/mt7996/testmode.c
@@ -231,6 +231,7 @@ mt7996_tm_init(struct mt7996_phy *phy, bool en)
 	struct mt7996_dev *dev = phy->dev;
 	struct mt7996_vif *mvif = (struct mt7996_vif *)phy->monitor_vif->drv_priv;
 	u8 rf_test_mode = en ? RF_OPER_RF_TEST : RF_OPER_NORMAL;
+	int state;
 
 	if (!test_bit(MT76_STATE_RUNNING, &phy->mt76->state))
 		return;
@@ -243,8 +244,9 @@ mt7996_tm_init(struct mt7996_phy *phy, bool en)
 
 	mt7996_mcu_add_bss_info(phy, &phy->monitor_vif->bss_conf,
 				&mvif->deflink, &mvif->sta.deflink, en);
+	state = en ? CONN_STATE_PORT_SECURE : CONN_STATE_DISCONNECT;
 	mt7996_mcu_add_sta(dev, &phy->monitor_vif->bss_conf, &mvif->deflink,
-			   NULL, &mvif->sta.deflink, en, false);
+			   NULL, &mvif->sta.deflink, state, false);
 
 	mt7996_tm_set(dev, SET_ID(BAND_IDX), phy->mt76->band_idx);
 
-- 
2.45.2

