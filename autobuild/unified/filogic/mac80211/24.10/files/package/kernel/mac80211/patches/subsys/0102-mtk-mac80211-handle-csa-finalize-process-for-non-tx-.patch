From 6b2660d7cf77ce6523f9cec6d0ab063b2396b8cf Mon Sep 17 00:00:00 2001
From: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
Date: Thu, 26 Jun 2025 10:52:23 +0800
Subject: [PATCH 102/115] mtk: mac80211: handle csa finalize process for non-tx
 bss

In our design, during a channel switch, the partner links of the affiliated MLD
AP for the channel switching link should also perform CSA finalization.

Signed-off-by: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
---
 net/mac80211/cfg.c | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

diff --git a/net/mac80211/cfg.c b/net/mac80211/cfg.c
index 0534bdfd..f40ad41a 100644
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@ -3927,15 +3927,22 @@ void ieee80211_csa_finish(struct ieee80211_vif *vif, unsigned int link_id)
 		 * interfaces when channel switch is received on
 		 * transmitting interface
 		 */
-		struct ieee80211_link_data *iter;
+		struct ieee80211_link_data *iter, *iter_tmp;
+		unsigned int link;
 
 		for_each_sdata_link_rcu(local, iter) {
 			if (iter->sdata == sdata ||
 			    rcu_access_pointer(iter->conf->tx_bss_conf) != tx_bss_conf)
 				continue;
 
-			wiphy_work_queue(iter->sdata->local->hw.wiphy,
-					 &iter->csa.finalize_work);
+			/* For non-tx bss, finalize the csa process for both
+			 * its partner links and itself.
+			 */
+			for_each_valid_link(&iter->sdata->wdev, link) {
+				iter_tmp = rcu_dereference(iter->sdata->link[link]);
+				wiphy_work_queue(iter->sdata->local->hw.wiphy,
+						 &iter_tmp->csa.finalize_work);
+			}
 		}
 	}
 
-- 
2.45.2

