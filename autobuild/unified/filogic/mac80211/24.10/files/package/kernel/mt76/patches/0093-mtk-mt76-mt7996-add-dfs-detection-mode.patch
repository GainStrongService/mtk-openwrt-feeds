From 8c431c6bc78fd3e97cb3a1bbb41f40f8948c7c09 Mon Sep 17 00:00:00 2001
From: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
Date: Tue, 3 Jun 2025 21:24:09 +0800
Subject: [PATCH 93/95] mtk: mt76: mt7996: add dfs detection mode

Add dfs detection mode vendor cmd

Signed-off-by: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
---
 mt7996/vendor.c | 52 +++++++++++++++++++++++++++++++++++++++++++++++++
 mt7996/vendor.h | 13 +++++++++++++
 2 files changed, 65 insertions(+)

diff --git a/mt7996/vendor.c b/mt7996/vendor.c
index c9670891..cb13e7ad 100644
--- a/mt7996/vendor.c
+++ b/mt7996/vendor.c
@@ -177,6 +177,12 @@ txpower_ctrl_policy[NUM_MTK_VENDOR_ATTRS_TXPOWER_CTRL] = {
 	[MTK_VENDOR_ATTR_TXPOWER_CTRL_AFC_LPI] = { .type = NLA_U8 },
 };
 
+static const struct nla_policy
+dfs_tx_ctrl_policy[NUM_MTK_VENDOR_ATTRS_DFS_TX_CTRL] = {
+	[MTK_VENDOR_ATTR_DFS_TX_CTRL_MODE] = {.type = NLA_U8 },
+	[MTK_VENDOR_ATTR_DFS_TX_CTRL_RADIO_IDX] = {.type = NLA_U8 },
+};
+
 struct mt7996_amnt_data {
 	u8 idx;
 	u8 addr[ETH_ALEN];
@@ -1772,6 +1778,41 @@ static int mt7996_vendor_txpower_ctrl(struct wiphy *wiphy,
 	return err;
 }
 
+static int mt7996_vendor_dfs_tx_mode_ctrl(struct wiphy *wiphy,
+					  struct wireless_dev *wdev,
+					  const void *data,
+					  int data_len)
+{
+	struct ieee80211_hw *hw = wiphy_to_ieee80211_hw(wiphy);
+	struct mt7996_dev *dev = mt7996_hw_dev(hw);
+	struct mt7996_phy *phy;
+	struct nlattr *tb[NUM_MTK_VENDOR_ATTRS_DFS_TX_CTRL];
+	u8 radio_idx, dfs_tx_mode;
+	int err, rdd_idx;
+
+	if (!tb[MTK_VENDOR_ATTR_DFS_TX_CTRL_MODE] ||
+	    !tb[MTK_VENDOR_ATTR_DFS_TX_CTRL_RADIO_IDX])
+		return -EINVAL;
+
+	err = nla_parse(tb, MTK_VENDOR_ATTR_DFS_TX_CTRL_MAX, data, data_len,
+			dfs_tx_ctrl_policy, NULL);
+	if (err)
+		return err;
+
+	radio_idx = nla_get_u8(tb[MTK_VENDOR_ATTR_DFS_TX_CTRL_RADIO_IDX]);
+	if (!mt7996_radio_valid(dev, radio_idx))
+		return -EINVAL;
+
+	phy = dev->radio_phy[radio_idx];
+	rdd_idx = mt7996_get_rdd_idx(phy, false);
+	if (rdd_idx < 0)
+		return -EINVAL;
+
+	dfs_tx_mode = nla_get_u8(tb[MTK_VENDOR_ATTR_DFS_TX_CTRL_MODE]);
+
+	return mt7996_mcu_rdd_cmd(dev, RDD_DET_MODE, rdd_idx, dfs_tx_mode);
+}
+
 static const struct wiphy_vendor_command mt7996_vendor_commands[] = {
 	{
 		.info = {
@@ -1955,6 +1996,17 @@ static const struct wiphy_vendor_command mt7996_vendor_commands[] = {
 		.policy = scs_ctrl_policy,
 		.maxattr = MTK_VENDOR_ATTR_SCS_CTRL_MAX,
 	},
+	{
+		.info = {
+			.vendor_id = MTK_NL80211_VENDOR_ID,
+			.subcmd = MTK_NL80211_VENDOR_SUBCMD_DFS_TX_CTRL,
+		},
+		.flags = WIPHY_VENDOR_CMD_NEED_NETDEV |
+			WIPHY_VENDOR_CMD_NEED_RUNNING,
+		.doit = mt7996_vendor_dfs_tx_mode_ctrl,
+		.policy = dfs_tx_ctrl_policy,
+		.maxattr = MTK_VENDOR_ATTR_DFS_TX_CTRL_MAX,
+	},
 };
 
 static const struct nl80211_vendor_cmd_info mt7996_vendor_events[] = {
diff --git a/mt7996/vendor.h b/mt7996/vendor.h
index 5ae58752..4ea1aba9 100644
--- a/mt7996/vendor.h
+++ b/mt7996/vendor.h
@@ -22,6 +22,7 @@ enum mtk_nl80211_vendor_subcmds {
 	MTK_NL80211_VENDOR_SUBCMD_SCS_CTRL = 0xd0,
 	MTK_NL80211_VENDOR_SUBCMD_EML_CTRL = 0xd3,
 	MTK_NL80211_VENDOR_SUBCMD_EPCS_CTRL = 0xd4,
+	MTK_NL80211_VENDOR_SUBCMD_DFS_TX_CTRL = 0xd5,
 };
 
 enum mtk_nl80211_vendor_events {
@@ -366,6 +367,18 @@ enum mtk_vendor_attr_txpower_ctrl {
 		NUM_MTK_VENDOR_ATTRS_TXPOWER_CTRL - 1
 };
 
+enum mtk_vendor_attr_dfs_tx_ctrl {
+	MTK_VENDOR_ATTR_DFS_TX_CTRL_UNSPEC,
+
+	MTK_VENDOR_ATTR_DFS_TX_CTRL_MODE,
+	MTK_VENDOR_ATTR_DFS_TX_CTRL_RADIO_IDX,
+
+	/* keep last */
+	NUM_MTK_VENDOR_ATTRS_DFS_TX_CTRL,
+	MTK_VENDOR_ATTR_DFS_TX_CTRL_MAX =
+		NUM_MTK_VENDOR_ATTRS_DFS_TX_CTRL - 1
+};
+
 #endif
 
 #endif
-- 
2.45.2

