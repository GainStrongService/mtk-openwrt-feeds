From 24c2a770ab854bbfd0f25bd5b35ef378d88bf1ae Mon Sep 17 00:00:00 2001
From: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
Date: Tue, 13 Aug 2024 14:26:52 +0800
Subject: [PATCH 40/75] mtk: mt76: mt7996: add CU event notification support

Add CU event notification support including CUF finish event.

mtk: mt76: mt7996: add CU event notification preliminary support

Add preliminary support of the CU event notification.
This patch should be merged to the final CU event notification patch.

Signed-off-by: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
---
 mt76_connac_mcu.h |  1 +
 mt7996/mcu.c      | 58 +++++++++++++++++++++++++++++++++++++++++++++--
 mt7996/mcu.h      | 28 ++++++++++++++++++++---
 3 files changed, 82 insertions(+), 5 deletions(-)

diff --git a/mt76_connac_mcu.h b/mt76_connac_mcu.h
index 7f256fa6..c27ccd64 100644
--- a/mt76_connac_mcu.h
+++ b/mt76_connac_mcu.h
@@ -1081,6 +1081,7 @@ enum {
 	MCU_UNI_EVENT_PP = 0x5a,
 	MCU_UNI_EVENT_PER_STA_INFO = 0x6d,
 	MCU_UNI_EVENT_ALL_STA_INFO = 0x6e,
+	MCU_UNI_EVENT_BSS_INFO = 0x74,
 	MCU_UNI_EVENT_MLD = 0x81,
 };
 
diff --git a/mt7996/mcu.c b/mt7996/mcu.c
index 219ddbc1..cd8dadb4 100644
--- a/mt7996/mcu.c
+++ b/mt7996/mcu.c
@@ -1414,6 +1414,54 @@ mt7996_mcu_mld_event(struct mt7996_dev *dev, struct sk_buff *skb)
 	}
 }
 
+static void
+mt7996_mcu_bss_bcn_crit_finish(void *priv, u8 *mac, struct ieee80211_vif *vif)
+{
+	struct mt7996_mcu_bss_event *data = priv;
+	struct mt7996_vif *mvif = (struct mt7996_vif *)vif->drv_priv;
+	struct mt7996_bss_conf *mconf;
+	unsigned long valid_links = vif->valid_links;
+	unsigned int link_id;
+
+	if (!ieee80211_vif_is_mld(vif))
+		return;
+
+	rcu_read_lock();
+	for_each_set_bit(link_id, &valid_links, IEEE80211_MLD_MAX_NUM_LINKS) {
+		mconf = rcu_dereference(mvif->link[link_id]);
+		if (!mconf)
+			continue;
+
+		if (mconf->mt76.idx == data->bss_idx) {
+			ieee80211_crit_update_notify(vif, link_id,
+						     NL80211_CRIT_UPDATE_NONE,
+						     GFP_ATOMIC);
+			rcu_read_unlock();
+			return;
+		}
+	}
+	rcu_read_unlock();
+}
+
+static void
+mt7996_mcu_bss_event(struct mt7996_dev *dev, struct sk_buff *skb)
+{
+	struct mt7996_mcu_bss_event *event = (void *)skb->data;
+	struct tlv *tlv = (struct tlv *)event->buf;
+
+	switch (le16_to_cpu(tlv->tag)) {
+	case UNI_EVENT_BSS_BCN_CRIT_UPDATE:
+		ieee80211_iterate_active_interfaces_atomic(dev->mt76.hw,
+				IEEE80211_IFACE_ITER_RESUME_ALL,
+				mt7996_mcu_bss_bcn_crit_finish, event);
+		break;
+	default:
+		dev_err(dev->mt76.dev, "Unknown BSS event tag: %d\n",
+			le16_to_cpu(tlv->tag));
+		return;
+	}
+}
+
 static void
 mt7996_mcu_uni_rx_unsolicited_event(struct mt7996_dev *dev, struct sk_buff *skb)
 {
@@ -1445,6 +1493,9 @@ mt7996_mcu_uni_rx_unsolicited_event(struct mt7996_dev *dev, struct sk_buff *skb)
 	case MCU_UNI_EVENT_MLD:
 		mt7996_mcu_mld_event(dev, skb);
 		break;
+	case MCU_UNI_EVENT_BSS_INFO:
+		mt7996_mcu_bss_event(dev, skb);
+		break;
 #ifdef CONFIG_MTK_DEBUG
 	case MCU_UNI_EVENT_SR:
 		mt7996_mcu_rx_sr_event(dev, skb);
@@ -3850,6 +3901,7 @@ mt7996_mcu_beacon_crit_update(struct sk_buff *rskb, struct sk_buff *skb,
 	crit->tim_ie_pos[0] = cpu_to_le16(offs->tim_offset);
 	crit->cap_info_ie_pos[0] = cpu_to_le16(offsetof(struct ieee80211_mgmt,
 							u.beacon.capab_info));
+	crit->require_event = true;
 }
 
 static void
@@ -3862,6 +3914,7 @@ mt7996_mcu_beacon_sta_prof_csa(struct sk_buff *rskb,
 	struct mt7996_bss_conf *cs_mconf;
 	struct bss_bcn_sta_prof_cntdwn_tlv *sta_prof;
 	struct tlv *tlv;
+	u8 cs_band;
 
 	if (!ieee80211_vif_is_mld(vif) || !offs->sta_prof_cntdwn_offs[0])
 		return;
@@ -3872,9 +3925,10 @@ mt7996_mcu_beacon_sta_prof_csa(struct sk_buff *rskb,
 
 	tlv = mt7996_mcu_add_uni_tlv(rskb, UNI_BSS_INFO_BCN_STA_PROF_CSA, sizeof(*sta_prof));
 
+	cs_band = cs_mconf->phy->mt76->band_idx;
 	sta_prof = (struct bss_bcn_sta_prof_cntdwn_tlv *)tlv;
-	sta_prof->sta_prof_csa_offs = cpu_to_le16(offs->sta_prof_cntdwn_offs[0] - 4);
-	sta_prof->cs_bss_idx = cs_mconf->mt76.idx;
+	sta_prof->sta_prof_csa_offs[cs_band] = cpu_to_le16(offs->sta_prof_cntdwn_offs[0] - 4);
+	sta_prof->cs_bss_idx[cs_band] = cs_mconf->mt76.idx;
 }
 
 static void
diff --git a/mt7996/mcu.h b/mt7996/mcu.h
index 0cfebef5..ae3c9879 100644
--- a/mt7996/mcu.h
+++ b/mt7996/mcu.h
@@ -536,14 +536,16 @@ struct bss_bcn_crit_update_tlv {
 	__le32 bypass_seq_bitmap;
 	__le16 tim_ie_pos[32];
 	__le16 cap_info_ie_pos[32];
+	bool require_event;
+	u8 rsv[3];
 } __packed;
 
 struct bss_bcn_sta_prof_cntdwn_tlv {
 	__le16 tag;
 	__le16 len;
-	__le16 sta_prof_csa_offs;
-	u8 cs_bss_idx;
-	u8 pkt_content[9];
+	__le16 sta_prof_csa_offs[__MT_MAX_BAND];
+	u8 cs_bss_idx[__MT_MAX_BAND];
+	u8 pkt_content[3];
 } __packed;
 
 struct bss_bcn_ml_reconf_tlv {
@@ -1266,6 +1268,26 @@ enum {
 	UNI_CMD_PEER_MLD_TTLM_REQ = 0x0,
 };
 
+struct mt7996_mcu_bss_event {
+	struct mt7996_mcu_rxd rxd;
+
+	/* fixed field */
+	u8 bss_idx;
+	u8 __rsv[3];
+	/* tlv */
+	u8 buf[];
+} __packed;
+
+struct mt7996_mcu_bss_bcn_crit_update_event {
+	__le16 tag;
+	__le16 len;
+	u8 rsv[4];
+} __packed;
+
+enum {
+	UNI_EVENT_BSS_BCN_CRIT_UPDATE = 0x01,
+};
+
 struct tx_power_ctrl {
 	u8 _rsv[4];
 
-- 
2.45.2

