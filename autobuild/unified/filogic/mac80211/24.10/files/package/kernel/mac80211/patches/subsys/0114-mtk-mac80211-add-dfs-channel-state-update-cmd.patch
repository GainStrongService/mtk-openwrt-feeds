From f1b552cfdbfb4f290bd50fce0ef5bb2cda929b73 Mon Sep 17 00:00:00 2001
From: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
Date: Mon, 18 Aug 2025 17:37:56 +0800
Subject: [PATCH 114/115] mtk: mac80211: add dfs channel state update cmd

Add a DFS state update command for offchain command.
When CAC is triggered by an offchain command, the DFS state of
the previous channel operated by offchain will not be reset.

Signed-off-by: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
---
 include/uapi/linux/nl80211.h | 5 +++++
 net/wireless/core.h          | 3 ++-
 net/wireless/mlme.c          | 6 +++++-
 net/wireless/nl80211.c       | 8 ++++++--
 4 files changed, 18 insertions(+), 4 deletions(-)

diff --git a/include/uapi/linux/nl80211.h b/include/uapi/linux/nl80211.h
index 800f22ef..d17c9493 100644
--- a/include/uapi/linux/nl80211.h
+++ b/include/uapi/linux/nl80211.h
@@ -2960,6 +2960,9 @@ enum nl80211_commands {
  * @NL80211_ATTR_CRTI_UPDATE_EVENT: Type of critical update event for notification
  *	to userspace, contains a value of enum nl80211_crit_update_event (u8).
  *
+ * @NL80211_ATTR_DFS_STATE_UPDATE: Update the DFS state, especially when the radar
+ *	detection is triggered by the offchain command.
+ *
  * @NUM_NL80211_ATTR: total number of nl80211_attrs available
  * @NL80211_ATTR_MAX: highest attribute number currently defined
  * @__NL80211_ATTR_AFTER_LAST: internal use
@@ -3539,6 +3542,8 @@ enum nl80211_attrs {
 
 	NL80211_ATTR_VENDOR_MTK_STA,
 
+	NL80211_ATTR_DFS_STATE_UPDATE,
+
 	__NL80211_ATTR_AFTER_LAST,
 	NUM_NL80211_ATTR = __NL80211_ATTR_AFTER_LAST,
 	NL80211_ATTR_MAX = __NL80211_ATTR_AFTER_LAST - 1
diff --git a/net/wireless/core.h b/net/wireless/core.h
index eef63639..4be3ede0 100644
--- a/net/wireless/core.h
+++ b/net/wireless/core.h
@@ -493,7 +493,8 @@ void cfg80211_sched_dfs_chan_update(struct cfg80211_registered_device *rdev);
 int
 cfg80211_start_background_radar_detection(struct cfg80211_registered_device *rdev,
 					  struct wireless_dev *wdev,
-					  struct cfg80211_chan_def *chandef);
+					  struct cfg80211_chan_def *chandef,
+					  bool update);
 
 void cfg80211_stop_background_radar_detection(struct wireless_dev *wdev);
 
diff --git a/net/wireless/mlme.c b/net/wireless/mlme.c
index cc7351ac..01e6b4b6 100644
--- a/net/wireless/mlme.c
+++ b/net/wireless/mlme.c
@@ -1257,7 +1257,8 @@ EXPORT_SYMBOL(cfg80211_background_cac_abort);
 int
 cfg80211_start_background_radar_detection(struct cfg80211_registered_device *rdev,
 					  struct wireless_dev *wdev,
-					  struct cfg80211_chan_def *chandef)
+					  struct cfg80211_chan_def *chandef,
+					  bool update)
 {
 	unsigned int cac_time_ms;
 	int err;
@@ -1277,6 +1278,9 @@ cfg80211_start_background_radar_detection(struct cfg80211_registered_device *rde
 	    delayed_work_pending(&rdev->background_cac_done_wk))
 		return -EBUSY;
 
+	if (update)
+		cfg80211_sched_dfs_chan_update(rdev);
+
 	err = rdev_set_radar_background(rdev, chandef);
 	if (err)
 		return err;
diff --git a/net/wireless/nl80211.c b/net/wireless/nl80211.c
index 06373863..086a2d7c 100644
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -858,6 +858,7 @@ static const struct nla_policy nl80211_policy[NUM_NL80211_ATTR] = {
 			NLA_POLICY_NESTED(nl80211_mbssid_config_policy),
 	[NL80211_ATTR_MBSSID_ELEMS] = { .type = NLA_NESTED },
 	[NL80211_ATTR_RADAR_BACKGROUND] = { .type = NLA_FLAG },
+	[NL80211_ATTR_DFS_STATE_UPDATE] = { .type = NLA_FLAG },
 	[NL80211_ATTR_AP_SETTINGS_FLAGS] = { .type = NLA_U32 },
 	[NL80211_ATTR_EHT_CAPABILITY] =
 		NLA_POLICY_BINARY_RANGE(NL80211_EHT_MIN_CAPABILITY_LEN, NL80211_EHT_MAX_CAPABILITY_LEN),
@@ -10869,9 +10870,12 @@ static int nl80211_start_radar_detection(struct sk_buff *skb,
 	if (!cfg80211_chandef_dfs_usable(wiphy, &chandef))
 		return -EINVAL;
 
-	if (nla_get_flag(info->attrs[NL80211_ATTR_RADAR_BACKGROUND]))
+	if (nla_get_flag(info->attrs[NL80211_ATTR_RADAR_BACKGROUND])) {
+		bool update = nla_get_flag(info->attrs[NL80211_ATTR_DFS_STATE_UPDATE]);
+
 		return cfg80211_start_background_radar_detection(rdev, wdev,
-								 &chandef);
+								 &chandef, update);
+	}
 
 	if (cfg80211_beaconing_iface_active(wdev)) {
 		/* During MLO other link(s) can beacon, only the current link
-- 
2.45.2

