From 7c4aa975633b6c93c235de950755e4eed9e2e19f Mon Sep 17 00:00:00 2001
From: Shayne Chen <shayne.chen@mediatek.com>
Date: Tue, 21 Jan 2025 18:31:10 +0800
Subject: [PATCH 148/206] mtk: hostapd: fix radio_mask for WDS interface

This commit fixes the following display issue:
(radio_mask of phy0.2-ap1 is 2, while phy0.2-ap1.sta1 is "0 1 2")

root@OpenWrt:~# iw dev
phy#0
        Interface phy0.2-ap1.sta1
                ifindex 674
                wdev 0x29a
                addr 00:02:c6:4f:02:00
                type AP/VLAN
                channel 37 (6135 MHz), width: 320 MHz, center1: 6105 MHz
                4addr: on
                Radios: 0 1 2
        Interface phy0.2-ap1
                ifindex 673
                wdev 0x299
                addr 00:02:c6:4f:02:00
                ssid bilibili-dev1-6g-0-C64f
                type AP
                channel 37 (6135 MHz), width: 320 MHz, center1: 6105 MHz
                txpower 12.00 dBm
                multicast TXQ:
                        qsz-byt qsz-pkt flows   drops   marks   overlmt hashcol tx-bytes        tx-packets
                        0       0       0       0       0       0       0       0               0
                Radios: 2

Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
---
 src/ap/ap_drv_ops.c          | 14 +++-----------
 src/ap/hostapd.c             |  9 +--------
 src/ap/hostapd.h             | 13 +++++++++++++
 src/drivers/driver.h         |  4 +++-
 src/drivers/driver_nl80211.c |  7 ++++---
 5 files changed, 24 insertions(+), 23 deletions(-)

diff --git a/src/ap/ap_drv_ops.c b/src/ap/ap_drv_ops.c
index 231711956..04c2dfa95 100644
--- a/src/ap/ap_drv_ops.c
+++ b/src/ap/ap_drv_ops.c
@@ -381,16 +381,7 @@ int hostapd_vlan_if_add(struct hostapd_data *hapd, const char *ifname)
 {
 	char force_ifname[IFNAMSIZ];
 	u8 if_addr[ETH_ALEN];
-	u32 radio_mask = 0;
-
-#ifdef CONFIG_IEEE80211BE
-	if (hapd->iface->current_hw_info) {
-		if (hapd->conf->mld_ap)
-			radio_mask = hapd->conf->mld_radio_mask;
-		else
-			radio_mask = 1 << hapd->iface->current_hw_info->hw_idx;
-	}
-#endif /* CONFIG_IEEE80211BE */
+	u32 radio_mask = hostapd_get_radio_mask(hapd);
 
 	return hostapd_if_add(hapd, WPA_IF_AP_VLAN, ifname, hapd->own_addr,
 			      NULL, NULL, force_ifname, if_addr, NULL, 0, hapd->iface->freq, radio_mask);
@@ -410,6 +401,7 @@ int hostapd_set_wds_sta(struct hostapd_data *hapd, char *ifname_wds,
 	char ifName[IFNAMSIZ + 1] = {0};
 
 	int mRet = 0;
+	u32 radio_mask = hostapd_get_radio_mask(hapd);
 
 	if (hapd->driver == NULL || hapd->driver->set_wds_sta == NULL)
 		return -1;
@@ -439,7 +431,7 @@ int hostapd_set_wds_sta(struct hostapd_data *hapd, char *ifname_wds,
 	if (hapd->conf->wds_bridge[0])
 		bridge = hapd->conf->wds_bridge;
 	return hapd->driver->set_wds_sta(hapd->drv_priv, addr, aid, val,
-					 bridge, ifName);
+					 bridge, ifName, radio_mask);
 }
 
 
diff --git a/src/ap/hostapd.c b/src/ap/hostapd.c
index 70a026522..43e5bf994 100644
--- a/src/ap/hostapd.c
+++ b/src/ap/hostapd.c
@@ -1487,7 +1487,7 @@ int hostapd_setup_bss(struct hostapd_data *hapd, int first, bool start_beacon)
 	char force_ifname[IFNAMSIZ];
 	u8 if_addr[ETH_ALEN];
 	int flush_old_stations = 1;
-	u32 radio_mask = 0;
+	u32 radio_mask = hostapd_get_radio_mask(hapd);
 
 	if (!hostapd_mld_is_first_bss(hapd)) {
 		/* Only flush old stations when setting up the first BSS for the MLD. */
@@ -1560,13 +1560,6 @@ int hostapd_setup_bss(struct hostapd_data *hapd, int first, bool start_beacon)
 			if (addr && !is_zero_ether_addr(hapd->conf->mld_addr))
 				os_memcpy(addr, hapd->conf->mld_addr, ETH_ALEN);
 		}
-
-		if (hapd->iface->current_hw_info) {
-			if (hapd->conf->mld_ap)
-				radio_mask = hapd->conf->mld_radio_mask;
-			else
-				radio_mask = 1 << hapd->iface->current_hw_info->hw_idx;
-		}
 #endif /* CONFIG_IEEE80211BE */
 
 		hapd->interface_added = 1;
diff --git a/src/ap/hostapd.h b/src/ap/hostapd.h
index b7a054f1d..714e54c6c 100644
--- a/src/ap/hostapd.h
+++ b/src/ap/hostapd.h
@@ -1080,4 +1080,17 @@ static inline bool ap_pmf_enabled(struct hostapd_bss_config *conf)
 		conf->rsn_override_mfp_2 != NO_MGMT_FRAME_PROTECTION;
 }
 
+static inline u32 hostapd_get_radio_mask(struct hostapd_data *hapd)
+{
+#ifdef CONFIG_IEEE80211BE
+	if (hapd->iface->current_hw_info) {
+		if (hapd->conf->mld_ap)
+			return hapd->conf->mld_radio_mask;
+		else
+			return 1 << hapd->iface->current_hw_info->hw_idx;
+	}
+#endif /* CONFIG_IEEE80211BE */
+	return 0;
+}
+
 #endif /* HOSTAPD_H */
diff --git a/src/drivers/driver.h b/src/drivers/driver.h
index f03e80132..563198a2c 100644
--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -4179,10 +4179,12 @@ struct wpa_driver_ops {
 	 *	to indicate that bridge is not to be used
 	 * @ifname_wds: Buffer to return the interface name for the new WDS
 	 *	station or %NULL to indicate name is not returned.
+	 * @radio_mask: radio mask of WDS interface
 	 * Returns: 0 on success, -1 on failure
 	 */
 	int (*set_wds_sta)(void *priv, const u8 *addr, int aid, int val,
-			   const char *bridge_ifname, const char *ifname_wds);
+			   const char *bridge_ifname, const char *ifname_wds,
+			   u32 radio_mask);
 
 	/**
 	 * send_action - Transmit an Action frame
diff --git a/src/drivers/driver_nl80211.c b/src/drivers/driver_nl80211.c
index 66db2f311..e850d6954 100644
--- a/src/drivers/driver_nl80211.c
+++ b/src/drivers/driver_nl80211.c
@@ -8797,7 +8797,8 @@ static int have_ifidx(struct wpa_driver_nl80211_data *drv, int ifidx,
 
 
 static int i802_set_wds_sta(void *priv, const u8 *addr, int aid, int val,
-			    const char *bridge_ifname, const char *ifname_wds)
+			    const char *bridge_ifname, const char *ifname_wds,
+			    u32 radio_mask)
 {
 	struct i802_bss *bss = priv;
 	struct wpa_driver_nl80211_data *drv = bss->drv;
@@ -8815,8 +8816,8 @@ static int i802_set_wds_sta(void *priv, const u8 *addr, int aid, int val,
 		if (!if_nametoindex(name)) {
 			if (nl80211_create_iface(drv, name,
 						 NL80211_IFTYPE_AP_VLAN,
-						 bss->addr, 1, NULL, NULL, 0, 0) <
-			    0)
+						 bss->addr, 1, NULL, NULL, 0,
+						 radio_mask) < 0)
 				return -1;
 
 			if (bridge_ifname)
-- 
2.45.2

