From cfe5ebd505775ab6cc197f577bf427dbaaa8f2f0 Mon Sep 17 00:00:00 2001
From: Michael-CY Lee <michael-cy.lee@mediatek.com>
Date: Thu, 6 Feb 2025 08:25:37 +0800
Subject: [PATCH 168/210] mtk: hostapd: refactor beacon setting after interface
 setup completion

The original implementation invoked ieee802_11_set_beacons(), which
resulted in excessive and unnecessary beacon settings.

For instance, with 16 BSSes on both the 2.4 GHz and 5 GHz bands, and
additional 16 BSSes on 6 GHz band configured after the 2.4 and 5 GHz
BSSes, calling ieee802_11_set_beacons on the 6 GHz hostapd_iface
triggered beacon settings for each 2.4 GHz and 5 GHz BSS for every 6
GHz BSS. This led to a total of 16 * (1 + 16 + 16) beacon settings,
whereas only one beacon setting per BSS is required to fulfill the
original intent.

This commit refactors the beacon setting process after interface setup
completion to ensuring that each BSS's beacon is set only once.

This change also serves as a fix for commit
2b541601daa (AP: Include an RNR element in Beacon frames for AP MLD).

Signed-off-by: Michael-CY Lee <michael-cy.lee@mediatek.com>
---
 src/ap/beacon.c  | 15 +++++++++++++++
 src/ap/beacon.h  |  1 +
 src/ap/hostapd.c | 10 ++++++++--
 3 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/src/ap/beacon.c b/src/ap/beacon.c
index 2bb99aeae..811dcf1bc 100644
--- a/src/ap/beacon.c
+++ b/src/ap/beacon.c
@@ -2937,6 +2937,21 @@ int ieee802_11_set_beacon_per_bss_only(struct hostapd_data *hapd)
 }
 
 
+int ieee802_11_set_beacon_per_iface_only(struct hostapd_iface *iface)
+{
+	size_t i;
+	int ret = 0;
+
+	for (i = 0; i < iface->num_bss; i++) {
+		if (iface->bss[i]->started &&
+		    __ieee802_11_set_beacon(iface->bss[i]) < 0)
+			ret = -1;
+	}
+
+	return ret;
+}
+
+
 #ifdef CONFIG_IEEE80211BE
 
 static int hostapd_get_probe_resp_tmpl(struct hostapd_data *hapd,
diff --git a/src/ap/beacon.h b/src/ap/beacon.h
index 19033b5a2..298f0c05d 100644
--- a/src/ap/beacon.h
+++ b/src/ap/beacon.h
@@ -51,6 +51,7 @@ void handle_probe_req(struct hostapd_data *hapd,
 		      const struct ieee80211_mgmt *mgmt, size_t len,
 		      int ssi_signal);
 int ieee802_11_set_beacon_per_bss_only(struct hostapd_data *hapd);
+int ieee802_11_set_beacon_per_iface_only(struct hostapd_iface *iface);
 int ieee802_11_set_beacon(struct hostapd_data *hapd);
 int ieee802_11_set_beacons(struct hostapd_iface *iface);
 int ieee802_11_set_bss_critical_update(struct hostapd_data *hapd,
diff --git a/src/ap/hostapd.c b/src/ap/hostapd.c
index e8735c1fe..c18cf850c 100644
--- a/src/ap/hostapd.c
+++ b/src/ap/hostapd.c
@@ -2894,8 +2894,14 @@ dfs_offload:
 	for (j = 0; j < iface->num_bss; j++)
 		hostapd_neighbor_set_own_report(iface->bss[j]);
 
-	if (ifaces && ifaces->count > 1)
-		ieee802_11_update_beacons(iface);
+	if (ifaces) {
+		for (j = 0; j < ifaces->count; j++) {
+			if (iface == ifaces->iface[j])
+				continue;
+
+			ieee802_11_set_beacon_per_iface_only(ifaces->iface[j]);
+		}
+	}
 
 	return 0;
 
-- 
2.45.2

