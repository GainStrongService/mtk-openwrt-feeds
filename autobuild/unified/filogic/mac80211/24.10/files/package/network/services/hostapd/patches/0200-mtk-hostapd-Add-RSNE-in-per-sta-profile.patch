From 7c78025191c38ebba58322a3288741835d0409ce Mon Sep 17 00:00:00 2001
From: Allen Ye <allen.ye@mediatek.com>
Date: Thu, 8 May 2025 16:18:09 +0800
Subject: [PATCH 200/236] mtk: hostapd: Add RSNE in per-sta profile

Add RSNE in per-sta profile to fix each link may have different rsn cap in
a mld bss. e.g. 2/5g using transition mode and 6g using sae mode.

Signed-off-by: Allen Ye <allen.ye@mediatek.com>

Add sm sanity check brfore use it.

Signed-off-by: Allen Ye <allen.ye@mediatek.com>
---
 src/ap/ieee802_11.c     | 60 +++++++++++++++++++++++++++++++++++++----
 src/ap/ieee802_11.h     |  4 ++-
 src/ap/ieee802_11_eht.c |  2 +-
 3 files changed, 59 insertions(+), 7 deletions(-)

diff --git a/src/ap/ieee802_11.c b/src/ap/ieee802_11.c
index 7a65542fa..c9afd3e16 100644
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -4860,14 +4860,51 @@ static int check_assoc_ies(struct hostapd_data *hapd, struct sta_info *sta,
 }
 
 
+static bool is_rsne_present_in_assoc_resp(struct wpa_state_machine *sm,
+					  struct hostapd_data *hapd,
+					  u8 **pmkid)
+{
+	switch (sm->auth_alg) {
+	case WLAN_AUTH_FT:
+#ifdef CONFIG_IEEE80211R_AP
+		*pmkid = sm->pmk_r1_name;
+#endif
+		return true;
+	case WLAN_AUTH_FILS_SK:
+	case WLAN_AUTH_FILS_SK_PFS:
+	case WLAN_AUTH_FILS_PK:
+#ifdef CONFIG_IEEE80211R_AP
+		if (sm->wpa_key_mgmt & (WPA_KEY_MGMT_FT_FILS_SHA256 |
+					WPA_KEY_MGMT_FT_FILS_SHA384))
+			*pmkid = sm->pmk_r1_name;
+		else
+#endif
+			*pmkid = NULL;
+
+		return true;
+	default:
+		break;
+	}
+
+	if (hapd->conf->wpa_key_mgmt & WPA_KEY_MGMT_OWE) {
+		*pmkid = sm->pmksa ? sm->pmksa->pmkid: NULL;
+		return true;
+	}
+
+	return false;
+}
+
+
 #ifdef CONFIG_IEEE80211BE
 
 void ieee80211_ml_build_assoc_resp(struct hostapd_data *hapd,
-				   struct mld_link_info *link)
+				   struct mld_link_info *link,
+				   struct wpa_state_machine *sm)
 {
 	u8 buf[EHT_ML_MAX_STA_PROF_LEN];
 	u8 *p = buf;
 	size_t buflen = sizeof(buf);
+	u8 *pmkid = NULL;
 
 	/* Capability Info */
 	WPA_PUT_LE16(p, hostapd_own_capab_info(hapd));
@@ -4884,6 +4921,17 @@ void ieee80211_ml_build_assoc_resp(struct hostapd_data *hapd,
 	p = hostapd_eid_supp_rates(hapd, p);
 	p = hostapd_eid_ext_supp_rates(hapd, p);
 	p = hostapd_eid_rm_enabled_capab(hapd, p, buf + buflen - p);
+
+	if (sm && is_rsne_present_in_assoc_resp(sm, hapd, &pmkid)) {
+		int res = 0;
+
+		/* TODO: check the necessity of RSNE inheritance */
+		res = wpa_write_rsn_ie(&hapd->wpa_auth->conf, p, buf + buflen - p,
+				       pmkid);
+		if (res < 0)
+			goto out;
+		p += res;
+	}
 	p = hostapd_eid_ht_capabilities(hapd, p);
 	p = hostapd_eid_ht_operation(hapd, p);
 
@@ -4964,8 +5012,10 @@ int ieee80211_ml_process_link(struct hostapd_data *hapd,
 	if (type != LINK_PARSE_RECONF) {
 		mlbuf = ieee802_11_defrag(elems.basic_mle, elems.basic_mle_len,
 					  true);
-		if (!mlbuf)
+		if (!mlbuf) {
+			status = WLAN_STATUS_UNSPECIFIED_FAILURE;
 			goto out;
+		}
 
 		if (ieee802_11_parse_link_assoc_req(&elems, mlbuf,
 						    hapd->mld_link_id, true) ==
@@ -5050,7 +5100,7 @@ out:
 	link->status = status;
 
 	if (!offload && type != LINK_PARSE_RECONF)
-		ieee80211_ml_build_assoc_resp(hapd, link);
+		ieee80211_ml_build_assoc_resp(hapd, link, origin_sta->wpa_sm);
 
 	wpa_printf(MSG_DEBUG, "MLD: link: status=%u", status);
 	if (status != WLAN_STATUS_SUCCESS) {
@@ -5114,12 +5164,12 @@ int hostapd_process_assoc_ml_info(struct hostapd_data *hapd,
 
 			link->status = WLAN_STATUS_UNSPECIFIED_FAILURE;
 			if (!offload)
-				ieee80211_ml_build_assoc_resp(hapd, link);
+				ieee80211_ml_build_assoc_resp(hapd, link, NULL);
 		} else if (tx_link_status != WLAN_STATUS_SUCCESS) {
 			/* TX link rejected the connection */
 			link->status = WLAN_STATUS_DENIED_TX_LINK_NOT_ACCEPTED;
 			if (!offload)
-				ieee80211_ml_build_assoc_resp(hapd, link);
+				ieee80211_ml_build_assoc_resp(hapd, link, NULL);
 		} else {
 			if (ieee80211_ml_process_link(
 				    bss, sta, link, ies, ies_len,
diff --git a/src/ap/ieee802_11.h b/src/ap/ieee802_11.h
index 8e97b5247..3d79b0e66 100644
--- a/src/ap/ieee802_11.h
+++ b/src/ap/ieee802_11.h
@@ -27,6 +27,7 @@ struct sae_pt;
 struct sae_password_entry;
 struct mld_info;
 struct mld_link_info;
+struct wpa_state_machine;
 
 enum link_parse_type {
 	LINK_PARSE_ASSOC,
@@ -316,7 +317,8 @@ int ieee80211_ml_process_link(struct hostapd_data *hapd,
 			      const u8 *ies, size_t ies_len,
 			      enum link_parse_type type, bool offload);
 void ieee80211_ml_build_assoc_resp(struct hostapd_data *hapd,
-				   struct mld_link_info *link);
+				   struct mld_link_info *link,
+				   struct wpa_state_machine *sm);
 
 void ieee802_11_rx_protected_eht_action(struct hostapd_data *hapd,
 					const struct ieee80211_mgmt *mgmt,
diff --git a/src/ap/ieee802_11_eht.c b/src/ap/ieee802_11_eht.c
index f6e3d1916..1d076c5a2 100644
--- a/src/ap/ieee802_11_eht.c
+++ b/src/ap/ieee802_11_eht.c
@@ -2102,7 +2102,7 @@ hostapd_send_link_reconf_resp(struct hostapd_data *hapd,
 				continue;
 
 			link->valid = true;
-			ieee80211_ml_build_assoc_resp(lhapd, link);
+			ieee80211_ml_build_assoc_resp(lhapd, link, NULL);
 		}
 		/* TODO: Basic MLE is not supposed to include BPCC in Link
 		 * Reconfiguration Response, but mac80211 implementation for
-- 
2.45.2

