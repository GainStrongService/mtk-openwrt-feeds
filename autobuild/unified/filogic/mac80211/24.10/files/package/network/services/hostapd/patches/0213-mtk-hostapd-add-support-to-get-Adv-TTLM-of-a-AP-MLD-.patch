From d4bce6c420ada8a7acc159cb7301ee5cef7ec287 Mon Sep 17 00:00:00 2001
From: Michael-CY Lee <michael-cy.lee@mediatek.com>
Date: Fri, 20 Jun 2025 14:14:37 +0800
Subject: [PATCH 213/236] mtk: hostapd: add support to get Adv-TTLM of a AP MLD
 by hostapd_cli

if it's default mapping, the result will be:
root@OpenWrt:/# hostapd_cli -i ap-mld-1 get_attlm
Default mapping

Otherwise, the result will be like:
root@OpenWrt:/# hostapd_cli -i ap-mld-1 get_attlm
Adv-TTLM Status:
Direction: bi-direction
Mapping Switch Time: 5423 (ms)
Expected Duration: 20000 (ms)
Link Mapping: 0x0005

Signed-off-by: Michael-CY Lee <michael-cy.lee@mediatek.com>
---
 hostapd/ctrl_iface.c  | 74 +++++++++++++++++++++++++++++++++++++++++++
 hostapd/hostapd_cli.c |  8 +++++
 2 files changed, 82 insertions(+)

diff --git a/hostapd/ctrl_iface.c b/hostapd/ctrl_iface.c
index 94840befd..9f1d5b742 100644
--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -4148,10 +4148,81 @@ static int hostapd_ctrl_iface_set_attlm(struct hostapd_data *hapd, char *cmd,
 	attlm->duration = duration;
 	attlm->switch_time = switch_time;
 	attlm->disabled_links = hapd->conf->mld_allowed_links & disabled_links;
+	os_get_reltime(&attlm->start_time);
 
 	return hostapd_mld_set_attlm(hapd);
 }
 
+static int
+hostapd_ctrl_iface_get_attlm(struct hostapd_data *hapd, char *buf, size_t buflen)
+{
+	struct attlm_settings *attlm;
+	struct os_reltime now, res;
+	char *pos, *end;
+	u16 switch_time = 0;
+	u32 duration;
+	int ret;
+
+	if (!hostapd_is_mld_ap(hapd))
+		return -1;
+
+	pos = buf;
+	end = buf + buflen;
+
+	if (!hostapd_is_attlm_active(hapd)) {
+		/* Default mapping */
+		ret = os_snprintf(pos, end - pos, "Default mapping\n");
+		if (os_snprintf_error(end - pos, ret))
+			return pos - buf;
+
+		return ret;
+	}
+
+	attlm = &hapd->mld->new_attlm;
+	os_get_reltime(&now);
+	os_reltime_sub(&now, &attlm->start_time, &res);
+	if (attlm->switch_time_tsf_tu != 0) {
+		switch_time = attlm->switch_time - (u32)os_reltime_in_ms(&res);
+		duration = attlm->duration;
+	} else {
+		duration = attlm->duration - (u32)os_reltime_in_ms(&res);
+	}
+
+	ret = os_snprintf(pos, end - pos, "Adv-TTLM Status:\n");
+	if (os_snprintf_error(end - pos, ret))
+		return pos - buf;
+	pos += ret;
+
+	ret = os_snprintf(pos, end - pos, "Direction: bi-direction\n");
+	if (os_snprintf_error(end - pos, ret))
+		return pos - buf;
+	pos += ret;
+
+	/* Mapping Switch time */
+	ret = os_snprintf(pos, end - pos,
+			  "Remaining Mapping Switch Time: %u (ms)\n",
+			  switch_time);
+	if (os_snprintf_error(end - pos, ret))
+		return pos - buf;
+	pos += ret;
+
+	/* Expected Duration */
+	ret = os_snprintf(pos, end - pos, "Remaining Expected Duration: %u (ms)\n",
+			  duration);
+	if (os_snprintf_error(end - pos, ret))
+		return pos - buf;
+	pos += ret;
+
+	/* Link Mapping */
+	ret = os_snprintf(pos, end - pos, "Link Mapping: 0x%04x\n",
+			  hapd->mld->valid_links & ~attlm->disabled_links);
+	if (os_snprintf_error(end - pos, ret))
+		return pos - buf;
+	pos += ret;
+
+	return pos - buf;
+}
+
 static struct sta_info *hostapd_ctrl_read_sta(struct hostapd_data *hapd,
 					      char *cmd)
 {
@@ -6900,6 +6971,9 @@ static int hostapd_ctrl_iface_receive_process(struct hostapd_data *hapd,
 		if (hostapd_ctrl_iface_set_attlm(hapd, buf + 10, reply,
 						 reply_size))
 			reply_len = -1;
+	} else if (os_strncmp(buf, "GET_ATTLM", 9) == 0) {
+		reply_len = hostapd_ctrl_iface_get_attlm(hapd, reply,
+							 reply_size);
 	} else if (os_strncmp(buf, "NEG_TTLM_TEARDOWN ", 18) == 0) {
 		if (hostapd_ctrl_iface_neg_ttlm_teardown(hapd, buf + 18))
 			reply_len = -1;
diff --git a/hostapd/hostapd_cli.c b/hostapd/hostapd_cli.c
index 5a4eeea22..c46cee67c 100644
--- a/hostapd/hostapd_cli.c
+++ b/hostapd/hostapd_cli.c
@@ -1822,6 +1822,12 @@ static int hostapd_cli_cmd_set_attlm(struct wpa_ctrl *ctrl, int argc,
 	return hostapd_cli_cmd(ctrl, "SET_ATTLM", 1, argc, argv);
 }
 
+static int hostapd_cli_cmd_get_attlm(struct wpa_ctrl *ctrl, int argc,
+				     char *argv[])
+{
+	return wpa_ctrl_command(ctrl, "GET_ATTLM");
+}
+
 static int hostapd_cli_cmd_neg_ttlm_teardown(struct wpa_ctrl *ctrl, int argc,
 					     char *argv[])
 {
@@ -2156,6 +2162,8 @@ static const struct hostapd_cli_cmd hostapd_cli_commands[] = {
 		" [count=<count>] = Remove affiliated link of a MLD AP"},
 	{ "set_attlm", hostapd_cli_cmd_set_attlm, NULL,
 		" = Disable the affiliated AP of a MLD AP" },
+	{ "get_attlm", hostapd_cli_cmd_get_attlm, NULL,
+		" = Get the TTLM status of a AP MLD" },
 	{ "neg_ttlm_teardown", hostapd_cli_cmd_neg_ttlm_teardown, NULL,
 		" = Teardown the Negotiated TTLM with the STA" },
 	{ "get_neg_ttlm", hostapd_cli_cmd_get_neg_ttlm, NULL,
-- 
2.45.2

