From ccd711acfe8725377c56d982bac79951d576b1f3 Mon Sep 17 00:00:00 2001
From: Michael-CY Lee <michael-cy.lee@mediatek.com>
Date: Thu, 26 Dec 2024 11:08:47 +0800
Subject: [PATCH 221/236] mtk: hostapd: add 11v + adv-TTLM support

If an Adv-TTLM is set on an AP MLD with 11v non-TX links BSS and the
TTLM is different from the one that Tx BSS used (including the default
TTLM), the TTLM element should be carried in the nontrandmitted BSSID profile.

If the TX BSS has a TTLM other than the default TTLM in its beacon
body, and non-TX BSS has no TTLM (uses default TTLM), the TTLM ID should
be inlucded in the non-inheritance element of nontransmitted BSSID
profile.

Signed-off-by: Michael-CY Lee <michael-cy.lee@mediatek.com>
---
 src/ap/beacon.c     |  2 ++
 src/ap/hostapd.c    | 26 ++++++++++++++++++++++++++
 src/ap/hostapd.h    |  1 +
 src/ap/ieee802_11.c | 43 ++++++++++++++++++++++++++++++++++++++-----
 4 files changed, 67 insertions(+), 5 deletions(-)

diff --git a/src/ap/beacon.c b/src/ap/beacon.c
index 54e7d8511..b4e85625b 100644
--- a/src/ap/beacon.c
+++ b/src/ap/beacon.c
@@ -3578,6 +3578,8 @@ int ieee802_11_set_bss_critical_update(struct hostapd_data *hapd,
 	case BSS_CRIT_UPDATE_EVENT_RECONFIG:
 	case BSS_CRIT_UPDATE_EVENT_ATTLM:
 		hapd->eht_mld_bss_critical_update = BSS_CRIT_UPDATE_FLAG;
+		if (hapd != hostapd_mbssid_get_tx_bss(hapd))
+			update_txbss_beacon = true;
 		break;
 	case BSS_CRIT_UPDATE_EVENT_ADD_LINK:
 		/* only set the CU flag for the links in link_reconf_in_progress */
diff --git a/src/ap/hostapd.c b/src/ap/hostapd.c
index ae6cf3ec6..67fd1c2be 100644
--- a/src/ap/hostapd.c
+++ b/src/ap/hostapd.c
@@ -540,6 +540,32 @@ bool hostapd_is_attlm_active(struct hostapd_data *hapd)
 }
 
 
+bool hostapd_is_same_attlm(struct hostapd_data *hapd1, struct hostapd_data *hapd2)
+{
+	struct hostapd_data *link1, *link2;
+
+	/* Both are default TTLM */
+	if (!hostapd_is_attlm_active(hapd1) && !hostapd_is_attlm_active(hapd2))
+		return true;
+
+	if (!hostapd_is_attlm_active(hapd1) || !hostapd_is_attlm_active(hapd2))
+		return false;
+
+	/* make sure the configurations of link are the same */
+	if (hapd1->mld->valid_links != hapd2->mld->valid_links)
+		return false;
+
+	for_each_mld_link(link1, hapd1)
+		for_each_mld_link(link2, hapd2)
+			if (link1->mld_link_id == link2->mld_link_id &&
+			    link1->iface != link2->iface)
+				return false;
+
+	return hapd1->mld->new_attlm.disabled_links ==
+	       hapd2->mld->new_attlm.disabled_links;
+}
+
+
 #endif /* CONFIG_IEEE80211BE */
 
 
diff --git a/src/ap/hostapd.h b/src/ap/hostapd.h
index a07d5b6cf..646baab99 100644
--- a/src/ap/hostapd.h
+++ b/src/ap/hostapd.h
@@ -1068,6 +1068,7 @@ int hostapd_fill_cca_settings(struct hostapd_data *hapd,
 
 #ifdef CONFIG_IEEE80211BE
 bool hostapd_is_attlm_active(struct hostapd_data *hapd);
+bool hostapd_is_same_attlm(struct hostapd_data *hapd1, struct hostapd_data *hapd2);
 #ifdef CONFIG_TESTING_OPTIONS
 void hostapd_link_remove_cb(struct hostapd_data *hapd, u16 removed_links);
 int hostapd_mld_set_attlm(struct hostapd_data *hapd);
diff --git a/src/ap/ieee802_11.c b/src/ap/ieee802_11.c
index 8ba6dd1e1..0ee788c03 100644
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -9074,6 +9074,17 @@ static size_t hostapd_eid_mbssid_elem_len(struct hostapd_data *hapd,
 		    (bss != hapd || frame_type != WLAN_FC_STYPE_PROBE_RESP))
 			nontx_profile_len += hostapd_eid_eht_basic_ml_len(
 				bss, NULL, true, false);
+
+		if (hostapd_is_attlm_active(bss)) {
+			/* Include Adv-TTLM because it's different from TX-BSS */
+			if (!hostapd_is_same_attlm(tx_bss, bss))
+				nontx_profile_len += hostapd_eid_eht_attlm_len(bss);
+
+		} else {
+			/* Do not inherit Adv-TTLM from TX BSS */
+			if (hostapd_is_attlm_active(tx_bss))
+				ie_count++;
+		}
 #endif /* CONFIG_IEEE80211BE */
 
 		/* WFA vendor elements which cannot be inherited if one of them
@@ -9177,9 +9188,11 @@ static u8 * hostapd_eid_mbssid_elem(struct hostapd_data *hapd, u8 *eid, u8 *end,
 		u8 *eid_len_pos, *nontx_bss_start = eid;
 		const u8 *auth, *rsn = NULL, *rsnx = NULL;
 		u8 ie_count = 0, non_inherit_ie[3];
+		u8 ext_ie_count = 0, non_inherit_ext_ie[1];
 		size_t auth_len = 0, xrate_len;
 		u16 capab_info;
 		u8 mbssindex = i;
+		bool non_inherit_ttlm = false;
 
 		if (!bss || !bss->conf || !bss->started ||
 		    mbssid_known_bss(i, known_bss, known_bss_len))
@@ -9259,6 +9272,16 @@ static u8 * hostapd_eid_mbssid_elem(struct hostapd_data *hapd, u8 *eid, u8 *end,
 		    (bss != hapd || frame_type != WLAN_FC_STYPE_PROBE_RESP))
 			eid = hostapd_eid_eht_basic_ml_common(bss, eid, NULL,
 							      true, false);
+
+		if (hostapd_is_attlm_active(bss)) {
+			/* Include Adv-TTLM because it's different from TX-BSS */
+			if (!hostapd_is_same_attlm(tx_bss, bss))
+				eid = hostapd_eid_eht_attlm(bss, eid);
+		} else {
+			/* Do not inherit Adv-TTLM from TX BSS */
+			if (hostapd_is_attlm_active(tx_bss))
+				non_inherit_ttlm = true;
+		}
 #endif /* CONFIG_IEEE80211BE */
 		/* WFA vendor elements which cannot be inherited if one of them
 		 * is different from that of TxBSS.
@@ -9270,14 +9293,24 @@ static u8 * hostapd_eid_mbssid_elem(struct hostapd_data *hapd, u8 *eid, u8 *end,
 		eid = hostapd_get_rsne_override_2(bss, eid, end - eid);
 		eid = hostapd_get_rsnxe_override(bss, eid, end - eid);
 
-		if (ie_count) {
+		if (non_inherit_ttlm)
+			non_inherit_ext_ie[ext_ie_count++] =
+						WLAN_EID_EXT_TID_TO_LINK_MAPPING;
+
+		if (ie_count || ext_ie_count) {
 			*eid++ = WLAN_EID_EXTENSION;
-			*eid++ = 2 + ie_count + 1;
+			*eid++ = 2 + ie_count + ext_ie_count + 1;
 			*eid++ = WLAN_EID_EXT_NON_INHERITANCE;
 			*eid++ = ie_count;
-			os_memcpy(eid, non_inherit_ie, ie_count);
-			eid += ie_count;
-			*eid++ = 0; /* No Element ID Extension List */
+			if (ie_count) {
+				os_memcpy(eid, non_inherit_ie, ie_count);
+				eid += ie_count;
+			}
+			*eid++ = ext_ie_count;
+			if (ext_ie_count) {
+				os_memcpy(eid, non_inherit_ext_ie, ext_ie_count);
+				eid += ext_ie_count;
+			}
 		}
 
 		*eid_len_pos = (eid - eid_len_pos) - 1;
-- 
2.45.2

