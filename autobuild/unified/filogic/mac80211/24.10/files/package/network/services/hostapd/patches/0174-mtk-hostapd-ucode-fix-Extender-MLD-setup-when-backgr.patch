From b519e50a9ae2c9e138f56e53f14a6e9dfe2c25a0 Mon Sep 17 00:00:00 2001
From: Michael-CY Lee <michael-cy.lee@mediatek.com>
Date: Tue, 18 Mar 2025 09:07:05 +0800
Subject: [PATCH 174/206] mtk: hostapd: ucode: fix Extender MLD setup when
 background radar is off

If background radar is on and Extender AP MLD is configured to use DFS
channel on its 5G link, CAC will be conducted on that 5G link.

Extender MLD fails to setup here by following reasons:
1. STA MLD interface did not disable AP 5G link's CAC, so the following
   scan on 5G failed. Disabling the 5G link is needed to stop CAC and
   release channel resource for STA to scan.
2. Once STA MLD disable 5G link for stopping CAC, the 'current_hw_info'
   is also cleared. Later when STA MLD wants to restart 5G link via
   ucode privided with channel information and radio_idx, hostapd cannot
   find the target iface with the same radio_idx. To solve the problem,
   'hw_idx' is added on struct hostapd_iface and only for ucode use.

Signed-off-by: Michael-CY Lee <michael-cy.lee@mediatek.com>
---
 src/ap/hostapd.c     |  2 ++
 src/ap/hostapd.h     |  1 +
 src/ap/hw_features.c |  1 +
 src/ap/ucode.c       | 21 ++++++++++++++++-----
 4 files changed, 20 insertions(+), 5 deletions(-)

diff --git a/src/ap/hostapd.c b/src/ap/hostapd.c
index a795b8684..b2a350f6f 100644
--- a/src/ap/hostapd.c
+++ b/src/ap/hostapd.c
@@ -780,6 +780,7 @@ void hostapd_cleanup_iface_partial(struct hostapd_iface *iface)
 	sta_track_deinit(iface);
 	airtime_policy_update_deinit(iface);
 	hostapd_free_multi_hw_info(iface->multi_hw_info);
+	iface->num_multi_hws = 0;
 	iface->multi_hw_info = NULL;
 	iface->current_hw_info = NULL;
 }
@@ -3474,6 +3475,7 @@ struct hostapd_iface * hostapd_init(struct hapd_interfaces *interfaces,
 	}
 
 	hapd_iface->is_ch_switch_dfs = false;
+	hapd_iface->hw_idx = 255;
 	return hapd_iface;
 
 fail:
diff --git a/src/ap/hostapd.h b/src/ap/hostapd.h
index 2e07460e4..8728ce449 100644
--- a/src/ap/hostapd.h
+++ b/src/ap/hostapd.h
@@ -808,6 +808,7 @@ struct hostapd_iface {
 	struct hostapd_multi_hw_info *multi_hw_info;
 	unsigned int num_multi_hws;
 	struct hostapd_multi_hw_info *current_hw_info;
+	u8 hw_idx;
 	u8 radio_mask;
 
 #ifdef CONFIG_AFC
diff --git a/src/ap/hw_features.c b/src/ap/hw_features.c
index e18c5dfba..9bd70d579 100644
--- a/src/ap/hw_features.c
+++ b/src/ap/hw_features.c
@@ -1493,6 +1493,7 @@ int hostapd_set_current_hw_info(struct hostapd_iface *iface, int oper_freq)
 		if (hw_info->start_freq <= oper_freq &&
 		    hw_info->end_freq >= oper_freq) {
 			iface->current_hw_info = hw_info;
+			iface->hw_idx = hw_info->hw_idx;
 			wpa_printf(MSG_DEBUG,
 				   "Mode: Selected underlying hardware: hw_idx=%u",
 				   iface->current_hw_info->hw_idx);
diff --git a/src/ap/ucode.c b/src/ap/ucode.c
index 85e7659b9..5452215ed 100644
--- a/src/ap/ucode.c
+++ b/src/ap/ucode.c
@@ -535,6 +535,9 @@ uc_hostapd_iface_stop(uc_vm_t *vm, size_t nargs)
 		}
 
 		if (hostapd_is_ml_partner(first_hapd, h_hapd)) {
+			if (h->state != HAPD_IFACE_ENABLED)
+				uc_hostapd_disable_iface(h);
+
 			for (j = 0; j < h->num_bss; j++) {
 				hostapd_drv_stop_ap(h->bss[j]);
 				h->bss[j]->beacon_set_done = 0;
@@ -550,7 +553,6 @@ static uc_value_t *
 uc_hostapd_iface_start(uc_vm_t *vm, size_t nargs)
 {
 	struct hostapd_iface *iface = uc_fn_thisval("hostapd.iface");
-	struct hostapd_data *tmp_hapd;
 	uc_value_t *info = uc_fn_arg(0);
 	struct hostapd_config *conf;
 	bool changed = false;
@@ -578,13 +580,22 @@ uc_hostapd_iface_start(uc_vm_t *vm, size_t nargs)
 
 #ifdef CONFIG_IEEE80211BE
 	if (hostapd_is_mld_ap(iface->bss[0])) {
-		for_each_mld_link(tmp_hapd, iface->bss[0]) {
-			if (tmp_hapd->iface->current_hw_info &&
-			    radio_idx == tmp_hapd->iface->current_hw_info->hw_idx) {
+		struct hapd_interfaces *interfaces = iface->interfaces;
+		struct hostapd_iface *tmp_iface;
+
+		for (i = 0; i < interfaces->count; i++) {
+			tmp_iface = interfaces->iface[i];
+
+			if (tmp_iface == iface ||
+			    !hostapd_is_ml_partner(iface->bss[0],
+						   tmp_iface->bss[0]))
+				continue;
+
+			if (iface->hw_idx != 255 && radio_idx == tmp_iface->hw_idx) {
 				wpa_printf(MSG_INFO,
 					   "ucode: mtk: MLD: switch to iface with radio_idx %d\n",
 					   radio_idx);
-				iface = tmp_hapd->iface;
+				iface = tmp_iface;
 				break;
 			}
 		}
-- 
2.45.2

