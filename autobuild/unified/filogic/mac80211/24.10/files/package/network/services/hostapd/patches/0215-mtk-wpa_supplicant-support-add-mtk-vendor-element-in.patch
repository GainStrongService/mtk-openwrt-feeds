From 50c37f0cb4fe31e81792f14b573b17e64a102e51 Mon Sep 17 00:00:00 2001
From: Howard Hsu <howard-yh.hsu@mediatek.com>
Date: Fri, 27 Jun 2025 17:06:57 +0800
Subject: [PATCH 215/236] mtk: wpa_supplicant: support add mtk vendor element
 into asso req

Support add mtk vendor element into assoc req if wpa_supplicant config
network section inclues mtk_vendor_element field. Please noted that
the value of mtk_vendor_element must be inside double quotation in
wpa_supplicant config.

Signed-off-by: Howard Hsu <howard-yh.hsu@mediatek.com>

Without this commit, mtk vendor element may be included twice in assoc
request if using SAE authentication mode. If SAE authentication mode is
used, sme_send_authentication will be called twice, resulting in two
duplicate mtk vendor elements in assoc request.

Signed-off-by: Howard Hsu <howard-yh.hsu@mediatek.com>
---
 wpa_supplicant/config.c      |  2 ++
 wpa_supplicant/config_ssid.h |  6 ++++++
 wpa_supplicant/ctrl_iface.c  |  9 ++++++++-
 wpa_supplicant/sme.c         | 22 ++++++++++++++++++++++
 4 files changed, 38 insertions(+), 1 deletion(-)

diff --git a/wpa_supplicant/config.c b/wpa_supplicant/config.c
index dbd3e2137..ea0886a81 100644
--- a/wpa_supplicant/config.c
+++ b/wpa_supplicant/config.c
@@ -2858,6 +2858,7 @@ static const struct parse_data ssid_fields[] = {
 	{ INT_RANGE(max_idle, 0, 65535)},
 	{ INT_RANGE(ssid_protection, 0, 1)},
 	{ INT_RANGE(rsn_overriding, 0, 2)},
+	{ STR(mtk_vendor_element) },
 };
 
 #undef OFFSET
@@ -3041,6 +3042,7 @@ void wpa_config_free_ssid(struct wpa_ssid *ssid)
 	os_free(ssid->p2p2_client_list);
 	os_free(ssid->bssid_ignore);
 	os_free(ssid->bssid_accept);
+	os_free(ssid->mtk_vendor_element);
 #ifdef CONFIG_HT_OVERRIDES
 	os_free(ssid->ht_mcs);
 #endif /* CONFIG_HT_OVERRIDES */
diff --git a/wpa_supplicant/config_ssid.h b/wpa_supplicant/config_ssid.h
index 8fd3a8b70..0cc0be3b0 100644
--- a/wpa_supplicant/config_ssid.h
+++ b/wpa_supplicant/config_ssid.h
@@ -1341,6 +1341,12 @@ struct wpa_ssid {
 	 */
 	int go_dik_id;
 
+	/**
+	 * mtk_vendor_element - Mediatek vendor specific element for Assoc
+	 *	Request frames
+	 */
+	char *mtk_vendor_element;
+
 };
 
 #endif /* CONFIG_SSID_H */
diff --git a/wpa_supplicant/ctrl_iface.c b/wpa_supplicant/ctrl_iface.c
index 7e03471ee..e0e13f4a4 100644
--- a/wpa_supplicant/ctrl_iface.c
+++ b/wpa_supplicant/ctrl_iface.c
@@ -2325,7 +2325,14 @@ static int wpa_supplicant_ctrl_iface_status(struct wpa_supplicant *wpa_s,
 					return pos - buf;
 				pos += ret;
 			}
-
+			if (ssid->mtk_vendor_element) {
+				ret = os_snprintf(pos, end - pos,
+						  "mtk_vendor_element=%s\n",
+						  ssid->mtk_vendor_element);
+				if (os_snprintf_error(end - pos, ret))
+					return pos - buf;
+				pos += ret;
+			}
 			switch (ssid->mode) {
 			case WPAS_MODE_INFRA:
 				ret = os_snprintf(pos, end - pos,
diff --git a/wpa_supplicant/sme.c b/wpa_supplicant/sme.c
index 8708aee3c..abeb836e2 100644
--- a/wpa_supplicant/sme.c
+++ b/wpa_supplicant/sme.c
@@ -1013,6 +1013,28 @@ static void sme_send_authentication(struct wpa_supplicant *wpa_s,
 		os_free(wpa_ie);
 	}
 
+	if (ssid->mtk_vendor_element &&
+	    wpa_s->vendor_elem[VENDOR_ELEM_ASSOC_REQ] == NULL) {
+		char *pos = ssid->mtk_vendor_element;
+		size_t len = os_strlen(pos) / 2;
+		struct ieee802_11_elems elems;
+		struct wpabuf *buf;
+
+		buf = wpabuf_alloc(len);
+		if (buf == NULL)
+			goto mtk_vendor_element_end;
+
+		if (hexstr2bin(pos, wpabuf_put(buf, len), len) < 0 ||
+		    ieee802_11_parse_elems(wpabuf_head_u8(buf), len, &elems, 0) ==
+		    ParseFailed) {
+			wpabuf_free(buf);
+			goto mtk_vendor_element_end;
+		}
+
+		wpa_s->vendor_elem[VENDOR_ELEM_ASSOC_REQ] = buf;
+		wpas_vendor_elem_update(wpa_s);
+	}
+mtk_vendor_element_end:
 	sme_add_assoc_req_ie(wpa_s, wpa_s->vendor_elem[VENDOR_ELEM_ASSOC_REQ]);
 
 #ifdef CONFIG_MBO
-- 
2.45.2

