From 382cd01e558c1eb95a7cb794d79178ee20ba9013 Mon Sep 17 00:00:00 2001
From: Howard Hsu <howard-yh.hsu@mediatek.com>
Date: Sun, 9 Feb 2025 16:37:30 +0800
Subject: [PATCH 160/206] mtk: hostapd: update preference val of neighbor
 report in BTM req by sta non-preferred channels

Update the preference value of neighbor reports in BTM req by checking
the sta non-preferred channels.

Without this commit, the preference values within the neighbor report
can only be modified based on the STA non-preferred channels if the
neighbor report exists in both neighbor report database and BTM request
simutaneously.

With this commit, we no longer need to traverse the neighbor
report database; we can simply refer to the neighbor reports within the
BTM request to determine whether to modify them based on STA
non-preferred channels.

Signed-off-by: Howard Hsu <howard-yh.hsu@mediatek.com>
---
 src/ap/neighbor_db.c | 96 +++++++++++++++++++++-----------------------
 src/ap/neighbor_db.h |  4 +-
 2 files changed, 47 insertions(+), 53 deletions(-)

diff --git a/src/ap/neighbor_db.c b/src/ap/neighbor_db.c
index 367e12560..26887a9fc 100644
--- a/src/ap/neighbor_db.c
+++ b/src/ap/neighbor_db.c
@@ -415,6 +415,19 @@ static bool hostapd_find_own_bss_neighbor_report(struct hostapd_data *hapd, u8 *
 	return os_memcmp(pos, hapd->own_addr, ETH_ALEN) == 0;
 }
 
+static bool hostapd_neighbor_pref_set(u8 *pos, size_t len, const u8 pref)
+{
+	struct element *subelem =
+		(struct element *) get_ie(pos, len,
+					  WNM_NEIGHBOR_BSS_TRANSITION_CANDIDATE);
+	if (subelem) {
+		subelem->data[0] = pref;
+		return true;
+	}
+
+	return false;
+}
+
 void hostapd_neighbor_set_own_report_pref(struct hostapd_data *hapd, u8 *nei_buf,
 					  size_t nei_len, const u8 pref)
 {
@@ -428,15 +441,10 @@ void hostapd_neighbor_set_own_report_pref(struct hostapd_data *hapd, u8 *nei_buf
 		if (nei_len < elem_len)
 			break;
 
-		if (hostapd_find_own_bss_neighbor_report(hapd, nr->bssid)) {
-			size_t subelem_len = nei_buf + elem_len - nr->variable;
-			struct element *subelem =
-				(struct element *) get_ie(nr->variable, subelem_len,
-							  WNM_NEIGHBOR_BSS_TRANSITION_CANDIDATE);
-
-			if (subelem)
-				subelem->data[0] = pref;
-		}
+		if (hostapd_find_own_bss_neighbor_report(hapd, nr->bssid))
+			hostapd_neighbor_pref_set(nr->variable,
+						  nei_buf + elem_len - nr->variable,
+						  pref);
 
 		nei_buf += elem_len;
 		nei_len -= elem_len;
@@ -444,52 +452,38 @@ void hostapd_neighbor_set_own_report_pref(struct hostapd_data *hapd, u8 *nei_buf
 }
 
 #ifdef CONFIG_MBO
-void hostapd_neighbor_set_pref_by_non_pref_chan(struct hostapd_data *hapd,
-			 struct sta_info* sta, char *nei_buf, size_t buflen)
+void hostapd_neighbor_set_pref_by_non_pref_chan(struct hostapd_data *hapd, struct sta_info* sta,
+						u8 *nei_buf, size_t nei_len)
 {
-	struct hostapd_neighbor_entry *nr;
+	struct neighbor_report_element *nr;
 	struct mbo_non_pref_chan_info *info;
-	u8 i;
-
-	for(info = sta->non_pref_chan; info; info = info->next) {
-		/* Check OP_Class and Channel num */
-		for(i = 0; i < info->num_channels; i++) {
-			char *pos, *next_nr;
-
-			pos = nei_buf;
-			next_nr = nei_buf;
-
-			/* Iterate Neighbor report database */
-			dl_list_for_each(nr, &hapd->nr_db, struct hostapd_neighbor_entry,
-					 list) {
-				pos = next_nr;
-				next_nr = pos + 2 + wpabuf_len(nr->nr);
-				/**
-				 * Shift 12 bytes for Element ID, Neighbor report length,
-				 * BSSID and BSSID info.
-				 */
-				pos = pos + 12;
-				int nr_op_class = *pos++;
-				int nr_channel = *pos;
-				if(info->op_class == nr_op_class && info->channels[i] == nr_channel) {
-					/* Shift for Channel Num + PHY type */
-					pos = pos + 1 + 1;
-
-					// Iterate Subelement
-					while(next_nr - pos > 0) {
-						if(*pos == 3) {
-							pos = pos + 2;
-							*pos = info->pref;
-							break;
-						}else {
-							pos++;
-							int shift_len = *pos++;
-							pos = pos + shift_len;
-						}
-					}
-				}
+	size_t elem_len, i;
+
+	while (nei_len >= 2) {
+		nr = (struct neighbor_report_element *) nei_buf;
+		elem_len = nr->len + 2;
+
+		if (nei_len < elem_len)
+			break;
+
+		for (info = sta->non_pref_chan; info; info = info->next) {
+			if (nr->op_class != info->op_class)
+				continue;
+
+			for (i = 0; i < info->num_channels; i++) {
+				if (nr->channel != info->channels[i])
+					continue;
+
+				if (hostapd_neighbor_pref_set(nr->variable,
+							      nei_buf + elem_len - nr->variable,
+							      info->pref))
+					goto next_nr;
 			}
 		}
+
+next_nr:
+		nei_buf += elem_len;
+		nei_len -= elem_len;
 	}
 }
 #endif
diff --git a/src/ap/neighbor_db.h b/src/ap/neighbor_db.h
index 87bec2597..a1991b6ac 100644
--- a/src/ap/neighbor_db.h
+++ b/src/ap/neighbor_db.h
@@ -31,7 +31,7 @@ int hostapd_neighbor_insert_buffer(struct hostapd_data *hapd, char *buf,
 void hostapd_neighbor_set_own_report_pref(struct hostapd_data *hapd, u8 *nei_buf,
 					  size_t buflen, const u8 pref);
 #ifdef CONFIG_MBO
-void hostapd_neighbor_set_pref_by_non_pref_chan(struct hostapd_data *hapd,
-			 struct sta_info* sta, char *nei_buf, size_t buflen);
+void hostapd_neighbor_set_pref_by_non_pref_chan(struct hostapd_data *hapd, struct sta_info* sta,
+						u8 *nei_buf, size_t buflen);
 #endif
 #endif /* NEIGHBOR_DB_H */
-- 
2.45.2

