From f43c182f888aaac8c85d7db9c49aaf51aa46ad2b Mon Sep 17 00:00:00 2001
From: Allen Ye <allen.ye@mediatek.com>
Date: Mon, 20 May 2024 17:29:36 +0800
Subject: [PATCH 098/149] mtk: hostapd: Temporary non-inheritance IE solution

Remove MBSSID IE and FILS indication IE in per-STA profile
The patch append non-inheritance IE in per-STA profile of a ML IE.
To add new IE in non-inheritance IE, just append the tag to IE list.

Fix the EHT-4.6.1_RUN1_ITER2 (2G+5G) BRCM assoc issue.
Without this patch, if the AP is an AP MLD 2G+5G (with 5G as the Setup link), the BRCM station will only connect to the AP using one link (i.e., the per-station profile count in the Association request is 0).

Note: Regardless of whether this patch is applied, EHT-4.6.1_RUN1_ITER1 (2G+5G, with 2G as the setup link) can pass.

Signed-off-by: Allen Ye <allen.ye@mediatek.com>
Signed-off-by: MeiChia Chiu <MeiChia.Chiu@mediatek.com>
---
 src/ap/beacon.c         |  1 +
 src/ap/ieee802_11.c     |  2 ++
 src/ap/ieee802_11.h     |  2 ++
 src/ap/ieee802_11_eht.c | 68 ++++++++++++++++++++++++++++++++++++++++-
 4 files changed, 72 insertions(+), 1 deletion(-)

diff --git a/src/ap/beacon.c b/src/ap/beacon.c
index 3335f5b74..fdc86b7b0 100644
--- a/src/ap/beacon.c
+++ b/src/ap/beacon.c
@@ -2898,6 +2898,7 @@ static bool is_restricted_eid_in_sta_profile(u8 eid, bool tx_vap)
 	case WLAN_EID_MULTIPLE_BSSID:
 	case WLAN_EID_REDUCED_NEIGHBOR_REPORT:
 	case WLAN_EID_NEIGHBOR_REPORT:
+	case WLAN_EID_FILS_INDICATION:
 		return true;
 	case WLAN_EID_SSID:
 		/* SSID is not restricted for non-transmitted BSSID */
diff --git a/src/ap/ieee802_11.c b/src/ap/ieee802_11.c
index 5c586f94f..e20d3648b 100644
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -4548,6 +4548,8 @@ static void ieee80211_ml_build_assoc_resp(struct hostapd_data *hapd,
 	p = hostapd_eid_mbo(hapd, p, buf + buflen - p);
 	p = hostapd_eid_wmm(hapd, p);
 
+	p = hostapd_eid_non_inheritance(hapd, p);
+
 	if (hapd->conf->assocresp_elements &&
 	    (size_t) (buf + buflen - p) >=
 	    wpabuf_len(hapd->conf->assocresp_elements)) {
diff --git a/src/ap/ieee802_11.h b/src/ap/ieee802_11.h
index 34943fa78..33331e984 100644
--- a/src/ap/ieee802_11.h
+++ b/src/ap/ieee802_11.h
@@ -239,6 +239,7 @@ size_t hostapd_eid_eht_capab_len(struct hostapd_data *hapd,
 				 enum ieee80211_op_mode opmode);
 u8 * hostapd_eid_eht_capab(struct hostapd_data *hapd, u8 *eid,
 			   enum ieee80211_op_mode opmode);
+u8 * hostapd_eid_non_inheritance(struct hostapd_data *hapd, u8 *eid);
 u8 * hostapd_eid_eht_operation(struct hostapd_data *hapd, u8 *eid);
 u16 copy_sta_eht_capab(struct hostapd_data *hapd, struct sta_info *sta,
 		       enum ieee80211_op_mode opmode,
@@ -252,6 +253,7 @@ u8 * hostapd_eid_mbssid(struct hostapd_data *hapd, u8 *eid, u8 *end,
 			u8 **elem_offset,
 			const u8 *known_bss, size_t known_bss_len, u8 *rnr_eid,
 			u8 *rnr_count, u8 **rnr_offset, size_t rnr_len);
+size_t hostapd_eid_non_inheritance_len(struct hostapd_data *hapd);
 bool hostapd_is_mld_ap(struct hostapd_data *hapd);
 const char * sae_get_password(struct hostapd_data *hapd,
 			      struct sta_info *sta, const char *rx_id,
diff --git a/src/ap/ieee802_11_eht.c b/src/ap/ieee802_11_eht.c
index 681671cd9..418e6f49a 100644
--- a/src/ap/ieee802_11_eht.c
+++ b/src/ap/ieee802_11_eht.c
@@ -131,7 +131,6 @@ size_t hostapd_eid_eht_capab_len(struct hostapd_data *hapd,
 	return len;
 }
 
-
 u8 * hostapd_eid_eht_capab(struct hostapd_data *hapd, u8 *eid,
 			   enum ieee80211_op_mode opmode)
 {
@@ -284,7 +283,74 @@ u8 * hostapd_eid_eht_operation(struct hostapd_data *hapd, u8 *eid)
 	return pos + elen;
 }
 
+u8 mlo_non_inherit_list_6ghz[] = {
+	WLAN_EID_AP_CHANNEL_REPORT,
+	WLAN_EID_HT_CAP,
+	WLAN_EID_HT_OPERATION,
+	WLAN_EID_VHT_CAP,
+	WLAN_EID_VHT_OPERATION,
+};
+
+u8 mlo_non_inherit_list_6ghz_ext[] = {
+};
+
+u8 mlo_non_inherit_list_2_5ghz[] = {
+	WLAN_EID_VHT_CAP,
+	WLAN_EID_VHT_OPERATION,
+	WLAN_EID_TRANSMIT_POWER_ENVELOPE,
+};
+
+u8 mlo_non_inherit_list_2_5ghz_ext[] = {
+	WLAN_EID_EXT_HE_6GHZ_BAND_CAP,
+};
+
+size_t hostapd_eid_non_inheritance_len(struct hostapd_data *hapd)
+{
+	size_t len = 4;
 
+	if (is_6ghz_op_class(hapd->iconf->op_class)) {
+		len += sizeof(mlo_non_inherit_list_6ghz);
+		len += sizeof(mlo_non_inherit_list_6ghz_ext);
+	} else {
+		len += sizeof(mlo_non_inherit_list_2_5ghz);
+		len += sizeof(mlo_non_inherit_list_2_5ghz_ext);
+	}
+
+	return len;
+}
+
+u8 * hostapd_eid_non_inheritance(struct hostapd_data *hapd, u8 *eid)
+{
+	u8 *pos = eid, *len_pos;
+	int i;
+
+	*pos++ = WLAN_EID_EXTENSION;
+	len_pos = pos++;
+	*pos++ = WLAN_EID_EXT_NON_INHERITANCE;
+	if (is_6ghz_op_class(hapd->iconf->op_class)) {
+		/* Element ID list */
+		*pos++ = sizeof(mlo_non_inherit_list_6ghz);
+		for (i = 0; i < sizeof(mlo_non_inherit_list_6ghz); i++)
+			*pos++ = mlo_non_inherit_list_6ghz[i];
+
+		/* Element ID Extension list */
+		*pos++ = sizeof(mlo_non_inherit_list_6ghz_ext);
+		for (i = 0; i < sizeof(mlo_non_inherit_list_6ghz_ext); i++)
+			*pos++ = mlo_non_inherit_list_6ghz_ext[i];
+	} else {
+		/* Element ID list */
+		*pos++ = sizeof(mlo_non_inherit_list_2_5ghz);
+		for (i = 0; i < sizeof(mlo_non_inherit_list_2_5ghz); i++)
+			*pos++ = mlo_non_inherit_list_2_5ghz[i];
+
+		/* Element ID Extension list */
+		*pos++ = sizeof(mlo_non_inherit_list_2_5ghz_ext);
+		for (i = 0; i < sizeof(mlo_non_inherit_list_2_5ghz_ext); i++)
+			*pos++ = mlo_non_inherit_list_2_5ghz_ext[i];
+	}
+	*len_pos = pos - (eid + 2);
+	return pos;
+}
 static bool check_valid_eht_mcs_nss(struct hostapd_data *hapd, const u8 *ap_mcs,
 				    const u8 *sta_mcs, u8 mcs_count, u8 map_len)
 {
-- 
2.45.2

