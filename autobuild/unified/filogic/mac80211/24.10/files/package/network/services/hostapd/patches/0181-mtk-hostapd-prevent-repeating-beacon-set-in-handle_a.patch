From 95b07fcd012e226912edf6d42af726c8b8d378bd Mon Sep 17 00:00:00 2001
From: Michael-CY Lee <michael-cy.lee@mediatek.com>
Date: Mon, 31 Mar 2025 16:51:28 +0800
Subject: [PATCH 181/206] mtk: hostapd: prevent repeating beacon set in
 handle_assoc()

The beacon might need update when handling association request (ex.
updating HT operation), which might also need beacon update for MLD
partner link(s).

The original function call led to repeating unnecessary beacon set
when handling association request and delay of association response.

This change makes sure that there is only one beacon update for each
hapd from each hostapd_iface.

Signed-off-by: Michael-CY Lee <michael-cy.lee@mediatek.com>

Prevent redundant Beacon setting for non-setup links.

Signed-off-by: Benjamin Lin <benjamin-jw.lin@mediatek.com>
---
 src/ap/ieee802_11.c | 17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

diff --git a/src/ap/ieee802_11.c b/src/ap/ieee802_11.c
index 34b2729d2..377442c50 100644
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -4982,8 +4982,12 @@ static int ieee80211_ml_process_link(struct hostapd_data *hapd,
 		hapd->sta_aid[(sta->aid - 1) / 32] |= BIT((sta->aid - 1) % 32);
 		sta->listen_interval = origin_sta->listen_interval;
 		if (!is_6ghz_op_class(hapd->iconf->op_class) &&
-		    update_ht_state(hapd, sta) > 0)
-			ieee802_11_update_beacons(hapd->iface);
+		    update_ht_state(hapd, sta) > 0) {
+			struct hapd_interfaces *ifaces = hapd->iface->interfaces;
+
+			for (i = 0; i < ifaces->count; i++)
+				ieee802_11_set_beacon_per_iface_only(ifaces->iface[i]);
+		}
 	}
 
 	/* Maintain state machine reference on all link STAs, this is needed
@@ -6148,8 +6152,13 @@ static void handle_assoc(struct hostapd_data *hapd,
 	}
 #endif /* CONFIG_FILS */
 
-	if (set_beacon)
-		ieee802_11_update_beacons(hapd->iface);
+	if (set_beacon) {
+		struct hapd_interfaces *ifaces = hapd->iface->interfaces;
+		int j;
+
+		for (j = 0; j < ifaces->count; j++)
+			ieee802_11_set_beacon_per_iface_only(ifaces->iface[j]);
+	}
 
 	ubus_resp = hostapd_ubus_handle_event(hapd, &req);
 	if (ubus_resp) {
-- 
2.45.2

