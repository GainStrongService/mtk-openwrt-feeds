From 57dafa0b3348c1b2e246890ac04e96ede2fde94b Mon Sep 17 00:00:00 2001
From: Michael-CY Lee <michael-cy.lee@mediatek.com>
Date: Thu, 22 Aug 2024 17:35:57 +0800
Subject: [PATCH 125/149] mtk: hostapd: remove the STA when receiving AUTH from
 associated STA MLD

An AP MLD might receive AUTH from an associated STA MLD by following
reasons:
1. DEAUTH from the STA MLD was dropped.
2. The STA MLD does not send DEAUTH before disconnection by reasons like
   power loss.

The STA MLD can not succefully re-connect to the AP MLD if the previous
DEAUTH is not handled by the AP MLD and therefore AP stll think the
connection exists.

This commit lets MLD AP remove the MLD STA when receiving the AUTH from
it, so that the next AUTH can be successfully handles.

Signed-off-by: Michael-CY Lee <michael-cy.lee@mediatek.com>
---
 src/ap/ieee802_11.c | 28 ++++++++++++++++++++++++++--
 1 file changed, 26 insertions(+), 2 deletions(-)

diff --git a/src/ap/ieee802_11.c b/src/ap/ieee802_11.c
index b29d4d983..f9b2086c1 100644
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -93,6 +93,10 @@ static void handle_auth(struct hostapd_data *hapd,
 			int rssi, int from_queue);
 static int add_associated_sta(struct hostapd_data *hapd,
 			      struct sta_info *sta, int reassoc);
+static bool hostapd_ml_handle_disconnect(struct hostapd_data *hapd,
+					 struct sta_info *sta,
+					 const struct ieee80211_mgmt *mgmt,
+					 bool disassoc);
 
 
 static u8 * hostapd_eid_multi_ap(struct hostapd_data *hapd, u8 *eid, size_t len)
@@ -3190,6 +3194,18 @@ static void handle_auth(struct hostapd_data *hapd,
 			return;
 		}
 #endif /* CONFIG_PASN */
+#ifdef CONFIG_IEEE80211BE
+		if (mld_sta && auth_transaction == 1 && !sta->added_unassoc) {
+			wpa_printf(MSG_INFO,
+				   "recveive AUTH from associated STA "MACSTR
+				   ", do deauthentication\n",
+				   MAC2STR(sa));
+			hostapd_ml_handle_disconnect(hapd, sta, mgmt, false);
+			hostapd_drv_sta_remove(hapd, sa);
+			resp = WLAN_STATUS_UNSPECIFIED_FAILURE;
+			goto fail;
+		}
+#endif /* CONFIG_IEEE80211BE */
 	} else {
 #ifdef CONFIG_MESH
 		if (hapd->conf->mesh & MESH_ENABLED) {
@@ -5888,9 +5904,17 @@ static void hostapd_deauth_sta(struct hostapd_data *hapd,
 			       struct sta_info *sta,
 			       const struct ieee80211_mgmt *mgmt)
 {
+
+	u16 fc, reason;
+
+	fc = le_to_host16(mgmt->frame_control);
+	reason = WLAN_FC_GET_STYPE(fc) == WLAN_FC_STYPE_DEAUTH ?
+		 le_to_host16(mgmt->u.deauth.reason_code) :
+		 WLAN_REASON_PREV_AUTH_NOT_VALID;
+
 	wpa_msg(hapd->msg_ctx, MSG_DEBUG,
 		"deauthentication: STA=" MACSTR " reason_code=%d",
-		MAC2STR(mgmt->sa), le_to_host16(mgmt->u.deauth.reason_code));
+		MAC2STR(mgmt->sa), reason);
 
 	ap_sta_set_authorized(hapd, sta, 0);
 	sta->last_seq_ctrl = WLAN_INVALID_MGMT_SEQ;
@@ -5901,7 +5925,7 @@ static void hostapd_deauth_sta(struct hostapd_data *hapd,
 	hostapd_logger(hapd, sta->addr, HOSTAPD_MODULE_IEEE80211,
 		       HOSTAPD_LEVEL_DEBUG, "deauthenticated");
 	mlme_deauthenticate_indication(
-		hapd, sta, le_to_host16(mgmt->u.deauth.reason_code));
+		hapd, sta, reason);
 	sta->acct_terminate_cause = RADIUS_ACCT_TERMINATE_CAUSE_USER_REQUEST;
 	ieee802_1x_notify_port_enabled(sta->eapol_sm, 0);
 	ap_free_sta(hapd, sta);
-- 
2.45.2

