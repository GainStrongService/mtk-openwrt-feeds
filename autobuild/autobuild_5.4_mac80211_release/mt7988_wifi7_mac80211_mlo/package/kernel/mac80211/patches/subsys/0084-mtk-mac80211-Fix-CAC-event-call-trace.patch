From 37bbf1ae1e4065e992830a93f7fd49857ff5e73d Mon Sep 17 00:00:00 2001
From: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
Date: Wed, 30 Oct 2024 10:49:44 +0800
Subject: [PATCH 84/87] mtk: mac80211: Fix CAC event call trace

A CAC abort event call trace will occur when deleting the interface
during bootup CAC.
In cfg80211_remove_link, cfg80211_stop_ap will be called to stop the AP,
then the CAC link will be cleared in wdev->valid_links,
and finally ieee80211_link_stop will be called to free the
link-related data.
For cases of deleting the interface during 'runtime' CAC, the CAC abort
event will be handled in cfg80211_stop_ap.
However, for bootup CAC, since the beacon of the link has not been set yet, cfg80211_stop_ap will directly return.
Therefore, the CAC abort event should be handled in ieee80211_link_stop.
When the CAC abort event is handled in ieee80211_link_stop, since the
CAC link is already cleared in wdev->valid_links, the valid_link check
in cfg80211_cac_event will not pass, resulting in a WARN ON and leaving
the cac_started flag set.
To prevent this situation, this patch allows bypassing the valid_link
check for CAC abortion.
The following code flow of cfg80211_cac_event for CAC abortion works
fine when the wdev->valid_link of the CAC abort link truly does not exist.

Signed-off-by: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
---
 net/wireless/mlme.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/net/wireless/mlme.c b/net/wireless/mlme.c
index d53ff8e1..af99bc32 100644
--- a/net/wireless/mlme.c
+++ b/net/wireless/mlme.c
@@ -1118,7 +1118,8 @@ void cfg80211_cac_event(struct net_device *netdev,
 	struct cfg80211_registered_device *rdev = wiphy_to_rdev(wiphy);
 	unsigned long timeout;
 
-	if (WARN_ON(wdev->valid_links &&
+	if (WARN_ON(event != NL80211_RADAR_CAC_ABORTED &&
+		    wdev->valid_links &&
 		    !(wdev->valid_links & BIT(link_id))))
 		return;
 
-- 
2.45.2

