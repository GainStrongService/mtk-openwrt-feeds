From 381ba4fe46bc15c4951332ece20c9f4d2991bdf7 Mon Sep 17 00:00:00 2001
From: Howard Hsu <howard-yh.hsu@mediatek.com>
Date: Thu, 15 Aug 2024 14:06:20 +0800
Subject: [PATCH 76/87] mtk: mac80211: fix ieee80211_mgmt_tx

Without this commit, sending an action frame will unexpectedly trigger
remain on channel. When determining which link to send the management
frame to, compare the SA of the management frame with the MLD address
first. If the SA of the management frame is not the MLD address, then
proceed to determine which link address to use.

Signed-off-by: Howard Hsu <howard-yh.hsu@mediatek.com>
---
 net/mac80211/offchannel.c | 68 ++++++++++++++++++++++++---------------
 1 file changed, 42 insertions(+), 26 deletions(-)

diff --git a/net/mac80211/offchannel.c b/net/mac80211/offchannel.c
index 8d4654df..b23d4513 100644
--- a/net/mac80211/offchannel.c
+++ b/net/mac80211/offchannel.c
@@ -909,41 +909,57 @@ int ieee80211_mgmt_tx(struct wiphy *wiphy, struct wireless_dev *wdev,
 	} else if (!need_offchan && !(ieee80211_vif_is_mld(&sdata->vif) &&
 		   is_multicast_ether_addr(mgmt->da))) {
 		struct ieee80211_chanctx_conf *chanctx_conf = NULL;
-		int i;
+		struct ieee80211_bss_conf *conf;
+		unsigned int link;
 
 		rcu_read_lock();
-		/* Check all the links first */
-		for (i = 0; i < ARRAY_SIZE(sdata->vif.link_conf); i++) {
-			struct ieee80211_bss_conf *conf;
 
-			conf = rcu_dereference(sdata->vif.link_conf[i]);
-			if (!conf)
-				continue;
+		if (ieee80211_vif_is_mld(&sdata->vif) && mlo_sta &&
+		    ether_addr_equal(sdata->vif.addr, mgmt->sa)) {
+			unsigned long links = sdata->vif.active_links;
 
-			chanctx_conf = rcu_dereference(conf->chanctx_conf);
-			if (!chanctx_conf)
-				continue;
+			for_each_set_bit(link, &links, IEEE80211_MLD_MAX_NUM_LINKS) {
+				conf = rcu_dereference(sdata->vif.link_conf[link]);
+				if (!conf)
+					continue;
 
-			if (mlo_sta && params->chan == chanctx_conf->def.chan &&
-			    ether_addr_equal(sdata->vif.addr, mgmt->sa)) {
-				link_id = i;
-				break;
-			}
+				chanctx_conf = rcu_dereference(conf->chanctx_conf);
+				if (!chanctx_conf)
+					continue;
 
-			if (ether_addr_equal(conf->addr, mgmt->sa)) {
-				/* If userspace requested Tx on a specific link
-				 * use the same link id if the link bss is matching
-				 * the requested chan.
-				 */
-				if (sdata->vif.valid_links &&
-				    params->link_id >= 0 && params->link_id == i &&
-				    params->chan == chanctx_conf->def.chan)
-					link_id = i;
+				if (params->chan == chanctx_conf->def.chan) {
+					link_id = link;
+					break;
+				}
 
-				break;
+				chanctx_conf = NULL;
 			}
+		} else {
+			for (link = 0; link < ARRAY_SIZE(sdata->vif.link_conf); link++) {
+				conf = rcu_dereference(sdata->vif.link_conf[link]);
+				if (!conf)
+					continue;
+
+				chanctx_conf = rcu_dereference(conf->chanctx_conf);
+				if (!chanctx_conf)
+					continue;
+
+				if (ether_addr_equal(conf->addr, mgmt->sa)) {
+					/* If userspace requested Tx on a specific link
+					 * use the same link id if the link bss is matching
+					 * the requested chan.
+					 */
+					if (sdata->vif.valid_links &&
+					    params->link_id >= 0 &&
+					    params->link_id == link &&
+					    params->chan == chanctx_conf->def.chan)
+						link_id = link;
+
+					break;
+				}
 
-			chanctx_conf = NULL;
+				chanctx_conf = NULL;
+			}
 		}
 
 		if (chanctx_conf) {
-- 
2.45.2

