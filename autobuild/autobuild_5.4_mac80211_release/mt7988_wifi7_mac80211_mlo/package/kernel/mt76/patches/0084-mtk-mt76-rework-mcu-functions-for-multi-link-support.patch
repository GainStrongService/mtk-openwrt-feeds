From eaf00f41db3bda462d62795fd569771216d2a77c Mon Sep 17 00:00:00 2001
From: Shayne Chen <shayne.chen@mediatek.com>
Date: Thu, 7 Dec 2023 15:39:03 +0800
Subject: [PATCH 084/146] mtk: mt76: rework mcu functions for multi-link
 support

This is a preliminary patch to add MLO support for mt7996 chipsets.

mtk: mt76: mt7996: fix stop_tx_ba_session warning

mtk: mt76: mt7996: support per-link report of bss color change

ieee80211_color_change_finish() has been extended for per-link support.

Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
---
 mt76_connac_mcu.c | 10 ++---
 mt76_connac_mcu.h |  2 +-
 mt7996/main.c     | 11 ++++--
 mt7996/mcu.c      | 93 +++++++++++++++++++++++++++++++++++------------
 4 files changed, 83 insertions(+), 33 deletions(-)

diff --git a/mt76_connac_mcu.c b/mt76_connac_mcu.c
index 41e94fef..0979f39d 100644
--- a/mt76_connac_mcu.c
+++ b/mt76_connac_mcu.c
@@ -369,10 +369,11 @@ void mt76_connac_mcu_bss_omac_tlv(struct sk_buff *skb,
 EXPORT_SYMBOL_GPL(mt76_connac_mcu_bss_omac_tlv);
 
 void mt76_connac_mcu_sta_basic_tlv(struct mt76_dev *dev, struct sk_buff *skb,
-				   struct ieee80211_vif *vif,
+				   struct ieee80211_bss_conf *conf,
 				   struct ieee80211_link_sta *link_sta,
 				   int conn_state, bool newly)
 {
+	struct ieee80211_vif *vif = conf->vif;
 	struct sta_rec_basic *basic;
 	struct tlv *tlv;
 	int conn_type;
@@ -388,10 +389,9 @@ void mt76_connac_mcu_sta_basic_tlv(struct mt76_dev *dev, struct sk_buff *skb,
 
 	if (!link_sta) {
 		basic->conn_type = cpu_to_le32(CONNECTION_INFRA_BC);
-
 		if (vif->type == NL80211_IFTYPE_STATION &&
-		    !is_zero_ether_addr(vif->bss_conf.bssid)) {
-			memcpy(basic->peer_addr, vif->bss_conf.bssid, ETH_ALEN);
+		    conf && !is_zero_ether_addr(conf->bssid)) {
+			memcpy(basic->peer_addr, conf->bssid, ETH_ALEN);
 			basic->aid = cpu_to_le16(vif->cfg.aid);
 		} else {
 			eth_broadcast_addr(basic->peer_addr);
@@ -1057,7 +1057,7 @@ int mt76_connac_mcu_sta_cmd(struct mt76_phy *phy,
 				    CONN_STATE_DISCONNECT;
 	link_sta = info->sta ? &info->sta->deflink : NULL;
 	if (info->sta || !info->offload_fw)
-		mt76_connac_mcu_sta_basic_tlv(dev, skb, info->vif,
+		mt76_connac_mcu_sta_basic_tlv(dev, skb, &info->vif->bss_conf,
 					      link_sta, conn_state,
 					      info->newly);
 	if (info->sta && info->enable)
diff --git a/mt76_connac_mcu.h b/mt76_connac_mcu.h
index 11a1224a..ff8a314c 100644
--- a/mt76_connac_mcu.h
+++ b/mt76_connac_mcu.h
@@ -1928,7 +1928,7 @@ mt76_connac_mcu_add_tlv(struct sk_buff *skb, int tag, int len)
 int mt76_connac_mcu_set_channel_domain(struct mt76_phy *phy);
 int mt76_connac_mcu_set_vif_ps(struct mt76_dev *dev, struct ieee80211_vif *vif);
 void mt76_connac_mcu_sta_basic_tlv(struct mt76_dev *dev, struct sk_buff *skb,
-				   struct ieee80211_vif *vif,
+				   struct ieee80211_bss_conf *conf,
 				   struct ieee80211_link_sta *link_sta,
 				   int state, bool newly);
 void mt76_connac_mcu_wtbl_generic_tlv(struct mt76_dev *dev, struct sk_buff *skb,
diff --git a/mt7996/main.c b/mt7996/main.c
index ee3ff921..f5ec25bf 100644
--- a/mt7996/main.c
+++ b/mt7996/main.c
@@ -993,7 +993,8 @@ static void mt7996_remove_link_sta(struct mt7996_dev *dev,
 				   struct ieee80211_bss_conf *conf,
 				   struct mt7996_bss_conf *mconf,
 				   struct ieee80211_link_sta *link_sta,
-				   struct mt7996_link_sta *mlink)
+				   struct mt7996_link_sta *mlink,
+				   bool last_link)
 {
 	struct ieee80211_sta *sta = link_sta->sta;
 	struct mt7996_sta *msta = (struct mt7996_sta *)sta->drv_priv;
@@ -1005,7 +1006,7 @@ static void mt7996_remove_link_sta(struct mt7996_dev *dev,
 	for (i = 0; i < ARRAY_SIZE(mlink->wcid.aggr); i++)
 			mt76_rx_aggr_stop(&dev->mt76, &mlink->wcid, i);
 
-	if (sta->mlo)
+	if (sta->mlo && last_link)
 		mt7996_mcu_teardown_mld_sta(dev, mconf, mlink);
 	else
 		mt7996_mcu_add_sta(dev, conf, mconf, link_sta, mlink, false, false);
@@ -1117,7 +1118,8 @@ static int mt7996_add_link_sta(struct mt7996_dev *dev,
 
 	return 0;
 error:
-	mt7996_remove_link_sta(dev, conf, mconf, link_sta, mlink);
+	mt7996_remove_link_sta(dev, conf, mconf, link_sta, mlink,
+			       hweight16(sta->valid_links) <= 1);
 	return ret;
 }
 
@@ -1138,8 +1140,9 @@ mt7996_mac_sta_remove_links(struct mt7996_dev *dev, struct ieee80211_vif *vif,
 			link_conf_dereference_protected(vif, link_id);
 		struct ieee80211_link_sta *link_sta =
 			link_sta_dereference_protected(sta, link_id);
+		bool last_link = rem == sta->valid_links && link_id == __fls(rem);
 
-		mt7996_remove_link_sta(dev, conf, mconf, link_sta, mlink);
+		mt7996_remove_link_sta(dev, conf, mconf, link_sta, mlink, last_link);
 	}
 }
 
diff --git a/mt7996/mcu.c b/mt7996/mcu.c
index fbf7638b..9c2a4ced 100644
--- a/mt7996/mcu.c
+++ b/mt7996/mcu.c
@@ -444,10 +444,21 @@ out:
 static void
 mt7996_mcu_cca_finish(void *priv, u8 *mac, struct ieee80211_vif *vif)
 {
-	if (!vif->bss_conf.color_change_active || vif->type == NL80211_IFTYPE_STATION)
+	struct mt76_phy *mphy = (struct mt76_phy *)priv;
+	struct mt7996_vif *mvif = (struct mt7996_vif *)vif->drv_priv;
+	struct ieee80211_bss_conf *link_conf;
+	u8 link_id;
+
+	link_id = mvif->band_to_link[mphy->band_idx];
+	if (link_id == IEEE80211_LINK_UNSPECIFIED)
 		return;
 
-	ieee80211_color_change_finish(vif, 0);
+	link_conf = rcu_dereference(vif->link_conf[link_id]);
+	if (!link_conf || !link_conf->color_change_active ||
+	    vif->type == NL80211_IFTYPE_STATION)
+		return;
+
+	ieee80211_color_change_finish(vif, link_id);
 }
 
 static void
@@ -483,7 +494,7 @@ mt7996_mcu_ie_countdown(struct mt7996_dev *dev, struct sk_buff *skb)
 		case UNI_EVENT_IE_COUNTDOWN_BCC:
 			ieee80211_iterate_active_interfaces_atomic(mphy->hw,
 					IEEE80211_IFACE_ITER_RESUME_ALL,
-					mt7996_mcu_cca_finish, mphy->hw);
+					mt7996_mcu_cca_finish, mphy);
 			break;
 		}
 
@@ -1168,10 +1179,12 @@ mt7996_mcu_bss_basic_tlv(struct sk_buff *skb, struct ieee80211_bss_conf *conf,
 				sta = ieee80211_find_sta(vif, conf->bssid);
 			/* TODO: enable BSS_INFO_UAPSD & BSS_INFO_PM */
 			if (sta) {
-				struct mt76_wcid *wcid;
+				struct mt7996_sta *msta = (struct mt7996_sta *)sta->drv_priv;
+				struct mt7996_link_sta *mlink;
 
-				wcid = (struct mt76_wcid *)sta->drv_priv;
-				sta_wlan_idx = wcid->idx;
+				mlink = rcu_dereference(msta->link[conf->link_id]);
+				if (mlink)
+					sta_wlan_idx = mlink->wcid.idx;
 			}
 			rcu_read_unlock();
 		}
@@ -1305,9 +1318,8 @@ int mt7996_mcu_set_timing(struct mt7996_phy *phy, struct mt7996_bss_conf *mconf)
 static int
 mt7996_mcu_sta_ba(struct mt7996_dev *dev, struct mt76_vif *mvif,
 		  struct ieee80211_ampdu_params *params,
-		  bool enable, bool tx)
+		  struct mt76_wcid *wcid, bool enable, bool tx)
 {
-	struct mt76_wcid *wcid = (struct mt76_wcid *)params->sta->drv_priv;
 	struct sta_rec_ba_uni *ba;
 	struct sk_buff *skb;
 	struct tlv *tlv;
@@ -1337,24 +1349,59 @@ int mt7996_mcu_add_tx_ba(struct mt7996_dev *dev,
 			 struct ieee80211_ampdu_params *params,
 			 bool enable)
 {
-	struct mt7996_sta *msta = (struct mt7996_sta *)params->sta->drv_priv;
-	struct mt7996_bss_conf *mconf = mconf_dereference_protected(msta->vif, 0);
-	struct mt7996_link_sta *mlink = mlink_dereference_protected(msta, 0);
+	struct ieee80211_sta *sta = params->sta;
+	struct mt7996_sta *msta = (struct mt7996_sta *)sta->drv_priv;
+	unsigned long valid_links = sta->valid_links ?: BIT(0);
+	unsigned int link_id;
 
-	if (enable && !params->amsdu)
-		mlink->wcid.amsdu = false;
+	for_each_set_bit(link_id, &valid_links, IEEE80211_MLD_MAX_NUM_LINKS) {
+		struct mt7996_link_sta *mlink =
+			mlink_dereference_protected(msta, link_id);
+		struct mt7996_bss_conf *mconf =
+			mconf_dereference_protected(msta->vif, link_id);
+		int ret;
+
+		if (!mlink || !mconf)
+			continue;
 
-	return mt7996_mcu_sta_ba(dev, &mconf->mt76, params, enable, true);
+		if (enable && !params->amsdu)
+			mlink->wcid.amsdu = false;
+
+		ret = mt7996_mcu_sta_ba(dev, &mconf->mt76, params,
+					&mlink->wcid, enable, true);
+		if (ret)
+			return ret;
+	}
+
+	return 0;
 }
 
 int mt7996_mcu_add_rx_ba(struct mt7996_dev *dev,
 			 struct ieee80211_ampdu_params *params,
 			 bool enable)
 {
-	struct mt7996_sta *msta = (struct mt7996_sta *)params->sta->drv_priv;
-	struct mt7996_bss_conf *mconf = mconf_dereference_protected(msta->vif, 0);
+	struct ieee80211_sta *sta = params->sta;
+	struct mt7996_sta *msta = (struct mt7996_sta *)sta->drv_priv;
+	unsigned long valid_links = sta->valid_links ?: BIT(0);
+	unsigned int link_id;
+
+	for_each_set_bit(link_id, &valid_links, IEEE80211_MLD_MAX_NUM_LINKS) {
+		struct mt7996_link_sta *mlink =
+			mlink_dereference_protected(msta, link_id);
+		struct mt7996_bss_conf *mconf =
+			mconf_dereference_protected(msta->vif, link_id);
+		int ret;
+
+		if (!mlink || !mconf)
+			continue;
+
+		ret = mt7996_mcu_sta_ba(dev, &mconf->mt76, params, &mlink->wcid,
+					enable, false);
+		if (ret)
+			return ret;
+	}
 
-	return mt7996_mcu_sta_ba(dev, &mconf->mt76, params, enable, false);
+	return 0;
 }
 
 static void
@@ -2402,7 +2449,7 @@ int mt7996_mcu_add_sta(struct mt7996_dev *dev, struct ieee80211_bss_conf *conf,
 
 	/* starec basic */
 	conn_state = enable ? CONN_STATE_PORT_SECURE : CONN_STATE_DISCONNECT;
-	mt76_connac_mcu_sta_basic_tlv(&dev->mt76, skb, vif, link_sta,
+	mt76_connac_mcu_sta_basic_tlv(&dev->mt76, skb, conf, link_sta,
 				      conn_state, newly);
 
 	if (!enable)
@@ -2866,7 +2913,7 @@ int mt7996_mcu_add_beacon(struct ieee80211_hw *hw,
 			  struct mt7996_bss_conf *mconf, int en)
 {
 	struct mt7996_dev *dev = mt7996_hw_dev(hw);
-	struct mt7996_phy *phy = mt7996_hw_phy(hw);
+	struct mt7996_phy *phy = mconf->phy;
 	struct ieee80211_mutable_offsets offs;
 	struct ieee80211_tx_info *info;
 	struct sk_buff *skb, *rskb;
@@ -2882,7 +2929,7 @@ int mt7996_mcu_add_beacon(struct ieee80211_hw *hw,
 	if (IS_ERR(rskb))
 		return PTR_ERR(rskb);
 
-	skb = ieee80211_beacon_get_template(hw, conf->vif, &offs, 0);
+	skb = ieee80211_beacon_get_template(hw, conf->vif, &offs, conf->link_id);
 	if (en && !skb) {
 		dev_kfree_skb(rskb);
 		return -EINVAL;
@@ -2924,9 +2971,9 @@ int mt7996_mcu_beacon_inband_discov(struct mt7996_dev *dev,
 {
 #define OFFLOAD_TX_MODE_SU	BIT(0)
 #define OFFLOAD_TX_MODE_MU	BIT(1)
-	struct ieee80211_hw *hw = mt76_hw(dev);
 	struct ieee80211_vif *vif = conf->vif;
-	struct mt7996_phy *phy = mt7996_hw_phy(hw);
+	struct mt7996_vif *mvif = (struct mt7996_vif *)vif->drv_priv;
+	struct mt7996_phy *phy = mconf->phy;
 	struct cfg80211_chan_def *chandef = &mconf->phy->mt76->chandef;
 	enum nl80211_band band = chandef->chan->band;
 	struct mt76_wcid *wcid = &dev->mt76.global_wcid;
@@ -5365,7 +5412,7 @@ int mt7996_mcu_get_per_sta_info(struct mt76_dev *dev, u16 tag,
 				rssi[3] = to_rssi(MT_PRXV_RCPI0, rcpi[3]);
 
 				mlink = container_of(wcid, struct mt7996_link_sta, wcid);
-				phy = mlink->sta->vif->deflink.phy->mt76;
+				phy = dev->phys[wcid->phy_idx];
 				mlink->ack_signal = mt76_rx_signal(phy->antenna_mask, rssi);
 				ewma_avg_signal_add(&mlink->avg_ack_signal, -mlink->ack_signal);
 			}
-- 
2.45.2

