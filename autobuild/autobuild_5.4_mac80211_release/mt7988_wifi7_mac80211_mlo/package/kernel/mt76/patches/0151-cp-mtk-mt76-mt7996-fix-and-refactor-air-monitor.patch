From d6b4a43abdcc2279ed04384777bf0190c7b9fbc6 Mon Sep 17 00:00:00 2001
From: Peter Chiu <chui-hao.chiu@mediatek.com>
Date: Fri, 17 Jan 2025 16:02:16 +0800
Subject: [PATCH] mtk: mt76: mt7996: fix and refactor air monitor

CR-Id: WCNCR00240772
Signed-off-by: Peter Chiu <chui-hao.chiu@mediatek.com>
Change-Id: I10345093787c28c52ad68a647da33928242da35a
---
 mt7996/mt7996.h |   1 -
 mt7996/vendor.c | 129 +++++++++++++++++++++++++++++++-----------------
 mt7996/vendor.h |   1 +
 3 files changed, 84 insertions(+), 47 deletions(-)

diff --git a/mt7996/mt7996.h b/mt7996/mt7996.h
index ef4f2ba5..0ddd9757 100644
--- a/mt7996/mt7996.h
+++ b/mt7996/mt7996.h
@@ -550,7 +550,6 @@ struct mt7996_sta_rc_work_data {
 #define MT7996_AIR_MONITOR_MAX_GROUP	(MT7996_AIR_MONITOR_MAX_ENTRY >> 1)
 
 struct mt7996_air_monitor_group {
-	bool enable;
 	bool used[2];
 };
 
diff --git a/mt7996/vendor.c b/mt7996/vendor.c
index cb92a7d4..beaba999 100644
--- a/mt7996/vendor.c
+++ b/mt7996/vendor.c
@@ -43,6 +43,7 @@ static const struct nla_policy
 amnt_ctrl_policy[NUM_MTK_VENDOR_ATTRS_AMNT_CTRL] = {
 	[MTK_VENDOR_ATTR_AMNT_CTRL_SET] = {.type = NLA_NESTED },
 	[MTK_VENDOR_ATTR_AMNT_CTRL_DUMP] = { .type = NLA_NESTED },
+	[MTK_VENDOR_ATTR_AMNT_CTRL_LINK_ID] = { .type = NLA_U8 },
 };
 
 static const struct nla_policy
@@ -340,6 +341,9 @@ mt7996_vendor_smesh_ctrl(struct mt7996_phy *phy, u8 write,
 #define UNI_CMD_SMESH_PARAM  0
 	struct mt7996_dev *dev = phy->dev;
 	struct smesh_param {
+		u8 band;
+		u8 _rsv[3];
+
 		__le16 tag;
 		__le16 length;
 
@@ -351,6 +355,8 @@ mt7996_vendor_smesh_ctrl(struct mt7996_phy *phy, u8 write,
 		bool ctrl;
 		u8 padding[2];
 	} req = {
+		.band = phy->mt76->band_idx,
+
 		.tag = cpu_to_le16(UNI_CMD_SMESH_PARAM),
 		.length = cpu_to_le16(sizeof(req) - 4),
 
@@ -363,21 +369,22 @@ mt7996_vendor_smesh_ctrl(struct mt7996_phy *phy, u8 write,
 	};
 	struct smesh_param *res;
 	struct sk_buff *skb;
-	int ret = 0;
+	int ret;
+
+	if (write)
+		return mt76_mcu_send_msg(&dev->mt76, MCU_WM_UNI_CMD(CFG_SMESH),
+					 &req, sizeof(req), true);
 
 	if (!value)
 		return -EINVAL;
 
-	ret = mt76_mcu_send_and_get_msg(&dev->mt76, MCU_WM_UNI_CMD(CFG_SMESH),
-					&req, sizeof(req), !write, &skb);
-
-	if (ret || write)
+	ret = mt76_mcu_send_and_get_msg(&dev->mt76, MCU_WM_UNI_CMD_QUERY(CFG_SMESH),
+					&req, sizeof(req), true, &skb);
+	if (ret)
 		return ret;
 
 	res = (struct smesh_param *) skb->data;
-
 	*value = res->enable;
-
 	dev_kfree_skb(skb);
 
 	return 0;
@@ -389,6 +396,9 @@ mt7996_vendor_amnt_muar(struct mt7996_phy *phy, u8 muar_idx, u8 *addr)
 #define UNI_CMD_MUAR_ENTRY  2
 	struct mt7996_dev *dev = phy->dev;
 	struct muar_entry {
+		u8 band;
+		u8 rsv[3];
+
 		__le16 tag;
 		__le16 length;
 
@@ -399,11 +409,13 @@ mt7996_vendor_amnt_muar(struct mt7996_phy *phy, u8 muar_idx, u8 *addr)
 		u8 mac_addr[6];
 		u8 padding[2];
 	} __packed req = {
+		.band = phy->mt76->band_idx,
+
 		.tag = cpu_to_le16(UNI_CMD_MUAR_ENTRY),
 		.length = cpu_to_le16(sizeof(req) - 4),
 
 		.smesh = true,
-		.hw_bss_index = phy != &dev->phy,
+		.hw_bss_index = 0,
 		.muar_idx = muar_idx,
 		.entry_add = 1,
 	};
@@ -446,35 +458,29 @@ mt7996_vendor_amnt_set_addr(struct mt7996_phy *phy, u8 index, u8 *addr)
 
 	spin_lock_bh(&phy->amnt_lock);
 	entry = &amnt_ctrl->entry[index];
-	if (!is_zero_ether_addr(addr)) {
-		if (entry->enable == false) {
-			for (i = 0; i < MT7996_AIR_MONITOR_MAX_GROUP; i++) {
-				group = &(amnt_ctrl->group[i]);
-				if (group->used[0] == false)
-					j = 0;
-				else if (group->used[1] == false)
-					j = 1;
-				else
-					continue;
-
-				group->enable = true;
-				group->used[j] = true;
-				entry->enable = true;
-				entry->group_idx = i;
-				entry->group_used_idx = j;
-				entry->muar_idx = 32 + 4 * i + 2 * j;
-				break;
-			}
-		}
-	} else {
-		group = &(amnt_ctrl->group[entry->group_idx]);
 
+	if (is_zero_ether_addr(addr)) {
+		group = &(amnt_ctrl->group[entry->group_idx]);
 		group->used[entry->group_used_idx] = false;
-		if (group->used[0] == false && group->used[1] == false)
-			group->enable = false;
-
 		entry->enable = false;
+	} else if (!entry->enable) {
+		for (i = 0; i < MT7996_AIR_MONITOR_MAX_GROUP; i++) {
+			group = &(amnt_ctrl->group[i]);
+			if (!group->used[0])
+				j = 0;
+			else if (!group->used[1])
+				j = 1;
+			else
+				continue;
+
+			group->used[j] = entry->enable = true;
+			entry->group_idx = i;
+			entry->group_used_idx = j;
+			entry->muar_idx = 32 + 4 * i + 2 * j;
+			break;
+		}
 	}
+
 	ether_addr_copy(entry->addr, addr);
 	amnt_ctrl->enable &= ~(1 << entry->group_idx);
 	amnt_ctrl->enable |= entry->enable << entry->group_idx;
@@ -488,14 +494,16 @@ mt7996_vendor_amnt_set_addr(struct mt7996_phy *phy, u8 index, u8 *addr)
 }
 
 static int
-mt7966_vendor_amnt_ctrl(struct wiphy *wiphy, struct wireless_dev *wdev,
+mt7996_vendor_amnt_ctrl(struct wiphy *wiphy, struct wireless_dev *wdev,
 			const void *data, int data_len)
 {
-	struct ieee80211_hw *hw = wiphy_to_ieee80211_hw(wiphy);
-	struct mt7996_phy *phy = mt7996_hw_phy(hw);
+	struct ieee80211_vif *vif = wdev_to_ieee80211_vif(wdev);
+	struct mt7996_vif *mvif = (struct mt7996_vif *)vif->drv_priv;
+	struct mt7996_bss_conf *mconf;
+	struct mt7996_phy *phy;
 	struct nlattr *tb1[NUM_MTK_VENDOR_ATTRS_AMNT_CTRL];
 	struct nlattr *tb2[NUM_MTK_VENDOR_ATTRS_AMNT_SET];
-	u8 index = 0;
+	u8 index = 0, link_id = 0;
 	u8 mac_addr[ETH_ALEN];
 	int err;
 
@@ -504,7 +512,19 @@ mt7966_vendor_amnt_ctrl(struct wiphy *wiphy, struct wireless_dev *wdev,
 	if (err)
 		return err;
 
-	if (!tb1[MTK_VENDOR_ATTR_AMNT_CTRL_SET])
+	if (ieee80211_vif_is_mld(vif) && tb1[MTK_VENDOR_ATTR_AMNT_CTRL_LINK_ID]) {
+		link_id = nla_get_u8(tb1[MTK_VENDOR_ATTR_AMNT_CTRL_LINK_ID]);
+
+		if (link_id >= IEEE80211_LINK_UNSPECIFIED)
+			return -EINVAL;
+	}
+
+	rcu_read_lock();
+	mconf = rcu_dereference(mvif->link[link_id]);
+	phy = mconf ? mconf->phy : NULL;
+	rcu_read_unlock();
+
+	if (!phy || !tb1[MTK_VENDOR_ATTR_AMNT_CTRL_SET])
 		return -EINVAL;
 
 	err = nla_parse_nested(tb2, MTK_VENDOR_ATTR_AMNT_SET_MAX,
@@ -543,9 +563,12 @@ mt7996_amnt_dump(struct mt7996_phy *phy, struct sk_buff *skb,
 	struct mt7996_amnt_data data;
 	u32 last_seen = 0;
 
+	if (amnt_idx >= MT7996_AIR_MONITOR_MAX_ENTRY)
+		return 0;
+
 	spin_lock_bh(&phy->amnt_lock);
 	entry = &phy->amnt_ctrl.entry[amnt_idx];
-	if (entry->enable == 0) {
+	if (!entry->enable) {
 		spin_unlock_bh(&phy->amnt_lock);
 		return 0;
 	}
@@ -567,17 +590,19 @@ mt7996_amnt_dump(struct mt7996_phy *phy, struct sk_buff *skb,
 }
 
 static int
-mt7966_vendor_amnt_ctrl_dump(struct wiphy *wiphy, struct wireless_dev *wdev,
+mt7996_vendor_amnt_ctrl_dump(struct wiphy *wiphy, struct wireless_dev *wdev,
 			     struct sk_buff *skb, const void *data, int data_len,
 			     unsigned long *storage)
 {
-	struct ieee80211_hw *hw = wiphy_to_ieee80211_hw(wiphy);
-	struct mt7996_phy *phy = mt7996_hw_phy(hw);
+	struct ieee80211_vif *vif = wdev_to_ieee80211_vif(wdev);
+	struct mt7996_vif *mvif = (struct mt7996_vif *)vif->drv_priv;
+	struct mt7996_bss_conf *mconf;
+	struct mt7996_phy *phy;
 	struct nlattr *tb1[NUM_MTK_VENDOR_ATTRS_AMNT_CTRL];
 	struct nlattr *tb2[NUM_MTK_VENDOR_ATTRS_AMNT_DUMP];
 	void *a, *b;
 	int err = 0, attrtype = 0, i, len = 0;
-	u8 amnt_idx;
+	u8 amnt_idx, link_id = 0;
 
 	if (*storage == 1)
 		return -ENOENT;
@@ -588,7 +613,19 @@ mt7966_vendor_amnt_ctrl_dump(struct wiphy *wiphy, struct wireless_dev *wdev,
 	if (err)
 		return err;
 
-	if (!tb1[MTK_VENDOR_ATTR_AMNT_CTRL_DUMP])
+	if (ieee80211_vif_is_mld(vif) && tb1[MTK_VENDOR_ATTR_AMNT_CTRL_LINK_ID]) {
+		link_id = nla_get_u8(tb1[MTK_VENDOR_ATTR_AMNT_CTRL_LINK_ID]);
+
+		if (link_id >= IEEE80211_LINK_UNSPECIFIED)
+			return -EINVAL;
+	}
+
+	rcu_read_lock();
+	mconf = rcu_dereference(mvif->link[link_id]);
+	phy = mconf ? mconf->phy : NULL;
+	rcu_read_unlock();
+
+	if (!phy || !tb1[MTK_VENDOR_ATTR_AMNT_CTRL_DUMP])
 		return -EINVAL;
 
 	err = nla_parse_nested(tb2, MTK_VENDOR_ATTR_AMNT_DUMP_MAX,
@@ -1632,8 +1669,8 @@ static const struct wiphy_vendor_command mt7996_vendor_commands[] = {
 		},
 		.flags = WIPHY_VENDOR_CMD_NEED_NETDEV |
 			 WIPHY_VENDOR_CMD_NEED_RUNNING,
-		.doit = mt7966_vendor_amnt_ctrl,
-		.dumpit = mt7966_vendor_amnt_ctrl_dump,
+		.doit = mt7996_vendor_amnt_ctrl,
+		.dumpit = mt7996_vendor_amnt_ctrl_dump,
 		.policy = amnt_ctrl_policy,
 		.maxattr = MTK_VENDOR_ATTR_AMNT_CTRL_MAX,
 	},
diff --git a/mt7996/vendor.h b/mt7996/vendor.h
index ae3e9e20..ef0be419 100644
--- a/mt7996/vendor.h
+++ b/mt7996/vendor.h
@@ -159,6 +159,7 @@ enum mtk_vendor_attr_mnt_ctrl {
 
 	MTK_VENDOR_ATTR_AMNT_CTRL_SET,
 	MTK_VENDOR_ATTR_AMNT_CTRL_DUMP,
+	MTK_VENDOR_ATTR_AMNT_CTRL_LINK_ID,
 
 	/* keep last */
 	NUM_MTK_VENDOR_ATTRS_AMNT_CTRL,
-- 
2.45.2

