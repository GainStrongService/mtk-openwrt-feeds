From 37e4ee440ddb46e08b47651f2bf6bef52c67d21a Mon Sep 17 00:00:00 2001
From: Michael-CY Lee <michael-cy.lee@mediatek.com>
Date: Mon, 5 Aug 2024 14:55:10 +0800
Subject: [PATCH 122/146] mtk: mt76: mt7996: add Adv-TTLM support for STA

1. add the handling for valid_link and TTLM changing in vif_cfg_changed
   callback.
2. send peer-mld request for default mapping and Adv-TTLM. Neg-TTLM will
   be supported in further commit.

mtk: mt76: mt7996: ignore vif.dormant_links in mt7996_change_vif_links

The dormant links are disabled for reasons like TTLM, and might become
active in the near future, so we do not remove their bss_conf here.

mtk: mt76: mt7996: pass vif->cfg.assoc to mt7996_mac_sta_add_links

Link management functions might leverage mt7996_change_sta_links to
update sta's links, so the 'assoc' argument of mt7996_mac_sta_add_links()
should be dynamic decieded by vif->cfg.assoc.

Signed-off-by: Michael-CY Lee <michael-cy.lee@mediatek.com>
---
 mt76_connac_mcu.h |  1 +
 mt7996/main.c     | 10 ++++++--
 mt7996/mcu.c      | 64 +++++++++++++++++++++++++++++++++++++++++++++++
 mt7996/mcu.h      | 22 ++++++++++++++++
 mt7996/mt7996.h   |  2 ++
 5 files changed, 97 insertions(+), 2 deletions(-)

diff --git a/mt76_connac_mcu.h b/mt76_connac_mcu.h
index 69c8389f..68d7c31d 100644
--- a/mt76_connac_mcu.h
+++ b/mt76_connac_mcu.h
@@ -1327,6 +1327,7 @@ enum {
 	MCU_UNI_CMD_ASSERT_DUMP = 0x6f,
 	MCU_UNI_CMD_PTA_3WIRE_CTRL = 0x78,
 	MCU_UNI_CMD_MLD = 0x82,
+	MCU_UNI_CMD_PEER_MLD = 0x83,
 };
 
 enum {
diff --git a/mt7996/main.c b/mt7996/main.c
index f39e6ece..0837b79e 100644
--- a/mt7996/main.c
+++ b/mt7996/main.c
@@ -1003,6 +1003,10 @@ static void mt7996_vif_cfg_changed(struct ieee80211_hw *hw,
 		}
 	}
 
+	if ((changed & BSS_CHANGED_MLD_VALID_LINKS) &&
+	    (changed & (BSS_CHANGED_MLD_ADV_TTLM | BSS_CHANGED_MLD_NEG_TTLM)))
+		mt7996_mcu_peer_mld_ttlm_req(dev, vif, changed);
+
 	mutex_unlock(&dev->mt76.mutex);
 }
 
@@ -3177,7 +3181,7 @@ mt7996_change_vif_links(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 	struct mt7996_dev *dev = mt7996_hw_dev(hw);
 	struct mt7996_phy *phy = mt7996_hw_phy(hw);
 	struct mt7996_vif *mvif = (struct mt7996_vif *)vif->drv_priv;
-	unsigned long rem = old_links & ~new_links;
+	unsigned long rem = old_links & ~new_links & ~vif->dormant_links;
 	unsigned int link_id;
 	int ret = 0;
 
@@ -3235,6 +3239,7 @@ mt7996_change_sta_links(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 	unsigned long add = new_links & ~old_links;
 	unsigned long rem = old_links & ~new_links;
 	int ret = 0;
+	bool assoc;
 
 	mt7996_dbg(dev, MT7996_DBG_STA, "%s: STA %pM old=0x%x, new=0x%x\n",
 		   __func__, sta->addr, old_links, new_links);
@@ -3249,7 +3254,8 @@ mt7996_change_sta_links(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 		/* 	goto remove; */
 	}
 
-	ret = mt7996_mac_sta_add_links(dev, vif, sta, add, false);
+	assoc = vif->type == NL80211_IFTYPE_STATION ? vif->cfg.assoc : false;
+	ret = mt7996_mac_sta_add_links(dev, vif, sta, add, assoc);
 	if (ret)
 		goto remove;
 
diff --git a/mt7996/mcu.c b/mt7996/mcu.c
index db855b3b..1cc65098 100644
--- a/mt7996/mcu.c
+++ b/mt7996/mcu.c
@@ -3649,6 +3649,70 @@ int mt7996_mcu_mld_set_attlm(struct mt7996_dev *dev, struct ieee80211_vif *vif,
 	return ret;
 }
 
+int mt7996_mcu_peer_mld_ttlm_req(struct mt7996_dev *dev, struct ieee80211_vif *vif,
+				 u64 changed)
+{
+	struct mt7996_link_sta *mlink;
+	struct ieee80211_sta *sta;
+	struct mt7996_sta *msta;
+	struct peer_mld_req_hdr hdr = { .mld_idx = 0xff };
+	struct peer_mld_ttlm_req *req;
+	struct sk_buff *skb;
+	struct tlv *tlv;
+	int len = sizeof(hdr) + sizeof(*req);
+	unsigned long valid_links = (unsigned long)vif->valid_links;
+	u8 link_id;
+
+	if (vif->type != NL80211_IFTYPE_STATION)
+		return 0;
+
+	rcu_read_lock();
+	sta = ieee80211_find_sta(vif, vif->cfg.ap_addr);
+	if (!sta) {
+		rcu_read_unlock();
+		return -EINVAL;
+	}
+
+	memcpy(hdr.peer_mld_addr, sta->addr, ETH_ALEN);
+	msta = (struct mt7996_sta *)sta->drv_priv;
+
+	skb = mt76_mcu_msg_alloc(&dev->mt76, NULL, len);
+	if (!skb)
+		return -ENOMEM;
+
+	skb_put_data(skb, &hdr, sizeof(hdr));
+	tlv = mt7996_mcu_add_uni_tlv(skb, UNI_CMD_PEER_MLD_TTLM_REQ,
+				     sizeof(*req));
+	req = (struct peer_mld_ttlm_req *)tlv;
+
+	memcpy(req->mld_addr, vif->addr, ETH_ALEN);
+	req->enabled_link_bitmap = cpu_to_le16(vif->valid_links);
+	for_each_set_bit(link_id, &valid_links, IEEE80211_MLD_MAX_NUM_LINKS) {
+		mlink = mlink_dereference_protected(msta, link_id);
+		if (!mlink)
+			continue;
+
+		req->link_to_wcid[link_id] = cpu_to_le16(mlink->wcid.idx);
+
+		if (changed & BSS_CHANGED_MLD_ADV_TTLM) {
+			/* skip TTLM-disabled links */
+			if (vif->adv_ttlm.active &&
+			    !(vif->adv_ttlm.map & BIT(link_id)))
+				continue;
+
+			req->dl_tid_map[link_id] = 0xff;
+			req->ul_tid_map[link_id] = 0xff;
+		}
+
+		/* TODO apply negotiated TTLM */
+	}
+
+	rcu_read_unlock();
+
+	return mt76_mcu_skb_send_msg(&dev->mt76, skb, MCU_WM_UNI_CMD(PEER_MLD),
+				     true);
+}
+
 static void
 mt7996_mcu_beacon_cntdwn(struct ieee80211_bss_conf *conf, struct sk_buff *rskb,
 			 struct sk_buff *skb,
diff --git a/mt7996/mcu.h b/mt7996/mcu.h
index d3f1f169..4e394fe9 100644
--- a/mt7996/mcu.h
+++ b/mt7996/mcu.h
@@ -1244,6 +1244,28 @@ enum {
 	UNI_EVENT_MLD_RECONF_AP_REM_TIMER = 0x04,
 };
 
+struct peer_mld_req_hdr {
+	u8 ver;
+	u8 peer_mld_addr[ETH_ALEN];
+	u8 mld_idx;
+	u8 rsv[4];
+	u8 buf[];
+} __packed;
+
+struct peer_mld_ttlm_req {
+	__le16 tag;
+	__le16 len;
+	u8 mld_addr[ETH_ALEN];
+	__le16 enabled_link_bitmap;
+	__le16 link_to_wcid[IEEE80211_MLD_MAX_NUM_LINKS + 1];
+	u8 dl_tid_map[IEEE80211_MLD_MAX_NUM_LINKS + 1];
+	u8 ul_tid_map[IEEE80211_MLD_MAX_NUM_LINKS + 1];
+} __packed;
+
+enum {
+	UNI_CMD_PEER_MLD_TTLM_REQ = 0x0,
+};
+
 struct tx_power_ctrl {
 	u8 _rsv[4];
 
diff --git a/mt7996/mt7996.h b/mt7996/mt7996.h
index ba38c2b8..cf8d9773 100644
--- a/mt7996/mt7996.h
+++ b/mt7996/mt7996.h
@@ -1218,6 +1218,8 @@ int mt7996_mcu_set_vow_feature_ctrl(struct mt7996_phy *phy);
 void mt7996_mcu_wmm_pbc_work(struct work_struct *work);
 int mt7996_mcu_mld_set_attlm(struct mt7996_dev *dev, struct ieee80211_vif *vif,
 			     u16 disabled_links, u16 switch_time, u32 duration);
+int mt7996_mcu_peer_mld_ttlm_req(struct mt7996_dev *dev, struct ieee80211_vif *vif,
+				 u64 changed);
 
 static inline u8 mt7996_max_interface_num(struct mt7996_dev *dev)
 {
-- 
2.45.2

