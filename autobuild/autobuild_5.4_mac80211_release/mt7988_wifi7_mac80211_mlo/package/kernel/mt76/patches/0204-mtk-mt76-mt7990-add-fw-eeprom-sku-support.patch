From c07f00c40eb52dc23e04c7c4eee19ce22b5799f2 Mon Sep 17 00:00:00 2001
From: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
Date: Thu, 5 Sep 2024 19:50:49 +0800
Subject: [PATCH 204/265] mtk: mt76: mt7990: add fw/eeprom/sku support

1. Add mt7990 fw/eeprom definition
2. Add mt7990 sku/part number parsing
3. Add mt7990 efuse FT merge support

Signed-off-by: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
---
 mt7996/eeprom.c   | 12 ++++++++++++
 mt7996/init.c     |  3 +++
 mt7996/main.c     |  1 +
 mt7996/mcu.c      | 16 ++++++++++++++++
 mt7996/mt7996.h   | 22 +++++++++++++++++++++-
 mt7996/testmode.c | 10 ++++++++++
 6 files changed, 63 insertions(+), 1 deletion(-)

diff --git a/mt7996/eeprom.c b/mt7996/eeprom.c
index b89734b9..910b95eb 100644
--- a/mt7996/eeprom.c
+++ b/mt7996/eeprom.c
@@ -117,6 +117,11 @@ const char *mt7996_eeprom_name(struct mt7996_dev *dev)
 				return MT7992_EEPROM_DEFAULT_MIX;
 			return MT7992_EEPROM_DEFAULT;
 		}
+		return MT7992_EEPROM_DEFAULT_24;
+	case MT7990_DEVICE_ID:
+		if (dev->fem_type == MT7996_FEM_INT)
+			return MT7990_EEPROM_DEFAULT_INT;
+		return MT7990_EEPROM_DEFAULT;
 	case MT7996_DEVICE_ID:
 	default:
 		switch (dev->var.type) {
@@ -373,6 +378,8 @@ static int mt7996_eeprom_parse_efuse_hw_cap(struct mt7996_phy *phy,
 					    u8 *path, u8 *rx_path, u8 *nss)
 {
 #define MODE_HE_ONLY		BIT(0)
+#define FIPS_CAP		BIT(7)
+#define PWR_BOOST_CAP		BIT(8)
 #define WTBL_SIZE_GROUP		GENMASK(31, 28)
 #define STREAM_CAP(_offs)	((cap & (0x7 << (_offs))) >> (_offs))
 	struct mt7996_dev *dev = phy->dev;
@@ -392,6 +399,11 @@ static int mt7996_eeprom_parse_efuse_hw_cap(struct mt7996_phy *phy,
 		*nss = min_t(u8, *nss, STREAM_CAP(1 + band_offs));
 		*path = min_t(u8, *path, STREAM_CAP(10 + band_offs));
 		*rx_path = min_t(u8, *rx_path, STREAM_CAP(19 + band_offs));
+
+		if (is_mt7990(&dev->mt76)) {
+			dev->fips_cap = !!(cap & FIPS_CAP);
+			dev->pwr_boost_cap = !!(cap & PWR_BOOST_CAP);
+		}
 	}
 
 	if (dev->wtbl_size_group < 2 || dev->wtbl_size_group > 4)
diff --git a/mt7996/init.c b/mt7996/init.c
index 16cb57bf..b0aa5432 100644
--- a/mt7996/init.c
+++ b/mt7996/init.c
@@ -1207,6 +1207,9 @@ static int mt7996_variant_type_init(struct mt7996_dev *dev)
 		else
 			var_type = MT7992_VAR_TYPE_24;
 		break;
+	case MT7990_DEVICE_ID:
+		dev->chip_sku = MT7990_VAR_TYPE_23;
+		break;
 	default:
 		return -EINVAL;
 	}
diff --git a/mt7996/main.c b/mt7996/main.c
index 5eaa1607..e7e8dedd 100644
--- a/mt7996/main.c
+++ b/mt7996/main.c
@@ -2385,6 +2385,7 @@ mt7996_background_radar_handle_7975_ifem(struct ieee80211_hw *hw,
 		is_ifem_adie = dev->chip_sku == MT7992_VAR_TYPE_44 &&
 			       dev->fem_type != MT7996_FEM_EXT;
 		break;
+	case MT7990_DEVICE_ID:
 	default:
 		return;
 	}
diff --git a/mt7996/mcu.c b/mt7996/mcu.c
index 0bd8809a..5cb2bd09 100644
--- a/mt7996/mcu.c
+++ b/mt7996/mcu.c
@@ -27,6 +27,9 @@
 			_fw = MT7992_##name;			\
 		}						\
 		break;						\
+	case MT7990_DEVICE_ID:					\
+		_fw = MT7990_##name;				\
+		break;						\
 	case MT7996_DEVICE_ID:						\
 	default:						\
 		switch ((_dev)->var.type) {			\
@@ -4428,6 +4431,9 @@ static int mt7996_load_ram(struct mt7996_dev *dev)
 	if (ret)
 		return ret;
 
+	if (is_mt7990(&dev->mt76))
+		return 0;
+
 	ret = __mt7996_load_ram(dev, "DSP", fw_name(dev, FIRMWARE_DSP),
 				MT7996_RAM_TYPE_DSP);
 	if (ret)
@@ -5202,6 +5208,9 @@ static int mt7996_mcu_set_cal_free_data(struct mt7996_dev *dev)
 	static const u16 adie_base_7992[] = {
 		EFUSE_BASE_OFFS_ADIE0, EFUSE_BASE_OFFS_ADIE1_7992, 0x0
 	};
+	static const u16 adie_base_7990[] = {
+		EFUSE_BASE_OFFS_ADIE0, 0x0, 0x0
+	};
 	static const u16 *adie_offs[__MT_MAX_BAND];
 	static const u16 *eep_offs[__MT_MAX_BAND];
 	static const u16 *adie_base;
@@ -5252,6 +5261,13 @@ static int mt7996_mcu_set_cal_free_data(struct mt7996_dev *dev)
 		adie_offs[1] = adie_offs_list[adie_id];
 		eep_offs[1] = eep_offs_list[adie_id];
 		break;
+	case MT7990_DEVICE_ID:
+		adie_base = adie_base_7990;
+		/* adie 0 */
+		adie_id = ADIE_7976;
+		adie_offs[0] = adie_offs_list[adie_id];
+		eep_offs[0] = eep_offs_list[adie_id];
+		break;
 	default:
 		return -EINVAL;
 	}
diff --git a/mt7996/mt7996.h b/mt7996/mt7996.h
index 773f54e3..fc359d93 100644
--- a/mt7996/mt7996.h
+++ b/mt7996/mt7996.h
@@ -67,6 +67,12 @@
 #define MT7992_FIRMWARE_WM_TM_24	"mediatek/mt7996/mt7992_wm_tm_24.bin"
 #define MT7992_ROM_PATCH_24		"mediatek/mt7996/mt7992_rom_patch_24.bin"
 
+#define MT7990_FIRMWARE_WA		""
+#define MT7990_FIRMWARE_WM		"mediatek/mt7996/mt7990_wm.bin"
+#define MT7990_FIRMWARE_DSP		""
+#define MT7990_FIRMWARE_WM_TM		"mediatek/mt7996/mt7990_wm_tm.bin"
+#define MT7990_ROM_PATCH		"mediatek/mt7996/mt7990_rom_patch.bin"
+
 #define MT7996_EEPROM_DEFAULT		"mediatek/mt7996/mt7996_eeprom.bin"
 #define MT7996_EEPROM_DEFAULT_INT	"mediatek/mt7996/mt7996_eeprom_2i5i6i.bin"
 #define MT7996_EEPROM_DEFAULT_233	"mediatek/mt7996/mt7996_eeprom_233.bin"
@@ -80,6 +86,9 @@
 #define MT7992_EEPROM_DEFAULT_23_INT	"mediatek/mt7996/mt7992_eeprom_23_2i5i.bin"
 #define MT7992_EEPROM_DEFAULT_24	"mediatek/mt7996/mt7992_eeprom_24_2i5i.bin"
 
+#define MT7990_EEPROM_DEFAULT		"mediatek/mt7996/mt7990_eeprom.bin"
+#define MT7990_EEPROM_DEFAULT_INT	"mediatek/mt7996/mt7990_eeprom_2i5i.bin"
+
 #define MT7996_EEPROM_SIZE		7680
 #define MT7996_EEPROM_BLOCK_SIZE		16
 #define MT7996_EXT_EEPROM_BLOCK_SIZE	1024
@@ -173,6 +182,10 @@ enum mt7992_var_type {
 	MT7992_VAR_TYPE_24,
 };
 
+enum mt7990_var_type {
+	MT7990_VAR_TYPE_23,
+};
+
 enum mt7996_fem_type {
 	MT7996_FEM_EXT,
 	MT7996_FEM_INT,
@@ -190,6 +203,7 @@ enum mt7996_eeprom_mode {
 enum mt7996_ddie_type {
 	DDIE_7996,
 	DDIE_7992,
+	DDIE_7990,
 	DDIE_TYPE_NUM,
 };
 
@@ -803,6 +817,9 @@ struct mt7996_dev {
 	bool has_eht:1;
 	bool has_rro:1;
 
+	bool fips_cap:1;
+	bool pwr_boost_cap:1;
+
 	struct {
 		struct {
 			void *ptr;
@@ -983,7 +1000,7 @@ mt7996_phy3(struct mt7996_dev *dev)
 static inline bool
 mt7996_band_valid(struct mt7996_dev *dev, u8 band)
 {
-	if (is_mt7992(&dev->mt76))
+	if (is_mt7992(&dev->mt76) || is_mt7990(&dev->mt76))
 		return band <= MT_BAND1;
 
 	if (dev->var.type == MT7996_VAR_TYPE_404 && band == MT_BAND1)
@@ -1005,6 +1022,8 @@ mt7996_has_background_radar(struct mt7996_dev *dev)
 		    dev->var.type == MT7992_VAR_TYPE_24)
 			return false;
 		break;
+	case MT7990_DEVICE_ID:
+		break;
 	default:
 		return false;
 	}
@@ -1019,6 +1038,7 @@ mt7996_has_ext_eeprom(struct mt7996_dev *dev)
 	case MT7996_DEVICE_ID:
 		return false;
 	case MT7992_DEVICE_ID:
+	case MT7990_DEVICE_ID:
 	default:
 		return true;
 	}
diff --git a/mt7996/testmode.c b/mt7996/testmode.c
index 0aa4f981..a4161faf 100644
--- a/mt7996/testmode.c
+++ b/mt7996/testmode.c
@@ -2153,6 +2153,9 @@ mt7996_tm_efuse_update_is_valid(struct mt7996_dev *dev, u32 offset, u8 *write_bu
 		[DDIE_7992] = {{.start = 0x10, .end = 0x18f, .prot_mask = -1},
 			       {.start = 0x1b0, .end = 0x3ff, .prot_mask = -1},
 			       {.start = -1}},
+		[DDIE_7990] = {{.start = 0x10, .end = 0x18f, .prot_mask = -1},
+			       {.start = 0x1b0, .end = 0x3ff, .prot_mask = -1},
+			       {.start = -1}},
 	};
 	static const struct efuse_region adie_prot_offs[][PROT_OFFS_MAX_SIZE] = {
 		[ADIE_7975] = {{.start = 0x5c0, .end = 0x62f, .prot_mask = -1},
@@ -2223,6 +2226,13 @@ mt7996_tm_efuse_update_is_valid(struct mt7996_dev *dev, u32 offset, u8 *write_bu
 		base = EFUSE_BASE_OFFS_DDIE;
 		prot_offs = ddie_prot_offs[DDIE_7992];
 		break;
+	case MT7990_DEVICE_ID:
+		/* block all the adie region in efuse for griffin */
+		if (offset >= EFUSE_BASE_OFFS_ADIE0)
+			return false;
+		base = EFUSE_BASE_OFFS_DDIE;
+		prot_offs = ddie_prot_offs[DDIE_7990];
+		break;
 	default:
 		return false;
 	}
-- 
2.45.2

