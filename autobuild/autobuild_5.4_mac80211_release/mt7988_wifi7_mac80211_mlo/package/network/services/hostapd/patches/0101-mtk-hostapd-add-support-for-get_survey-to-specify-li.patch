From b2d8d4c1d9f05edfe0e85125d70ddb5b6be4df26 Mon Sep 17 00:00:00 2001
From: Michael-CY Lee <michael-cy.lee@mediatek.com>
Date: Tue, 4 Jun 2024 08:26:04 +0800
Subject: [PATCH 101/149] mtk: hostapd: add support for get_survey to specify
 link id

Specifying the link id when request get_survey is useful for passing
the event to correcy hapd.

Signed-off-by: Michael-CY Lee <michael-cy.lee@mediatek.com>
---
 src/ap/ap_drv_ops.h          | 8 +++++++-
 src/ap/drv_callbacks.c       | 1 +
 src/drivers/driver.h         | 5 ++++-
 src/drivers/driver_nl80211.c | 4 +++-
 4 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/src/ap/ap_drv_ops.h b/src/ap/ap_drv_ops.h
index 472a9d725..600ee9c93 100644
--- a/src/ap/ap_drv_ops.h
+++ b/src/ap/ap_drv_ops.h
@@ -321,11 +321,17 @@ static inline void hostapd_drv_poll_client(struct hostapd_data *hapd,
 static inline int hostapd_drv_get_survey(struct hostapd_data *hapd,
 					 unsigned int freq)
 {
+	int link_id = -1;
+
 	if (hapd->driver == NULL)
 		return -1;
 	if (!hapd->driver->get_survey)
 		return -1;
-	return hapd->driver->get_survey(hapd->drv_priv, freq);
+#ifdef CONFIG_IEEE80211BE
+	if (hapd->conf->mld_ap)
+		link_id = hapd->mld_link_id;
+#endif /* CONFIG_IEEE80211BE */
+	return hapd->driver->get_survey(hapd->drv_priv, freq, link_id);
 }
 
 static inline int hostapd_get_country(struct hostapd_data *hapd, char *alpha2)
diff --git a/src/ap/drv_callbacks.c b/src/ap/drv_callbacks.c
index 715a8d149..248fe17cd 100644
--- a/src/ap/drv_callbacks.c
+++ b/src/ap/drv_callbacks.c
@@ -2797,6 +2797,7 @@ void hostapd_wpa_event(void *ctx, enum wpa_event_type event,
 			data->connect_failed_reason.code);
 		break;
 	case EVENT_SURVEY:
+		hapd = switch_link_hapd(hapd, data->survey_results.link_id);
 		hostapd_event_get_survey(hapd->iface, &data->survey_results);
 		break;
 #ifdef NEED_AP_MLME
diff --git a/src/drivers/driver.h b/src/drivers/driver.h
index 84c079ea0..89ef85f11 100644
--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -4679,6 +4679,7 @@ struct wpa_driver_ops {
 	 * @priv: Private driver interface data
 	 * @freq: If set, survey data for the specified frequency is only
 	 *	being requested. If not set, all survey data is requested.
+	 * @link_id: The link ID that requests the get_survey.
 	 * Returns: 0 on success, -1 on failure
 	 *
 	 * Use this to retrieve:
@@ -4697,7 +4698,7 @@ struct wpa_driver_ops {
 	 * for each survey. The min_nf of the channel is updated for each
 	 * survey.
 	 */
-	int (*get_survey)(void *priv, unsigned int freq);
+	int (*get_survey)(void *priv, unsigned int freq, int link_id);
 
 	/**
 	 * status - Get driver interface status information
@@ -6981,10 +6982,12 @@ union wpa_event_data {
 	 * @freq_filter: Requested frequency survey filter, 0 if request
 	 *	was for all survey data
 	 * @survey_list: Linked list of survey data (struct freq_survey)
+	 * @link_id: Link ID of the MLO link
 	 */
 	struct survey_results {
 		unsigned int freq_filter;
 		struct dl_list survey_list; /* struct freq_survey */
+		int link_id;
 	} survey_results;
 
 	/**
diff --git a/src/drivers/driver_nl80211.c b/src/drivers/driver_nl80211.c
index 247b68570..ed8b7a54b 100644
--- a/src/drivers/driver_nl80211.c
+++ b/src/drivers/driver_nl80211.c
@@ -10570,7 +10570,8 @@ static int survey_handler(struct nl_msg *msg, void *arg)
 }
 
 
-static int wpa_driver_nl80211_get_survey(void *priv, unsigned int freq)
+static int wpa_driver_nl80211_get_survey(void *priv, unsigned int freq,
+					 int link_id)
 {
 	struct i802_bss *bss = priv;
 	struct wpa_driver_nl80211_data *drv = bss->drv;
@@ -10590,6 +10591,7 @@ static int wpa_driver_nl80211_get_survey(void *priv, unsigned int freq)
 	if (!msg)
 		return -ENOBUFS;
 
+	data.survey_results.link_id = link_id;
 	if (freq)
 		data.survey_results.freq_filter = freq;
 
-- 
2.45.2

