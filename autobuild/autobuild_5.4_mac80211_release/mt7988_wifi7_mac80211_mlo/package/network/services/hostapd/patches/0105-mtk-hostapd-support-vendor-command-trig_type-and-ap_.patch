From 0accc6e6183fb38d6af36a3aa8dfa0693e6f04a5 Mon Sep 17 00:00:00 2001
From: Howard Hsu <howard-yh.hsu@mediatek.com>
Date: Wed, 19 Jun 2024 17:22:41 +0800
Subject: [PATCH 105/149] mtk: hostapd: support vendor command trig_type and
 ap_wireless with link_id

For mld ap, we need to add link_id in nl80211 msg so that mt76 driver
could use link_id to find the corresponding phy.

Signed-off-by: Howard Hsu <howard-yh.hsu@mediatek.com>
---
 src/ap/ap_drv_ops.c          | 18 ++++++++++++++++--
 src/common/mtk_vendor.h      |  2 ++
 src/drivers/driver.h         |  6 ++++--
 src/drivers/driver_nl80211.c | 11 +++++++++--
 4 files changed, 31 insertions(+), 6 deletions(-)

diff --git a/src/ap/ap_drv_ops.c b/src/ap/ap_drv_ops.c
index ecfad53f7..28d4d9019 100644
--- a/src/ap/ap_drv_ops.c
+++ b/src/ap/ap_drv_ops.c
@@ -1417,9 +1417,16 @@ int hostapd_drv_get_aval_bss_color_bmp(struct hostapd_data *hapd, u64 *aval_colo
 
 int hostapd_drv_ap_wireless(struct hostapd_data *hapd, u8 sub_vendor_id, int value)
 {
+	s8 link_id = -1;
+
 	if (!hapd->driver || !hapd->driver->ap_wireless)
 		return 0;
-	return hapd->driver->ap_wireless(hapd->drv_priv, sub_vendor_id, value);
+
+	if (hapd->conf->mld_ap)
+		link_id = hapd->mld_link_id;
+
+	return hapd->driver->ap_wireless(hapd->drv_priv, sub_vendor_id, value,
+					 link_id);
 }
 
 int hostapd_drv_ap_rfeatures(struct hostapd_data *hapd, u8 sub_vendor_id, int value)
@@ -1438,9 +1445,16 @@ int hostapd_drv_ap_rfeatures(struct hostapd_data *hapd, u8 sub_vendor_id, int va
 
 int hostapd_drv_ap_trig_type(struct hostapd_data *hapd, u8 enable, u8 type)
 {
+	s8 link_id = -1;
+
 	if (!hapd->driver || !hapd->driver->ap_trigtype)
 		return 0;
-	return hapd->driver->ap_trigtype(hapd->drv_priv, enable, type);
+
+	if (hapd->conf->mld_ap)
+		link_id = hapd->mld_link_id;
+
+	return hapd->driver->ap_trigtype(hapd->drv_priv, enable, type,
+					 link_id);
 }
 
 int hostapd_drv_amnt_set(struct hostapd_data *hapd, u8 amnt_idx, u8 *amnt_sta_mac)
diff --git a/src/common/mtk_vendor.h b/src/common/mtk_vendor.h
index c6de8862b..937b968d5 100644
--- a/src/common/mtk_vendor.h
+++ b/src/common/mtk_vendor.h
@@ -165,6 +165,8 @@ enum mtk_vendor_attr_wireless_ctrl {
 	MTK_VENDOR_ATTR_WIRELESS_CTRL_AMSDU,
 	MTK_VENDOR_ATTR_WIRELESS_CTRL_CERT = 9,
 	MTK_VENDOR_ATTR_WIRELESS_CTRL_RTS_SIGTA,
+	MTK_VENDOR_ATTR_WIRELESS_CTRL_MU_EDCA,
+	MTK_VENDOR_ATTR_WIRELESS_CTRL_LINK_ID,
 
 	/* keep last */
 	NUM_MTK_VENDOR_ATTRS_WIRELESS_CTRL,
diff --git a/src/drivers/driver.h b/src/drivers/driver.h
index 89ef85f11..d0c036413 100644
--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -5459,8 +5459,9 @@ struct wpa_driver_ops {
 	* ap_wireless - set wireless command
 	* @priv: Private driver interface data
 	* @value: value
+	* @link_id: MLD link id. -1 if this is an non-MLD AP.
 	*/
-	int (*ap_wireless)(void *priv, u8 mode, int value);
+	int (*ap_wireless)(void *priv, u8 mode, int value, s8 link_id);
 
 	/**
 	* ap_rfeatures - set ap rf features command
@@ -5475,8 +5476,9 @@ struct wpa_driver_ops {
 	* @priv: Private driver interface data
 	* @enable: enable or disable
 	* @type: trigger type
+	* @link_id: MLD link id. -1 if this is an non-MLD AP.
 	*/
-	int (*ap_trigtype)(void *priv, u8 enable, u8 type);
+	int (*ap_trigtype)(void *priv, u8 enable, u8 type, s8 link_id);
 
 	/**
 	* amnt_set - add/delete station from monitoring
diff --git a/src/drivers/driver_nl80211.c b/src/drivers/driver_nl80211.c
index ed8b7a54b..2cff1cfd0 100644
--- a/src/drivers/driver_nl80211.c
+++ b/src/drivers/driver_nl80211.c
@@ -143,6 +143,7 @@ wireless_ctrl_policy[NUM_MTK_VENDOR_ATTRS_WIRELESS_CTRL] = {
 	[MTK_VENDOR_ATTR_WIRELESS_CTRL_BA_BUFFER_SIZE] = {.type = NLA_U16 },
 	[MTK_VENDOR_ATTR_WIRELESS_CTRL_AMSDU] = {.type = NLA_U8 },
 	[MTK_VENDOR_ATTR_WIRELESS_CTRL_CERT] = {.type = NLA_U8 },
+	[MTK_VENDOR_ATTR_WIRELESS_CTRL_LINK_ID] = {.type = NLA_U8 },
 };
 
 static struct nla_policy
@@ -15383,7 +15384,7 @@ static int nl80211_get_aval_color_bmp(void *priv, u64 *aval_color_bmp)
 	return ret;
 }
 
-static int nl80211_ap_wireless(void *priv, u8 sub_vendor_id, int value)
+static int nl80211_ap_wireless(void *priv, u8 sub_vendor_id, int value, s8 link_id)
 {
 	struct i802_bss *bss = priv;
 	struct wpa_driver_nl80211_data *drv = bss->drv;
@@ -15414,6 +15415,9 @@ static int nl80211_ap_wireless(void *priv, u8 sub_vendor_id, int value)
 	else
 		nla_put_u8(msg, sub_vendor_id, (u8) value);
 
+	if (link_id > -1)
+		nla_put_u8(msg, MTK_VENDOR_ATTR_WIRELESS_CTRL_LINK_ID, link_id);
+
 	nla_nest_end(msg, data);
 	ret = send_and_recv_cmd(drv, msg);
 	if (ret)
@@ -15470,7 +15474,7 @@ fail:
 	return -ENOBUFS;
 }
 
-static int nl80211_ap_trigtype(void *priv, u8 enable, u8 type)
+static int nl80211_ap_trigtype(void *priv, u8 enable, u8 type, s8 link_id)
 {
 	struct i802_bss *bss = priv;
 	struct wpa_driver_nl80211_data *drv = bss->drv;
@@ -15496,6 +15500,9 @@ static int nl80211_ap_trigtype(void *priv, u8 enable, u8 type)
 	if (!data)
 		goto fail;
 
+	if (link_id > -1)
+		nla_put_u8(msg, MTK_VENDOR_ATTR_RFEATURE_CTRL_LINK_ID, link_id);
+
 	data2 = nla_nest_start(msg, MTK_VENDOR_ATTR_RFEATURE_CTRL_TRIG_TYPE_CFG);
 	if (!data2)
 		goto fail;
-- 
2.45.2

