From 732ac44d12a1d5e5823d6f2a29b553fb89e7ff0e Mon Sep 17 00:00:00 2001
From: Michael-CY Lee <michael-cy.lee@mediatek.com>
Date: Wed, 11 Sep 2024 15:02:30 +0800
Subject: [PATCH 133/149] mtk: hostapd: update channel information in WBCS to
 carry maximal BW with no punctured sub-channel.

When AP is about to switch to a new channel with punctured sub-channel,
it will indicated the punctured bitmap in Bandwidth Indication
sub-element of Channel Switch Wrapper. However, the WBCS sub-element has
no field for punctured bitmap and is responsible for carring channel switch
information for legacy STAs, so the AP should calculate the maximal BW
with no punctured sub-channel and carry it in WBCS sub-element.

Signed-off-by: Michael-CY Lee <michael-cy.lee@mediatek.com>
---
 src/ap/ieee802_11.c | 26 ++++++++++++++++++++++----
 1 file changed, 22 insertions(+), 4 deletions(-)

diff --git a/src/ap/ieee802_11.c b/src/ap/ieee802_11.c
index ac7195b7b..065845aae 100644
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -7448,28 +7448,45 @@ static u8 * hostapd_eid_wb_channel_switch(struct hostapd_data *hapd, u8 *eid,
 					  u8 chan1, u8 chan2)
 {
 	u8 bw;
+	enum oper_chan_width oper_chwidth;
+#ifdef CONFIG_IEEE80211BE
+	u16 punct_bitmap = hapd->cs_freq_params.punct_bitmap;
+#endif /* CONFIG_IEEE80211BE */
 
 	/* bandwidth: 0: 40, 1: 80, 160, 80+80, 4: 320 as per
 	 * IEEE P802.11-REVme/D4.0, 9.4.2.159 and Table 9-314. */
 	switch (hapd->cs_freq_params.bandwidth) {
 	case 40:
-		bw = 0;
+		oper_chwidth = CONF_OPER_CHWIDTH_USE_HT;
 		break;
 	case 80:
+		oper_chwidth = CONF_OPER_CHWIDTH_80MHZ;
+		break;
 	case 160:
+		oper_chwidth = CONF_OPER_CHWIDTH_160MHZ;
+		break;
 	case 320:
-		bw = 1;
+		oper_chwidth = CONF_OPER_CHWIDTH_320MHZ;
 		break;
 	default:
 		/* not valid VHT bandwidth or not in CSA */
 		return eid;
 	}
 
+#ifdef CONFIG_IEEE80211BE
+	if (punct_bitmap) {
+		punct_update_legacy_bw(punct_bitmap,
+				       hapd->cs_freq_params.channel,
+				       &oper_chwidth, &chan1, &chan2);
+	}
+#endif /* CONFIG_IEEE80211BE */
+
+	bw = oper_chwidth == CONF_OPER_CHWIDTH_USE_HT ? 0 : 1;
 	*eid++ = WLAN_EID_WIDE_BW_CHSWITCH;
 	*eid++ = 3; /* Length of Wide Bandwidth Channel Switch element */
 	*eid++ = bw; /* New Channel Width */
 
-	if (hapd->cs_freq_params.bandwidth == 320) {
+	if (oper_chwidth == CONF_OPER_CHWIDTH_320MHZ) {
 		/* Based on IEEE P802.11be/D5.0 35.15.3 Channel switch methods
 		 * for an EHT BSS, when the Bandwidth Indication (BI) element
 		 * is present along with the Wide Bandwidth Channel Switch
@@ -7479,13 +7496,14 @@ static u8 * hostapd_eid_wb_channel_switch(struct hostapd_data *hapd, u8 *eid,
 		 * In other word, if the bandwidth is 320 MHz in the BI element,
 		 * the bandwidth in the WBCS element should be 160.
 		 */
+		oper_chwidth = CONF_OPER_CHWIDTH_160MHZ;
 		if (hapd->cs_freq_params.channel < chan1)
 			chan1 -= 16;
 		else
 			chan1 += 16;
 	}
 
-	if (hapd->cs_freq_params.bandwidth >= 160) {
+	if (oper_chwidth == CONF_OPER_CHWIDTH_160MHZ) {
 		/* Update the CCFS0 and CCFS1 values in the element based on
 		 * IEEE P802.11-REVme/D4.0, Table 9-314 */
 
-- 
2.45.2

