From 34be0161f1c45f15421c4adf0fb0cb48aa1d7a5c Mon Sep 17 00:00:00 2001
From: "chak-kei.lam" <chak-kei.lam@mediatek.com>
Date: Fri, 2 May 2025 11:13:41 +0800
Subject: [PATCH] flow-offload-add-binding-bypass-by-ct-mark-0x99

---
 drivers/net/ethernet/mediatek/mtk_ppe.h         | 1 +
 drivers/net/ethernet/mediatek/mtk_ppe_offload.c | 3 +++
 2 files changed, 4 insertions(+)

diff --git a/drivers/net/ethernet/mediatek/mtk_ppe.h b/drivers/net/ethernet/mediatek/mtk_ppe.h
index c3a7f7f..a5a2eb8 100644
--- a/drivers/net/ethernet/mediatek/mtk_ppe.h
+++ b/drivers/net/ethernet/mediatek/mtk_ppe.h
@@ -20,6 +20,7 @@
 #define MTK_ETH_PPE_BASE		0xc00
 #endif
 
+#define MTK_PPE_EXCEPTION_TAG		0x99
 #define MTK_PPE_ENTRIES_SHIFT		3
 #define MTK_PPE_ENTRIES			(1024 << MTK_PPE_ENTRIES_SHIFT)
 #define MTK_PPE_HASH_MASK		(MTK_PPE_ENTRIES - 1)
diff --git a/drivers/net/ethernet/mediatek/mtk_ppe_offload.c b/drivers/net/ethernet/mediatek/mtk_ppe_offload.c
index 5d4d235..eb552e7 100644
--- a/drivers/net/ethernet/mediatek/mtk_ppe_offload.c
+++ b/drivers/net/ethernet/mediatek/mtk_ppe_offload.c
@@ -360,6 +360,9 @@ mtk_flow_offload_replace(struct mtk_eth *eth, struct flow_cls_offload *f)
 	if (rhashtable_lookup(&eth->flow_table, &f->cookie, mtk_flow_ht_params))
 		return -EEXIST;
 
+	if (f->flow->ct->mark == MTK_PPE_EXCEPTION_TAG)
+		return -EOPNOTSUPP;
+
 	if (flow_rule_match_key(rule, FLOW_DISSECTOR_KEY_META)) {
 		struct flow_match_meta match;
 
-- 
2.45.2

