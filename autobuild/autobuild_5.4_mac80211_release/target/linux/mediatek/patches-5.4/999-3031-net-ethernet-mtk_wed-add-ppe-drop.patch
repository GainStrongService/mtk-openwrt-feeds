From 04d125add77530e26943c542670a55671449b4fb Mon Sep 17 00:00:00 2001
From: Bo-Cun Chen <bc-bocun.chen@mediatek.com>
Date: Fri, 21 Feb 2025 13:53:50 +0800
Subject: [PATCH] net: ethernet: mtk_wed: add ppe drop

Signed-off-by: Bo-Cun Chen <bc-bocun.chen@mediatek.com>
---
 drivers/net/ethernet/mediatek/mtk_eth_soc.h | 12 ++++++++++++
 drivers/net/ethernet/mediatek/mtk_wed.c     |  7 +++++++
 include/linux/soc/mediatek/mtk_wed.h        |  4 ++++
 3 files changed, 23 insertions(+)

diff --git a/drivers/net/ethernet/mediatek/mtk_eth_soc.h b/drivers/net/ethernet/mediatek/mtk_eth_soc.h
index 3f96f61..ce97b8b 100644
--- a/drivers/net/ethernet/mediatek/mtk_eth_soc.h
+++ b/drivers/net/ethernet/mediatek/mtk_eth_soc.h
@@ -2505,6 +2505,18 @@ struct phylink_pcs *mtk_sgmii_select_pcs(struct mtk_sgmii *ss, unsigned int id);
 int mtk_sgmii_init(struct mtk_eth *eth, struct device_node *np,
 		   u32 ana_rgc3);
 
+static inline void mtk_ppe_drop_config(struct mtk_eth *eth, u32 config)
+{
+	if (MTK_HAS_CAPS(eth->soc->caps, MTK_NETSYS_V1))
+		return;
+
+	mtk_w32(eth, config, PSE_PPE_DROP(0));
+	if (MTK_HAS_CAPS(eth->soc->caps, MTK_RSTCTRL_PPE1))
+		mtk_w32(eth, config, PSE_PPE_DROP(1));
+	if (MTK_HAS_CAPS(eth->soc->caps, MTK_RSTCTRL_PPE2))
+		mtk_w32(eth, config, PSE_PPE_DROP(2));
+}
+
 int mtk_gmac_sgmii_path_setup(struct mtk_eth *eth, int mac_id);
 int mtk_gmac_2p5gphy_path_setup(struct mtk_eth *eth, int mac_id);
 int mtk_gmac_gephy_path_setup(struct mtk_eth *eth, int mac_id);
diff --git a/drivers/net/ethernet/mediatek/mtk_wed.c b/drivers/net/ethernet/mediatek/mtk_wed.c
index a36e88f..e9eca7a 100644
--- a/drivers/net/ethernet/mediatek/mtk_wed.c
+++ b/drivers/net/ethernet/mediatek/mtk_wed.c
@@ -2252,6 +2252,12 @@ mtk_wed_ppe_check(struct mtk_wed_device *dev, struct sk_buff *skb,
 	mtk_ppe_check_skb(eth->ppe[dev->hw->index], skb, hash);	
 }
 
+static void
+mtk_wed_ppe_drop(struct mtk_wed_device *dev, bool enable)
+{
+	mtk_ppe_drop_config(dev->hw->eth, enable ? 0x2300 : 0x0);
+}
+
 static void
 mtk_wed_configure_irq(struct mtk_wed_device *dev, u32 irq_mask)
 {
@@ -3080,6 +3086,7 @@ void mtk_wed_add_hw(struct device_node *np, struct mtk_eth *eth,
 		.detach = mtk_wed_detach,
 		.setup_tc = mtk_wed_eth_setup_tc,
 		.ppe_check = mtk_wed_ppe_check,
+		.ppe_drop = mtk_wed_ppe_drop,
 		.get_hw_version = mtk_wed_get_hw_version,
 		.start_hw_rro = mtk_wed_start_hw_rro,
 		.rro_rx_ring_setup = mtk_wed_rro_rx_ring_setup,
diff --git a/include/linux/soc/mediatek/mtk_wed.h b/include/linux/soc/mediatek/mtk_wed.h
index c994e98..8a99ced 100644
--- a/include/linux/soc/mediatek/mtk_wed.h
+++ b/include/linux/soc/mediatek/mtk_wed.h
@@ -227,6 +227,7 @@ struct mtk_wed_ops {
 	void (*detach)(struct mtk_wed_device *dev);
 	void (*ppe_check)(struct mtk_wed_device *dev, struct sk_buff *skb,
 			  u32 reason, u32 hash);
+	void (*ppe_drop)(struct mtk_wed_device *dev, bool enable);
 	int (*setup_tc)(struct mtk_wed_device *wed, struct net_device *dev,
 			int type, void *type_data);
 
@@ -340,6 +341,8 @@ mtk_wed_is_amsdu_supported(struct mtk_wed_device *dev)
 	(_dev)->ops->rx_ring_setup(_dev, _ring, _regs, reset)
 #define mtk_wed_device_ppe_check(_dev, _skb, _reason, _hash) \
 	(_dev)->ops->ppe_check(_dev, _skb, _reason, _hash)
+#define mtk_wed_device_ppe_drop(_dev, _enable) \
+	(_dev)->ops->ppe_drop(_dev, _enable)
 #define mtk_wed_device_update_msg(_dev, _id, _msg, _len) \
 	(_dev)->ops->msg_update(_dev, _id, _msg, _len)
 #define mtk_wed_device_stop(_dev) (_dev)->ops->stop(_dev)
@@ -371,6 +374,7 @@ static inline bool mtk_wed_device_active(struct mtk_wed_device *dev)
 #define mtk_wed_device_irq_set_mask(_dev, _mask) do {} while (0)
 #define mtk_wed_device_rx_ring_setup(_dev, _ring, _regs, _reset) -ENODEV
 #define mtk_wed_device_ppe_check(_dev, _hash)  do {} while (0)
+#define mtk_wed_device_ppe_drop(_dev, _enable)  do {} while (0)
 #define mtk_wed_device_update_msg(_dev, _id, _msg, _len) -ENODEV
 #define mtk_wed_device_stop(_dev) do {} while (0)
 #define mtk_wed_device_dma_reset(_dev) do {} while (0)
-- 
2.45.2

