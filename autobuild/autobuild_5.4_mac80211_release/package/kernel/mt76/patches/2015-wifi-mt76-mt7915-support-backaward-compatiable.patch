From 7ffe99cbb4f483798a59bb617caa972046d8eb23 Mon Sep 17 00:00:00 2001
From: Rex Lu <rex.lu@mediatek.com>
Date: Mon, 11 Dec 2023 19:21:16 +0800
Subject: [PATCH] wifi: mt76: mt7915: support backaward compatiable

---
 mt7915/mmio.c | 8 ++++----
 wed.c         | 2 +-
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/mt7915/mmio.c b/mt7915/mmio.c
index ab80736..83257e4 100644
--- a/mt7915/mmio.c
+++ b/mt7915/mmio.c
@@ -691,13 +691,13 @@ int mt7915_mmio_wed_init(struct mt7915_dev *dev, void *pdev_ptr,
 				       MT_INT_WED_MASK_CSR;
 		wed->wlan.wpdma_phys = pci_resource_start(pci_dev, 0) +
 				       MT_WFDMA_EXT_CSR_BASE;
-		wed->wlan.wpdma_tx = pci_resource_start(pci_dev, 0) +
+		wed->wlan.wpdma_tx[0] = pci_resource_start(pci_dev, 0) +
 				     MT_TXQ_WED_RING_BASE;
 		wed->wlan.wpdma_txfree = pci_resource_start(pci_dev, 0) +
 					 MT_RXQ_WED_RING_BASE;
 		wed->wlan.wpdma_rx_glo = pci_resource_start(pci_dev, 0) +
 					 MT_WPDMA_GLO_CFG;
-		wed->wlan.wpdma_rx = pci_resource_start(pci_dev, 0) +
+		wed->wlan.wpdma_rx[0] = pci_resource_start(pci_dev, 0) +
 				     MT_RXQ_WED_DATA_RING_BASE;
 	} else {
 		struct platform_device *plat_dev = pdev_ptr;
@@ -714,10 +714,10 @@ int mt7915_mmio_wed_init(struct mt7915_dev *dev, void *pdev_ptr,
 		wed->wlan.phy_base = res->start;
 		wed->wlan.wpdma_int = res->start + MT_INT_SOURCE_CSR;
 		wed->wlan.wpdma_mask = res->start + MT_INT_MASK_CSR;
-		wed->wlan.wpdma_tx = res->start + MT_TXQ_WED_RING_BASE;
+		wed->wlan.wpdma_tx[0] = res->start + MT_TXQ_WED_RING_BASE;
 		wed->wlan.wpdma_txfree = res->start + MT_RXQ_WED_RING_BASE;
 		wed->wlan.wpdma_rx_glo = res->start + MT_WPDMA_GLO_CFG;
-		wed->wlan.wpdma_rx = res->start + MT_RXQ_WED_DATA_RING_BASE;
+		wed->wlan.wpdma_rx[0] = res->start + MT_RXQ_WED_DATA_RING_BASE;
 	}
 
 	wed->wlan.nbuf = is_mt7915(&dev->mt76) ?
diff --git a/wed.c b/wed.c
index 5ed681e..652f59e 100644
--- a/wed.c
+++ b/wed.c
@@ -175,7 +175,7 @@ int mt76_wed_dma_setup(struct mt76_dev *dev, struct mt76_queue *q, bool reset)
 		break;
 	case MT76_WED_RRO_Q_MSDU_PG:
 		q->flags &= ~MT_QFLAG_WED;
-		__mt76_dma_queue_reset(dev, q);
+		__mt76_dma_queue_reset(dev, q, false);
 		mtk_wed_device_msdu_pg_rx_ring_setup(q->wed, ring, q->regs);
 		q->head = q->ndesc - 1;
 		q->queued = q->head;
-- 
2.45.2

