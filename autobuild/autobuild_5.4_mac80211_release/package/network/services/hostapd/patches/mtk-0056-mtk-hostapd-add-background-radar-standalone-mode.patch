From 730b79639b3c1aaa9476f512552f3fd046729e0e Mon Sep 17 00:00:00 2001
From: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
Date: Wed, 8 Jan 2025 09:38:43 +0800
Subject: [PATCH] mtk: hostapd: add background radar standalone mode

Add background radar standalone mode
To enter standalone mode, please set the background_auto_ctrl to 0
in hostapd config (background_auto_ctrl default = 1).
In standalone mode, background radar will not be involved in any radar
or channel switch events.
In this mode, it can only be controlled by set_offchain commands.

Signed-off-by: StanleyYP Wang <StanleyYP.Wang@mediatek.com>
---
 hostapd/config_file.c |  2 ++
 hostapd/ctrl_iface.c  | 11 +++++++----
 src/ap/ap_config.c    |  2 ++
 src/ap/ap_config.h    |  1 +
 src/ap/dfs.c          | 22 +++++++++++++++++-----
 5 files changed, 29 insertions(+), 9 deletions(-)

diff --git a/hostapd/config_file.c b/hostapd/config_file.c
index 8ecba5c..ad4a701 100644
--- a/hostapd/config_file.c
+++ b/hostapd/config_file.c
@@ -3178,6 +3178,8 @@ static int hostapd_config_fill(struct hostapd_config *conf,
 		conf->acs_exclude_6ghz_non_psc = atoi(pos);
 	} else if (os_strcmp(buf, "enable_background_radar") == 0) {
 		conf->enable_background_radar = atoi(pos);
+	} else if (os_strcmp(buf, "background_auto_ctrl") == 0) {
+		conf->background_auto_ctrl = atoi(pos);
 	} else if (os_strcmp(buf, "min_tx_power") == 0) {
 		int val = atoi(pos);
 
diff --git a/hostapd/ctrl_iface.c b/hostapd/ctrl_iface.c
index 1d499d9..a365901 100644
--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -4116,8 +4116,10 @@ hostapd_ctrl_iface_set_offchain(struct hostapd_data *hapd, char *cmd,
 		iface->radar_background.new_chwidth = chwidth;
 	else
 		iface->radar_background.new_chwidth = -1;
-	iface->radar_background.temp_ch = temp_ch;
-	iface->radar_background.expand_ch = expand_ch;
+	if (iface->conf->background_auto_ctrl) {
+		iface->radar_background.temp_ch = temp_ch;
+		iface->radar_background.expand_ch = expand_ch;
+	}
 
 	return os_snprintf(buf, buflen, "OK\n");
 }
@@ -4200,10 +4202,11 @@ hostapd_ctrl_iface_get_offchain(struct hostapd_data *hapd, char *buf, size_t buf
 		return pos - buf;
 	pos += ret;
 	ret = os_snprintf(pos, end - pos,
-			  "temporary ch: %u cac started: %u expand ch: %u\n",
+			  "temporary ch: %u cac started: %u expand ch: %u auto ctrl: %u\n",
 			  iface->radar_background.temp_ch,
 			  iface->radar_background.cac_started,
-			  iface->radar_background.expand_ch);
+			  iface->radar_background.expand_ch,
+			  iface->conf->background_auto_ctrl);
 	if (os_snprintf_error(end - pos, ret))
 		return pos - buf;
 	pos += ret;
diff --git a/src/ap/ap_config.c b/src/ap/ap_config.c
index 17bbd54..85009c2 100644
--- a/src/ap/ap_config.c
+++ b/src/ap/ap_config.c
@@ -296,6 +296,8 @@ struct hostapd_config * hostapd_config_defaults(void)
 	conf->airtime_update_interval = AIRTIME_DEFAULT_UPDATE_INTERVAL;
 #endif /* CONFIG_AIRTIME_POLICY */
 
+	conf->background_auto_ctrl = true;
+
 	conf->edcca_enable = EDCCA_MODE_AUTO;
 	conf->edcca_compensation = EDCCA_DEFAULT_COMPENSATION;
 	conf->three_wire_enable = THREE_WIRE_MODE_DISABLE;
diff --git a/src/ap/ap_config.h b/src/ap/ap_config.h
index 90270c9..9031df0 100644
--- a/src/ap/ap_config.h
+++ b/src/ap/ap_config.h
@@ -998,6 +998,7 @@ struct hostapd_config {
 	bool hw_mode_set;
 	int acs_exclude_6ghz_non_psc;
 	int enable_background_radar;
+	bool background_auto_ctrl;
 	enum {
 		LONG_PREAMBLE = 0,
 		SHORT_PREAMBLE = 1
diff --git a/src/ap/dfs.c b/src/ap/dfs.c
index e72a0c4..54c7120 100644
--- a/src/ap/dfs.c
+++ b/src/ap/dfs.c
@@ -29,7 +29,8 @@ dfs_downgrade_bandwidth(struct hostapd_iface *iface, int *secondary_channel,
 static bool dfs_use_radar_background(struct hostapd_iface *iface)
 {
 	return (iface->drv_flags2 & WPA_DRIVER_RADAR_BACKGROUND) &&
-		iface->conf->enable_background_radar;
+		iface->conf->enable_background_radar &&
+		iface->conf->background_auto_ctrl;
 }
 
 
@@ -1134,6 +1135,9 @@ static void hostpad_dfs_update_background_chain(struct hostapd_iface *iface)
 	u8 oper_centr_freq_seg0_idx = 0;
 	u8 oper_centr_freq_seg1_idx = 0;
 
+	if (!iface->conf->background_auto_ctrl)
+		return;
+
 	/*
 	 * Allow selection of DFS channel in ETSI to comply with
 	 * uniform spreading.
@@ -1187,7 +1191,8 @@ static void hostpad_dfs_update_background_chain(struct hostapd_iface *iface)
 static bool
 hostapd_dfs_is_background_event(struct hostapd_iface *iface, int freq)
 {
-	return dfs_use_radar_background(iface) &&
+	return (iface->drv_flags2 & WPA_DRIVER_RADAR_BACKGROUND) &&
+		iface->conf->enable_background_radar &&
 		iface->radar_background.channel != -1 &&
 		iface->radar_background.freq == freq;
 }
@@ -1307,7 +1312,8 @@ int hostapd_dfs_complete_cac(struct hostapd_iface *iface, int success, int freq,
 			 */
 			if (hostapd_dfs_is_background_event(iface, freq)) {
 				iface->radar_background.cac_started = 0;
-				if (!iface->radar_background.temp_ch)
+				if (!iface->conf->background_auto_ctrl ||
+				    !iface->radar_background.temp_ch)
 					return 0;
 
 				iface->radar_background.temp_ch = 0;
@@ -1478,8 +1484,14 @@ static int
 hostapd_dfs_background_start_channel_switch(struct hostapd_iface *iface,
 					    int freq)
 {
-	if (!dfs_use_radar_background(iface))
-		return -1; /* Background radar chain not supported. */
+	if (!dfs_use_radar_background(iface)) {
+		/* Deactivate background radar upon receiving
+		 * background radar detection in non-auto mode.
+		 */
+		if (hostapd_dfs_is_background_event(iface, freq))
+			iface->radar_background.channel = -1;
+		return -1;
+	}
 
 	wpa_printf(MSG_DEBUG,
 		   "%s called (background CAC active: %s, CSA active: %s)",
-- 
2.45.2

