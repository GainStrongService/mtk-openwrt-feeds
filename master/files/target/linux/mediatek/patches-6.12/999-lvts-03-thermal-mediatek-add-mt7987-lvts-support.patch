From 749fec9ba64f70fa766375a23ed8f79f31ab4ae2 Mon Sep 17 00:00:00 2001
From: Mason Chang <mason-cw.chang@mediatek.com>
Date: Tue, 23 Sep 2025 10:55:54 +0800
Subject: [PATCH] thermal: mediatek: add mt7987 lvts support

---
 drivers/thermal/mediatek/lvts_thermal.c       | 258 ++++++++++++------
 .../thermal/mediatek,lvts-thermal.h           |   3 +
 2 files changed, 185 insertions(+), 76 deletions(-)

diff --git a/drivers/thermal/mediatek/lvts_thermal.c b/drivers/thermal/mediatek/lvts_thermal.c
index eb78871..433a554 100644
--- a/drivers/thermal/mediatek/lvts_thermal.c
+++ b/drivers/thermal/mediatek/lvts_thermal.c
@@ -106,7 +106,8 @@ static int golden_temp_offset;
 
 struct lvts_sensor_data {
 	int dt_id;
-	u8 cal_offsets[3];
+	u8 cal_offsets[4];
+	u8 cal_offset_num;
 };
 
 struct lvts_ctrl_data {
@@ -722,8 +723,8 @@ static int lvts_calibration_init(struct device *dev, struct lvts_ctrl *lvts_ctrl
 					u8 *efuse_calibration,
 					size_t calib_len)
 {
-	int i;
-	u32 gt;
+	int i, j;
+	u32 gt, calib;
 
 	/* A zero value for gt means that device has invalid efuse data */
 	gt = (((u32 *)efuse_calibration)[0] >> lvts_ctrl->lvts_data->gt_calib_bit_offset) & 0xff;
@@ -732,16 +733,18 @@ static int lvts_calibration_init(struct device *dev, struct lvts_ctrl *lvts_ctrl
 		const struct lvts_sensor_data *sensor =
 					&lvts_ctrl_data->lvts_sensor[i];
 
-		if (sensor->cal_offsets[0] >= calib_len ||
-		    sensor->cal_offsets[1] >= calib_len ||
-		    sensor->cal_offsets[2] >= calib_len)
-			return -EINVAL;
+		for (j = 0; j < sensor->cal_offset_num; j++) {
+			if (sensor->cal_offsets[j] >= calib_len)
+				return -EINVAL;
+		}
 
 		if (gt) {
-			lvts_ctrl->calibration[i] =
-				(efuse_calibration[sensor->cal_offsets[0]] << 0) +
-				(efuse_calibration[sensor->cal_offsets[1]] << 8) +
-				(efuse_calibration[sensor->cal_offsets[2]] << 16);
+			calib = 0;
+
+			for (j = 0; j < sensor->cal_offset_num; j++)
+				calib |= (efuse_calibration[sensor->cal_offsets[j]] << (8 * j));
+
+			lvts_ctrl->calibration[i] = calib;
 		} else if (lvts_ctrl->lvts_data->def_calibration) {
 			lvts_ctrl->calibration[i] = lvts_ctrl->lvts_data->def_calibration;
 		} else {
@@ -1444,17 +1447,37 @@ static void lvts_remove(struct platform_device *pdev)
 		lvts_ctrl_set_enable(&lvts_td->lvts_ctrl[i], false);
 }
 
+static const struct lvts_ctrl_data mt7987_lvts_ap_data_ctrl[] = {
+	{
+		.lvts_sensor = {
+			{ .dt_id = MT7987_CPU,
+			  .cal_offsets = { 0x04, 0x05, 0x06, 0x07 },
+			  .cal_offset_num = 4 },
+			{ .dt_id = MT7987_ETH2P5G,
+			  .cal_offsets = { 0x08, 0x09, 0x0a, 0x0b },
+			  .cal_offset_num = 4 }
+		},
+		VALID_SENSOR_MAP(1, 1, 0, 0),
+		.offset = 0x0,
+		.mode = LVTS_MSR_FILTERED_MODE,
+	}
+};
+
 static const struct lvts_ctrl_data mt7988_lvts_ap_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT7988_CPU_0,
-			  .cal_offsets = { 0x00, 0x01, 0x02 } },
+			  .cal_offsets = { 0x00, 0x01, 0x02 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT7988_CPU_1,
-			  .cal_offsets = { 0x04, 0x05, 0x06 } },
+			  .cal_offsets = { 0x04, 0x05, 0x06 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT7988_ETH2P5G_0,
-			  .cal_offsets = { 0x08, 0x09, 0x0a } },
+			  .cal_offsets = { 0x08, 0x09, 0x0a },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT7988_ETH2P5G_1,
-			  .cal_offsets = { 0x0c, 0x0d, 0x0e } }
+			  .cal_offsets = { 0x0c, 0x0d, 0x0e },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 1, 1),
 		.offset = 0x0,
@@ -1463,13 +1486,17 @@ static const struct lvts_ctrl_data mt7988_lvts_ap_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT7988_TOPS_0,
-			   .cal_offsets = { 0x14, 0x15, 0x16 } },
+			  .cal_offsets = { 0x14, 0x15, 0x16 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT7988_TOPS_1,
-			   .cal_offsets = { 0x18, 0x19, 0x1a } },
+			  .cal_offsets = { 0x18, 0x19, 0x1a },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT7988_ETHWARP_0,
-			   .cal_offsets = { 0x1c, 0x1d, 0x1e } },
+			  .cal_offsets = { 0x1c, 0x1d, 0x1e },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT7988_ETHWARP_1,
-			   .cal_offsets = { 0x20, 0x21, 0x22 } }
+			  .cal_offsets = { 0x20, 0x21, 0x22 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 1, 1),
 		.offset = 0x100,
@@ -1534,6 +1561,12 @@ static const u32 mt7988_init_cmds[] = {
 	0xC10306B8
 };
 
+static const u32 mt7987_init_cmds[] = {
+	0xC1030300, 0xC1030420, 0xC1030500, 0xC10307A6, 0xC10308C7,
+	0xC103098D, 0xC1030C7C, 0xC1030AA8, 0xC10308CE, 0xC10308C7,
+	0xC1030B04, 0xC1030E01, 0xC10306B8
+};
+
 /*
  * The MT8186 calibration data is stored as packed 3-byte little-endian
  * values using a weird layout that makes sense only when viewed as a 32-bit
@@ -1552,13 +1585,17 @@ static const struct lvts_ctrl_data mt8186_lvts_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8186_LITTLE_CPU0,
-			  .cal_offsets = { 5, 6, 7 } },
+			  .cal_offsets = { 5, 6, 7 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8186_LITTLE_CPU1,
-			  .cal_offsets = { 10, 11, 4 } },
+			  .cal_offsets = { 10, 11, 4 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8186_LITTLE_CPU2,
-			  .cal_offsets = { 15, 8, 9 } },
+			  .cal_offsets = { 15, 8, 9 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8186_CAM,
-			  .cal_offsets = { 12, 13, 14 } }
+			  .cal_offsets = { 12, 13, 14 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 1, 1),
 		.offset = 0x0,
@@ -1566,9 +1603,11 @@ static const struct lvts_ctrl_data mt8186_lvts_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8186_BIG_CPU0,
-			  .cal_offsets = { 22, 23, 16 } },
+			  .cal_offsets = { 22, 23, 16 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8186_BIG_CPU1,
-			  .cal_offsets = { 27, 20, 21 } }
+			  .cal_offsets = { 27, 20, 21 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 0, 0),
 		.offset = 0x100,
@@ -1576,11 +1615,14 @@ static const struct lvts_ctrl_data mt8186_lvts_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8186_NNA,
-			  .cal_offsets = { 29, 30, 31 } },
+			  .cal_offsets = { 29, 30, 31 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8186_ADSP,
-			  .cal_offsets = { 34, 35, 28 } },
+			  .cal_offsets = { 34, 35, 28 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8186_GPU,
-			  .cal_offsets = { 39, 32, 33 } }
+			  .cal_offsets = { 39, 32, 33 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 1, 0),
 		.offset = 0x200,
@@ -1591,13 +1633,17 @@ static const struct lvts_ctrl_data mt8188_lvts_mcu_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8188_MCU_LITTLE_CPU0,
-			  .cal_offsets = { 22, 23, 24 } },
+			  .cal_offsets = { 22, 23, 24 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8188_MCU_LITTLE_CPU1,
-			  .cal_offsets = { 25, 26, 27 } },
+			  .cal_offsets = { 25, 26, 27 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8188_MCU_LITTLE_CPU2,
-			  .cal_offsets = { 28, 29, 30 } },
+			  .cal_offsets = { 28, 29, 30 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8188_MCU_LITTLE_CPU3,
-			  .cal_offsets = { 31, 32, 33 } },
+			  .cal_offsets = { 31, 32, 33 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 1, 1),
 		.offset = 0x0,
@@ -1605,9 +1651,11 @@ static const struct lvts_ctrl_data mt8188_lvts_mcu_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8188_MCU_BIG_CPU0,
-			  .cal_offsets = { 34, 35, 36 } },
+			  .cal_offsets = { 34, 35, 36 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8188_MCU_BIG_CPU1,
-			  .cal_offsets = { 37, 38, 39 } },
+			  .cal_offsets = { 37, 38, 39 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 0, 0),
 		.offset = 0x100,
@@ -1620,7 +1668,8 @@ static const struct lvts_ctrl_data mt8188_lvts_ap_data_ctrl[] = {
 
 			{ /* unused */ },
 			{ .dt_id = MT8188_AP_APU,
-			  .cal_offsets = { 40, 41, 42 } },
+			  .cal_offsets = { 40, 41, 42 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(0, 1, 0, 0),
 		.offset = 0x0,
@@ -1628,11 +1677,14 @@ static const struct lvts_ctrl_data mt8188_lvts_ap_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8188_AP_GPU0,
-			  .cal_offsets = { 43, 44, 45 } },
+			  .cal_offsets = { 43, 44, 45 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8188_AP_GPU1,
-			  .cal_offsets = { 46, 47, 48 } },
+			  .cal_offsets = { 46, 47, 48 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8188_AP_ADSP,
-			  .cal_offsets = { 49, 50, 51 } },
+			  .cal_offsets = { 49, 50, 51 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 1, 0),
 		.offset = 0x100,
@@ -1640,9 +1692,11 @@ static const struct lvts_ctrl_data mt8188_lvts_ap_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8188_AP_VDO,
-			  .cal_offsets = { 52, 53, 54 } },
+			  .cal_offsets = { 52, 53, 54 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8188_AP_INFRA,
-			  .cal_offsets = { 55, 56, 57 } },
+			  .cal_offsets = { 55, 56, 57 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 0, 0),
 		.offset = 0x200,
@@ -1650,9 +1704,11 @@ static const struct lvts_ctrl_data mt8188_lvts_ap_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8188_AP_CAM1,
-			  .cal_offsets = { 58, 59, 60 } },
+			  .cal_offsets = { 58, 59, 60 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8188_AP_CAM2,
-			  .cal_offsets = { 61, 62, 63 } },
+			  .cal_offsets = { 61, 62, 63 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 0, 0),
 		.offset = 0x300,
@@ -1663,9 +1719,11 @@ static const struct lvts_ctrl_data mt8192_lvts_mcu_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8192_MCU_BIG_CPU0,
-			  .cal_offsets = { 0x04, 0x05, 0x06 } },
+			  .cal_offsets = { 0x04, 0x05, 0x06 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8192_MCU_BIG_CPU1,
-			  .cal_offsets = { 0x08, 0x09, 0x0a } }
+			  .cal_offsets = { 0x08, 0x09, 0x0a },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 0, 0),
 		.offset = 0x0,
@@ -1674,9 +1732,11 @@ static const struct lvts_ctrl_data mt8192_lvts_mcu_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8192_MCU_BIG_CPU2,
-			  .cal_offsets = { 0x0c, 0x0d, 0x0e } },
+			  .cal_offsets = { 0x0c, 0x0d, 0x0e },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8192_MCU_BIG_CPU3,
-			  .cal_offsets = { 0x10, 0x11, 0x12 } }
+			  .cal_offsets = { 0x10, 0x11, 0x12 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 0, 0),
 		.offset = 0x100,
@@ -1685,13 +1745,17 @@ static const struct lvts_ctrl_data mt8192_lvts_mcu_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8192_MCU_LITTLE_CPU0,
-			  .cal_offsets = { 0x14, 0x15, 0x16 } },
+			  .cal_offsets = { 0x14, 0x15, 0x16 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8192_MCU_LITTLE_CPU1,
-			  .cal_offsets = { 0x18, 0x19, 0x1a } },
+			  .cal_offsets = { 0x18, 0x19, 0x1a },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8192_MCU_LITTLE_CPU2,
-			  .cal_offsets = { 0x1c, 0x1d, 0x1e } },
+			  .cal_offsets = { 0x1c, 0x1d, 0x1e },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8192_MCU_LITTLE_CPU3,
-			  .cal_offsets = { 0x20, 0x21, 0x22 } }
+			  .cal_offsets = { 0x20, 0x21, 0x22 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 1, 1),
 		.offset = 0x200,
@@ -1703,9 +1767,11 @@ static const struct lvts_ctrl_data mt8192_lvts_ap_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8192_AP_VPU0,
-			  .cal_offsets = { 0x24, 0x25, 0x26 } },
+			  .cal_offsets = { 0x24, 0x25, 0x26 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8192_AP_VPU1,
-			  .cal_offsets = { 0x28, 0x29, 0x2a } }
+			  .cal_offsets = { 0x28, 0x29, 0x2a },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 0, 0),
 		.offset = 0x0,
@@ -1713,9 +1779,11 @@ static const struct lvts_ctrl_data mt8192_lvts_ap_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8192_AP_GPU0,
-			  .cal_offsets = { 0x2c, 0x2d, 0x2e } },
+			  .cal_offsets = { 0x2c, 0x2d, 0x2e },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8192_AP_GPU1,
-			  .cal_offsets = { 0x30, 0x31, 0x32 } }
+			  .cal_offsets = { 0x30, 0x31, 0x32 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 0, 0),
 		.offset = 0x100,
@@ -1723,9 +1791,11 @@ static const struct lvts_ctrl_data mt8192_lvts_ap_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8192_AP_INFRA,
-			  .cal_offsets = { 0x34, 0x35, 0x36 } },
+			  .cal_offsets = { 0x34, 0x35, 0x36 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8192_AP_CAM,
-			  .cal_offsets = { 0x38, 0x39, 0x3a } },
+			  .cal_offsets = { 0x38, 0x39, 0x3a },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 0, 0),
 		.offset = 0x200,
@@ -1733,11 +1803,14 @@ static const struct lvts_ctrl_data mt8192_lvts_ap_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8192_AP_MD0,
-			  .cal_offsets = { 0x3c, 0x3d, 0x3e } },
+			  .cal_offsets = { 0x3c, 0x3d, 0x3e },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8192_AP_MD1,
-			  .cal_offsets = { 0x40, 0x41, 0x42 } },
+			  .cal_offsets = { 0x40, 0x41, 0x42 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8192_AP_MD2,
-			  .cal_offsets = { 0x44, 0x45, 0x46 } }
+			  .cal_offsets = { 0x44, 0x45, 0x46 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 1, 0),
 		.offset = 0x300,
@@ -1748,9 +1821,11 @@ static const struct lvts_ctrl_data mt8195_lvts_mcu_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8195_MCU_BIG_CPU0,
-			  .cal_offsets = { 0x04, 0x05, 0x06 } },
+			  .cal_offsets = { 0x04, 0x05, 0x06 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8195_MCU_BIG_CPU1,
-			  .cal_offsets = { 0x07, 0x08, 0x09 } }
+			  .cal_offsets = { 0x07, 0x08, 0x09 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 0, 0),
 		.offset = 0x0,
@@ -1758,9 +1833,11 @@ static const struct lvts_ctrl_data mt8195_lvts_mcu_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8195_MCU_BIG_CPU2,
-			  .cal_offsets = { 0x0d, 0x0e, 0x0f } },
+			  .cal_offsets = { 0x0d, 0x0e, 0x0f },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8195_MCU_BIG_CPU3,
-			  .cal_offsets = { 0x10, 0x11, 0x12 } }
+			  .cal_offsets = { 0x10, 0x11, 0x12 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 0, 0),
 		.offset = 0x100,
@@ -1768,13 +1845,17 @@ static const struct lvts_ctrl_data mt8195_lvts_mcu_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8195_MCU_LITTLE_CPU0,
-			  .cal_offsets = { 0x16, 0x17, 0x18 } },
+			  .cal_offsets = { 0x16, 0x17, 0x18 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8195_MCU_LITTLE_CPU1,
-			  .cal_offsets = { 0x19, 0x1a, 0x1b } },
+			  .cal_offsets = { 0x19, 0x1a, 0x1b },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8195_MCU_LITTLE_CPU2,
-			  .cal_offsets = { 0x1c, 0x1d, 0x1e } },
+			  .cal_offsets = { 0x1c, 0x1d, 0x1e },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8195_MCU_LITTLE_CPU3,
-			  .cal_offsets = { 0x1f, 0x20, 0x21 } }
+			  .cal_offsets = { 0x1f, 0x20, 0x21 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 1, 1),
 		.offset = 0x200,
@@ -1785,9 +1866,11 @@ static const struct lvts_ctrl_data mt8195_lvts_ap_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8195_AP_VPU0,
-			  .cal_offsets = { 0x25, 0x26, 0x27 } },
+			  .cal_offsets = { 0x25, 0x26, 0x27 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8195_AP_VPU1,
-			  .cal_offsets = { 0x28, 0x29, 0x2a } }
+			  .cal_offsets = { 0x28, 0x29, 0x2a },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 0, 0),
 		.offset = 0x0,
@@ -1795,9 +1878,11 @@ static const struct lvts_ctrl_data mt8195_lvts_ap_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8195_AP_GPU0,
-			  .cal_offsets = { 0x2e, 0x2f, 0x30 } },
+			  .cal_offsets = { 0x2e, 0x2f, 0x30 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8195_AP_GPU1,
-			  .cal_offsets = { 0x31, 0x32, 0x33 } }
+			  .cal_offsets = { 0x31, 0x32, 0x33 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 0, 0),
 		.offset = 0x100,
@@ -1805,11 +1890,14 @@ static const struct lvts_ctrl_data mt8195_lvts_ap_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8195_AP_VDEC,
-			  .cal_offsets = { 0x37, 0x38, 0x39 } },
+			  .cal_offsets = { 0x37, 0x38, 0x39 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8195_AP_IMG,
-			  .cal_offsets = { 0x3a, 0x3b, 0x3c } },
+			  .cal_offsets = { 0x3a, 0x3b, 0x3c },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8195_AP_INFRA,
-			  .cal_offsets = { 0x3d, 0x3e, 0x3f } }
+			  .cal_offsets = { 0x3d, 0x3e, 0x3f },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 1, 0),
 		.offset = 0x200,
@@ -1817,15 +1905,32 @@ static const struct lvts_ctrl_data mt8195_lvts_ap_data_ctrl[] = {
 	{
 		.lvts_sensor = {
 			{ .dt_id = MT8195_AP_CAM0,
-			  .cal_offsets = { 0x43, 0x44, 0x45 } },
+			  .cal_offsets = { 0x43, 0x44, 0x45 },
+			  .cal_offset_num = 3 },
 			{ .dt_id = MT8195_AP_CAM1,
-			  .cal_offsets = { 0x46, 0x47, 0x48 } }
+			  .cal_offsets = { 0x46, 0x47, 0x48 },
+			  .cal_offset_num = 3 }
 		},
 		VALID_SENSOR_MAP(1, 1, 0, 0),
 		.offset = 0x300,
 	}
 };
 
+static const struct lvts_data mt7987_lvts_ap_data = {
+	.lvts_ctrl	= mt7987_lvts_ap_data_ctrl,
+	.conn_cmd	= mt7988_conn_cmds,
+	.init_cmd	= mt7987_init_cmds,
+	.num_lvts_ctrl	= ARRAY_SIZE(mt7987_lvts_ap_data_ctrl),
+	.num_conn_cmd	= ARRAY_SIZE(mt7988_conn_cmds),
+	.num_init_cmd	= ARRAY_SIZE(mt7987_init_cmds),
+	.temp_factor	= LVTS_COEFF_A_MT7988,
+	.temp_offset	= LVTS_COEFF_B_MT7988,
+	.golden_temp	= LVTS_GOLDEN_TEMP_MT7988,
+	.gt_calib_bit_offset = 24,
+	.def_calibration = 19380,
+	.irq_enable = false,
+};
+
 static const struct lvts_data mt7988_lvts_ap_data = {
 	.lvts_ctrl	= mt7988_lvts_ap_data_ctrl,
 	.conn_cmd	= mt7988_conn_cmds,
@@ -1947,6 +2052,7 @@ static const struct lvts_data mt8195_lvts_ap_data = {
 };
 
 static const struct of_device_id lvts_of_match[] = {
+	{ .compatible = "mediatek,mt7987-lvts-ap", .data = &mt7987_lvts_ap_data },
 	{ .compatible = "mediatek,mt7988-lvts-ap", .data = &mt7988_lvts_ap_data },
 	{ .compatible = "mediatek,mt8186-lvts", .data = &mt8186_lvts_data },
 	{ .compatible = "mediatek,mt8188-lvts-mcu", .data = &mt8188_lvts_mcu_data },
diff --git a/include/dt-bindings/thermal/mediatek,lvts-thermal.h b/include/dt-bindings/thermal/mediatek,lvts-thermal.h
index ddc7302..e9780ed 100644
--- a/include/dt-bindings/thermal/mediatek,lvts-thermal.h
+++ b/include/dt-bindings/thermal/mediatek,lvts-thermal.h
@@ -7,6 +7,9 @@
 #ifndef __MEDIATEK_LVTS_DT_H
 #define __MEDIATEK_LVTS_DT_H
 
+#define MT7987_CPU		0
+#define MT7987_ETH2P5G		1
+
 #define MT7988_CPU_0		0
 #define MT7988_CPU_1		1
 #define MT7988_ETH2P5G_0	2
-- 
2.45.2

