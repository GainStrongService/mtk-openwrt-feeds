--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -2252,7 +2252,7 @@ static const struct flash_info spi_nor_i
 	{ "en25qx128",	INFO(0x1c7118, 0, 64 * 1024,  256,
 			SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ |
 			SPI_NOR_HAS_LOCK | SPI_NOR_HAS_TB) },
-	{ "en25qh256",  INFO(0x1c7019, 0, 64 * 1024,  512, 0) },
+	{ "en25qh256",  INFO(0x1c7019, 0, 64 * 1024,  512, SPI_NOR_4B_OPCODES) },
 	{ "en25qx256a", INFO(0x1c7119, 0, 64 * 1024,  512,
 			SECT_4K | SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ |
 			SPI_NOR_HAS_LOCK | SPI_NOR_HAS_TB) },
@@ -4904,7 +4904,6 @@ static void spi_nor_debugfs_init(struct
 
 static int spi_nor_cal_read(void *priv, u32 *addr, int addrlen, u8 *buf, int readlen)
 {
-	int ret;
 	struct spi_nor *nor = (struct spi_nor *)priv;
 
 	nor->reg_proto = SNOR_PROTO_1_1_1;
@@ -4919,7 +4918,6 @@ static int spi_nor_cal_read(void *priv,
 static int spi_nor_cal_read_4B(void *priv, u32 *addr, int addrlen, u8 *buf,
 			    int readlen)
 {
-	int ret;
 	struct spi_nor *nor = (struct spi_nor *)priv;
 
 	nor->reg_proto = SNOR_PROTO_1_1_1;
@@ -4971,6 +4969,15 @@ static const struct flash_info *spi_nor_
 	return info;
 }
 
+void spi_nor_reset_read(struct spi_nor *nor)
+{
+	nor->reg_proto = SNOR_PROTO_1_1_1;
+	nor->read_proto = SNOR_PROTO_1_1_1;
+	nor->write_proto = SNOR_PROTO_1_1_1;
+	nor->addr_width = 0;
+	nor->read_dummy = 0;
+}
+
 int spi_nor_scan(struct spi_nor *nor, const char *name,
 		 const struct spi_nor_hwcaps *hwcaps)
 {
@@ -5009,11 +5016,11 @@ int spi_nor_scan(struct spi_nor *nor, co
 		ret = spi_mem_do_calibration(nor->spimem,
 					     spi_nor_cal_read, nor);
 		if (ret) {
+			dev_info(dev, "Switch to 4B mode to do SPI calibration\n");
 			ret = spi_mem_do_calibration(nor->spimem,
 						     spi_nor_cal_read_4B, nor);
-			if (ret)
-				return ret;
 		}
+		spi_nor_reset_read(nor);
 	}
 
 	info = spi_nor_get_flash_info(nor, name);
--- a/drivers/spi/spi.c
+++ b/drivers/spi/spi.c
@@ -1177,6 +1177,7 @@ int spi_do_calibration(struct spi_contro
 			 */
 			*target->cal_item = origin;
 			dev_warn(&spi->dev, "calibration failed, fallback to default: 0x%x", origin);
+			ret = -EIO;
 		}
 
 		list_del(pos);
--- a/drivers/char/tpm/tpm_tis_core.c
+++ b/drivers/char/tpm/tpm_tis_core.c
@@ -888,7 +888,7 @@ int tpm_tis_core_init(struct device *dev
 	if (phy_ops->do_calibration) {
 		rc = priv->phy_ops->do_calibration(priv, dev);
 		if (rc)
-			goto out_err;
+			dev_info(dev, "Use default SPI calibration value.\n");
 	}
 
 	if (wait_startup(chip, 0) != 0) {
--- a/drivers/mtd/nand/spi/core.c
+++ b/drivers/mtd/nand/spi/core.c
@@ -1779,7 +1779,7 @@ static int spinand_init(struct spinand_d
 
 	ret = spi_mem_do_calibration(spinand->spimem, spinand_cal_read, spinand);
 	if (ret)
-		dev_err(dev, "Failed to calibrate SPI-NAND (err = %d)\n", ret);
+		dev_info(dev, "Use default SPI calibration value.\n");
 
 	ret = spinand_detect(spinand);
 	if (ret)
