--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@ -23,6 +23,7 @@
 #include <net/rtnetlink.h>
 #include <net/inet_ecn.h>
 #include <net/net_namespace.h>
+#include <net/netfilter/nf_flow_table.h>
 #include <net/netns/generic.h>
 #include <net/tun_proto.h>
 #include <net/vxlan.h>
@@ -2966,6 +2967,24 @@ static int vxlan_fill_metadata_dst(struc
 	return 0;
 }
 
+#if IS_ENABLED(CONFIG_NF_FLOW_TABLE)
+static int vxlan_flow_offload_check(struct flow_offload_hw_path *path)
+{
+	struct net_device *dev = path->dev;
+	struct vxlan_dev *vxlan = netdev_priv(dev);
+
+	if (path->flags & BIT(DEV_PATH_TNL))
+		return -EEXIST;
+
+	path->flags |= BIT(DEV_PATH_TNL);
+	path->tnl_type = FLOW_OFFLOAD_TNL_VXLAN;
+	path->virt_dev = dev;
+	path->dev = vxlan->dev;
+
+	return 0;
+}
+#endif /* CONFIG_NF_FLOW_TABLE */
+
 static const struct net_device_ops vxlan_netdev_ether_ops = {
 	.ndo_init		= vxlan_init,
 	.ndo_uninit		= vxlan_uninit,
@@ -2982,6 +3001,9 @@ static const struct net_device_ops vxlan
 	.ndo_fdb_dump		= vxlan_fdb_dump,
 	.ndo_fdb_get		= vxlan_fdb_get,
 	.ndo_fill_metadata_dst	= vxlan_fill_metadata_dst,
+#if IS_ENABLED(CONFIG_NF_FLOW_TABLE)
+	.ndo_flow_offload_check = vxlan_flow_offload_check,
+#endif
 	.ndo_change_proto_down  = dev_change_proto_down_generic,
 };
 
